{"version":3,"sources":["webpack:///angular2-extjs.3fa5c7271edb8fe4ca71.js","webpack:///webpack/bootstrap 3fa5c7271edb8fe4ca71","webpack:///./app/webpack/angular2-extjs.ts","webpack:///./app/angular2-extjs/ext.button.ts","webpack:///./~/@angular/core/bundles/core.umd.js","webpack:///./~/rxjs/Subject.js","webpack:///./~/rxjs/Observable.js","webpack:///./~/rxjs/util/root.js","webpack:///./~/rxjs/util/toSubscriber.js","webpack:///./~/rxjs/Subscriber.js","webpack:///./~/rxjs/util/isFunction.js","webpack:///./~/rxjs/Subscription.js","webpack:///./~/rxjs/util/isArray.js","webpack:///./~/rxjs/util/isObject.js","webpack:///./~/rxjs/util/tryCatch.js","webpack:///./~/rxjs/util/errorObject.js","webpack:///./~/rxjs/util/UnsubscriptionError.js","webpack:///./~/rxjs/Observer.js","webpack:///./~/rxjs/symbol/rxSubscriber.js","webpack:///./~/rxjs/symbol/observable.js","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js","webpack:///./~/rxjs/SubjectSubscription.js","webpack:///./app/angular2-extjs/ext.base.ts","webpack:///./app/angular2-extjs/ext.grid.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","_m","args","slice","templateId","a","b","c","this","concat","shift","0","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","appendChild","m","Object","prototype","hasOwnProperty","fn","__extends","d","__","constructor","create","__decorate","decorators","target","key","desc","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","k","v","metadata","core_1","ext_base_1","extbuttonMetaData","XTYPE","INPUTNAMES","OUTPUTS","name","parameters","OUTPUTNAMES","extbutton","_super","eRef","resolver","vcRef","ngAfterContentInit","AfterContentInit","extbaseRef","ngOnInit","OnInit","dynamicRef","ContentChildren","extbase","read","ViewContainerRef","QueryList","ViewChild","Component","selector","inputs","outputs","providers","provide","useExisting","forwardRef","template","ElementRef","ComponentFactoryResolver","global","factory","rxjs_Subject","rxjs_Observable","scheduleMicroTask","Zone","current","getTypeNameForDebugging","isPresent","obj","isBlank","isString","isFunction","isPromise","then","isArray","Array","stringify","token","overriddenName","res","toString","newLineIndex","indexOf","substring","looseIdentical","isNaN","getMapKey","value","isJsObject","o","print","console","log","warn","getSymbolIterator","_symbolIterator","globalScope","Symbol","iterator","keys","getOwnPropertyNames","Map","isPrimitive","extractAnnotation","annotation","applyParams","fnOrArray","String","Function","Number","Error","annotations","annoLength","paramsAnnotations","ii","paramAnnotations","j","defineMetadata","Class","clsDef","proto","constructorName","_nextClassId","makeDecorator","props","parentClass","chainFn","DecoratorFactory","objOrType","getMetadata","metaCtor","annotationInstance_1","chainAnnotation","TypeDecorator","cls","getOwnMetadata","makeMetadataCtor","annotationCls","ctor","_this","_i","forEach","prop","argVal","val","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","annotationsForParam","annotationInstance","_a","bind","makePropDecorator","PropDecoratorFactory","decoratorInstance","meta","unshift","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","forwardRefFn","__forward_ref__","resolveForwardRef","unimplemented","_flattenArray","source","item","isListLikeIterable","Map$1","areIterablesEqual","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","findFirstClosedCycle","ListWrapper","contains","constructResolvingPath","reversed","tokenStrs","map","join","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","_mergeMaps","config","StringMapWrapper","set","resolveReflectiveFactory","provider","factoryFn","resolvedDeps","useClass","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","get","useFactory","constructDependencies","deps","useValue","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","multi","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","MapWrapper","values","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","multiProvider","MixingMultiProvidersWithRegularProvidersError","resolvedFactories","resolvedProvider","clone","Type","InvalidProviderError","typeOrFunc","dependencies","params","t","_extractToken","some","NoAnnotationError","depProps","optional","Inject","_createDependency","lowerBoundVisibility","upperBoundVisibility","paramMetadata","Optional","Self","Host","SkipSelf","_mapProviders","injector","_proto","numberOfProviders","getProviderAtIndex","_appIdRandomProviderFactory","_randomChar","StringWrapper","fromCharCode","Math","floor","random","_throwError","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","devModeEqual","detectWTF","wtf","global$1","trace","events","createScope","signature","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","flattenNestedViewRenderNodes","nodes","_flattenNestedViewRenderNodes","renderNodes","node","AppElement","appEl","nativeElement","nestedViews","rootNodesOrAppElements","ensureSlotCount","projectableNodes","expectedSlotCount","EMPTY_ARR","givenSlotCount","createFixedSize","interpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","_toStringWithNull","checkBinding","throwOnChange","oldValue","newValue","ExpressionChangedAfterItHasBeenCheckedError","castByValue","input","pureProxy1","result","v0","UNINITIALIZED","p0","pureProxy2","v1","p1","pureProxy3","v2","p2","pureProxy4","v3","p3","pureProxy5","v4","p4","pureProxy6","v5","p5","pureProxy7","v6","p6","pureProxy8","v7","p7","pureProxy9","v8","p8","pureProxy10","v9","p9","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlaformFactory","marker","OpaqueToken","extraProviders","getPlatform","ReflectiveInjector","resolveAndCreate","assertPlatform","requiredToken","platform","destroyPlatform","destroy","_callAndReportToErrorHandler","errorHandler","handleError","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","checkNotEmpty","modulePath","exportName","queueAnimation","player","_queuedAnimations","triggerQueuedAnimations","play","asNativeElements","debugEls","el","_queryElementChildren","element","predicate","matches","childNodes","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","_reflector","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","animate","timing","styles","stylesEntry","EMPTY_STYLE","AnimationStyleMetadata","AnimationAnimateMetadata","group","steps","AnimationGroupMetadata","sequence","AnimationSequenceMetadata","style","tokens","offset","entry","entryOffset","parseFloat","state","stateNameExpr","AnimationStateDeclarationMetadata","keyframes","AnimationKeyframesSequenceMetadata","transition","stateChangeExpr","animationData","AnimationStateTransitionMetadata","trigger","animation","AnimationEntryMetadata","prepareFinalAnimationStyles","previousStyles","newStyles","nullValue","finalStyles","AUTO_STYLE","balanceAnimationKeyframes","collectedStyles","finalStateStyles","limit","firstKeyframe","flatenedFirstKeyframeStyles","flattenStyles","extraFirstKeyframeStyles","hasExtraFirstStyles","keyframeCollectedStyles","merge","finalKeyframe","insert","flatenedFinalKeyframeStyles","extraFinalKeyframeStyles","hasExtraFinalStyles","clearStyles","collectAndResolveStyles","collection","stylesObj","FILL_STYLE_FLAG","renderStyles","renderer","setElementStyle","_findLastRenderNode","lastNode","nestedView","WorkerGlobalScope","self","assert","condition","code","charCodeAt","s","split","regExp","equals","s2","stripLeft","charVal","pos","stripRight","replace","from","replaceAll","to","replaceAllMapped","cb","splice","substr","compare","NumberWrapper","toFixed","n","fractionDigits","equal","parseIntAutoRadix","text","parseInt","radix","test","NaN","enumerable","configurable","isNumeric","isInteger","Injectable","_desc","ctorParameters","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","Query","first","isViewQuery","descendants","ContentChild","ViewChildren","ChangeDetectorStatus","LifecycleHooks","CHANGE_DETECTION_STRATEGY_VALUES","OnPush","Directive","host","exportAs","queries","viewProviders","changeDetection","templateUrl","styleUrls","animations","encapsulation","interpolation","entryComponents","Pipe","pure","Input","Output","HostBinding","HostListener","LIFECYCLE_HOOKS_VALUES","OnDestroy","DoCheck","OnChanges","AfterContentChecked","AfterViewInit","AfterViewChecked","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","declarations","imports","bootstrap","schemas","ViewEncapsulation","VIEW_ENCAPSULATION_VALUES","Emulated","Native","None","ViewMetadata","_b","BaseError","message","nativeError","_nativeError","stack","WrappedError","error","originalError","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","_NullInjector","notFoundValue","Injector","NULL","Set","createMapFromPairs","size","pairs","pair","createMapFromMap","_clearValues","keyIterator","_arrayFromMap","getValues","createFromStringMap","stringMap","toStringMap","createFromPairs","clearValues","iterable","isEmpty","m1","m2","_c","k1","k2","createGrowableSize","array","forEachWithIndex","last","startIndex","list","reverse","removeAt","removeAll","items","remove","clear","fill","start","end","l","sort","compareFn","toJSON","JSON","maximum","solution","maxValue","Infinity","candidate","candidateValue","flatten","addAll","createSetFromList","lst","add","SetWrapper","createFromList","has","__extends$1","AbstractProviderError","constructResolvingMessage","injectors","addKey","NoProviderError","CyclicDependencyError","InstantiationError","originalException","originalStack","_genMessage","parameter","OutOfBoundsError","provider1","provider2","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","instance","_zipTypesAndAnnotations","paramTypes","paramTypes_1","ctorParam","paramAnnotations_1","propMetadata","propDecorators","propDecorators_1","propMetadata_1","interfaces","hasLifecycleHook","lcInterface","lcProperty","setter","method","functionBody","importUri","resolveIdentifier","moduleUrl","runtime","resolveEnum","enumIdentifier","ReflectorReader","__extends$2","Reflector","reflectionCapabilities","_injectableInfo","_getters","_setters","_methods","_usedKeys","updateCapabilities","caps","trackUsage","listUnusedKeys","allTypes","filter","registerFunction","func","funcInfo","registerType","typeInfo","registerGetters","getters","registerSetters","setters","registerMethods","methods","_containsReflectionInfo","_getReflectionInfo","identifier","properties","_MAX_CONSTRUCTION_COUNTER","UNDEFINED","ReflectiveProtoInjectorInlineStrategy","protoEI","provider0","provider3","provider4","provider5","provider6","provider7","provider8","provider9","keyId0","keyId1","keyId2","keyId3","keyId4","keyId5","keyId6","keyId7","keyId8","keyId9","createInjectorStrategy","ReflectiveInjectorInlineStrategy","ReflectiveProtoInjectorDynamicStrategy","protoInj","len","keyIds","ei","ReflectiveInjectorDynamicStrategy","ReflectiveProtoInjector","_strategy","fromResolvedProviders","protoStrategy","obj0","obj1","obj2","obj3","obj4","obj5","obj6","obj7","obj8","obj9","resetConstructionCounter","_constructionCounter","instantiateProvider","_new","getObjByKeyId","keyId","inj","getObjAtIndex","getMaxNumberOfObjects","objs","resolve","parent","ResolvedReflectiveProviders","ReflectiveInjector_","resolveAndCreateChild","createChildFromResolved","resolveAndInstantiate","instantiateResolved","_parent","_getByKey","getAt","_instantiateProvider","_instantiate","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","d10","d11","d12","d13","d14","d15","d16","d17","d18","d19","_getByReflectiveDependency","displayName","dep","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_throwOrNull","inj_","ErrorHandler","rethrowError","_console","_findOriginalError","_findOriginalStack","context","_findContext","_extractMessage","APP_INITIALIZER","ApplicationInitStatus","appInits","_done","asyncInitPromises","initResult","_donePromise","Promise","all","APP_ID","APP_ID_RANDOM_PROVIDER","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","__extends$4","ComponentStillLoadingError","compType","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","DefaultIterableDifferFactory","supports","cdRef","trackByFn","DefaultIterableDiffer","trackByIdentity","_trackByFn","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","forEachItem","record","_next","forEachOperation","nextIt","nextRemove","currentIndex","adjPreviousIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","check","onDestroy","_reset","itemTrackBy","mayBeDirty","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","CollectionChangeRecord","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","previous","additions","moves","removals","identityChanges","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","afterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","records","oldSeqRecord","lastOldSeqRecord","lastNewSeqRecord","seqChanged","_forEach","newSeqRecord","_maybeAddToChanges","_removeFromSeq","KeyValueChangeRecord","currentValue","_addToAdditions","_isInRemovals","_removeFromRemovals","previousValue","lastRecord","rec","_addToChanges","changes","IterableDiffers","factories","copied","extend","find","f","KeyValueDiffers","kv","WrappedValue","wrapped","wrap","ValueUnwrapper","hasWrappedValue","unwrap","reset","SimpleChange","isFirstChange","ChangeDetectorRef","keyValDiff","iterableDiff","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","SecurityContext","ViewType","Sanitizer","wtfEnabled","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","ViewContainerRef_","_element","_createComponentInContainerScope","_insertScope","_removeScope","_detachScope","ref","views","elementRef","parentInjector","createEmbeddedView","templateRef","viewRef","createComponent","componentFactory","contextInjector","componentRef","hostView","viewRef_","attachView","internalView","move","moveView","view","detachView","detach","parentIndex","parentView","componentView","initComponent","component","componentConstructorViewQueries","mapNestedViews","nestedViewClass","clazz","COMPONENT","refRenderNode","prevView","lastRootNode","attachViewAfter","flatRootNodes","markContentChildAsMoved","viewIndex","addToContentChildren","removeFromContentChildren","__extends$6","currValue","msg","ViewWrappedError","ViewDestroyedError","details","ViewUtils","_renderer","_appId","sanitizer","_nextCompTypeId","createRenderComponentType","renderComponent","renderComponentType","MAX_INTERPOLATION_VALUES","EMPTY_ARRAY","EMPTY_MAP","__extends$5","ComponentRef","ComponentRef_","_hostElement","_componentType","EMPTY_CONTEXT","ComponentFactory","_viewFactory","rootSelectorOrNode","vu","hostElement","__extends$7","NoComponentFactoryError","_NullComponentFactoryResolver","resolveComponentFactory","CodegenComponentFactoryResolver","_factories","componentType","__extends$8","EventEmitter","isAsync","__isAsync","emit","subscribe","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","setTimeout","Subject","NgZoneImpl","onEnter","onLeave","setMicrotask","setMacrotask","onError","assertZonePatched","outer","inner","fork","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","invokeTask","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","macroTask","onHandleError","isInAngularZone","runInner","run","runInnerGuarded","runGuarded","runOuter","NgZone","enableLongStackTrace","_hasPendingMicrotasks","_hasPendingMacrotasks","_isStable","_nesting","_onUnstable","_onMicrotaskEmpty","_onStable","_onErrorEvents","_zoneImpl","_checkStable","hasMicrotasks","hasMacrotasks","assertInAngularZone","assertNotInAngularZone","runOutsideAngular","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","onUnstable","onStable","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","isStable","hasPendingMacrotasks","pop","whenStable","getPendingRequestCount","findBindings","using","exactMatch","findProviders","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","__extends$3","bootstrapModuleFactory","moduleFactory","bootstrapModule","compilerOptions","PlatformRef_","_injector","_modules","_destroyListeners","_destroyed","app","dispose","_bootstrapModuleFactoryWithZone","ngZone","ngZoneInjector","moduleRef","exceptionHandler","initStatus","donePromise","_moduleDoBootstrap","_bootstrapModuleWithZone","componentFactoryCallback","compilerFactory","compiler","createCompiler","appRef","ApplicationRef","bootstrapFactories","compFactory","ngDoBootstrap","ApplicationRef_","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_testabilityRegistry","_testability","_bootstrapListeners","_rootComponents","_rootComponentTypes","_changeDetectorRefs","_runningTick","_enforceNoNewChanges","onMicrotaskEmpty","tick","registerChangeDetector","changeDetector","unregisterChangeDetector","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","changeDetectorRef","listeners","listener","_tickScope","detector","detectChanges","checkNoChanges","ngOnDestroy","__extends$9","NgModuleRef","NgModuleFactory","_injectorClass","_moduleType","_UNDEFINED","NgModuleInjector","createInternal","getInternal","destroyInternal","NgModuleFactoryLoader","_dirty","_results","_emitter","reduce","toArray","notifyOnChanges","setDirty","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","load","path","offlineMode","loadFactory","loadAndCompile","System","factoryClassSuffix","__extends$10","TemplateRef","TemplateRef_","_appElement","viewUtils","__extends$11","ViewRef","EmbeddedViewRef","ViewRef_","_view","_originalMode","cdMode","markForCheck","markPathToRootAsCheckOnce","Detached","reattach","disposables","__extends$12","EventListener","DebugNode","_debugInfo","addChild","references","providerTokens","attributes","classes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","previousChildren","nextChildren","newChild","query","results","queryAll","queryAllNodes","children","triggerEventHandler","eventName","eventObj","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ApplicationModule","ANY_STATE","DEFAULT_STATE","EMPTY_STATE","Math$1","AnimationGroupPlayer","_players","_onDoneFns","_onStartFns","_finished","_started","parentPlayer","count","total","_onFinish","onDone","onStart","hasStarted","pause","restart","finish","setPosition","getPosition","min","AnimationKeyframe","AnimationOutput","phase","fullPropertyName","AnimationPlayer","NoOpAnimationPlayer","AnimationSequencePlayer","_currentIndex","_onNext","_activePlayer","__extends$13","definitions","AnimationStateMetadata","AnimationMetadata","timings","AnimationWithStepsMetadata","_steps","AnimationStyles","DebugDomRootRenderer","_delegate","componentProto","DebugDomRenderer","selectRootElement","selectorOrNode","debugInfo","nativeEl","debugEl","parentElement","createViewRoot","createTemplateAnchor","comment","createText","projectNodes","debugParent","debugElement_1","viewRootNodes","debugNode","debugViewRootNodes","rootNode","destroyView","viewAllNodes","listen","renderElement","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeName","attributeValue","setBindingDebugInfo","setElementClass","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode","startingStyles","duration","delay","easing","StaticNodeDebugInfo","componentToken","refTokens","DebugContext","_nodeIndex","_tplRow","_tplCol","staticNodeDebugInfos","staticNodeInfo","_staticNodeInfo","declarationAppElement","allNodes","varValues","refs","refToken","refName","varValue","injectorGet","AnimationTransitionEvent","fromState","toState","totalTime","ViewAnimationMap","_map","_allPlayers","getAllPlayers","animationName","playersByAnimation","findAllPlayersByElement","existingEntry","__extends$15","_UNDEFINED$1","ElementInjector","__extends$14","_scope_check","AppView","contentChildren","viewChildren","viewContainerElement","numberOfChecks","animationPlayers","_animationListeners","HOST","Destroyed","cancelActiveAnimation","removeAllAnimations","event","triggerAnimationOutput","output","handler","registerAnimationOutput","outputEvent","eventHandler","_AnimationOutputWithHandler","givenProjectableNodes","EMBEDDED","_hasExternalHostElement","subscriptions","dirtyParentQueriesInternal","selectOrCreateHostElement","elementName","nodeIndex","notFoundResult","injectorGetInternal","_destroyRecurse","destroyLocal","unsubscribe","detachInternal","Checked","Errored","throwDestroyedError","detectChangesInternal","CheckOnce","detectContentChildrenChanges","detectViewChildrenChanges","renderAppElement","markAsCheckOnce","parentEl","DebugAppView","_currentDebugContext","_resetDebug","_rethrowWithContext","debug","rowNum","colNum","superHandler","__core_private__","Observable_1","Subscriber_1","Subscription_1","ObjectUnsubscribedError_1","SubjectSubscription_1","rxSubscriber_1","SubjectSubscriber","destination","Subscriber","observers","closed","isStopped","hasError","thrownError","$$rxSubscriber","lift","operator","subject","AnonymousSubject","ObjectUnsubscribedError","copy","_subscribe","subscriber","Subscription","EMPTY","SubjectSubscription","asObservable","observable","Observable","root_1","toSubscriber_1","observable_1","_isScalar","observerOrNext","sink","toSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","PromiseCtor","root","Rx","reject","subscription","$$observable","objectTypes","boolean","function","object","number","string","freeGlobal","nextOrObserver","isFunction_1","Observer_1","destinationOrNext","empty","SafeSubscriber","_error","_complete","_context","__tryOrSetError","__tryOrUnsub","_unsubscribe","x","isArray_1","isObject_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","errors","hasErrors","_subscriptions","trial","tryCatch","errorObject","sub","isObject","UnsubscriptionError","teardown","subscriptionIndex","tryCatcher","tryCatchTarget","getSymbolObservable","subscriberIndex","myElement","componentFactoryResolver","viewContainerRef","metaData","xtype","rootElement","ExtJSBaseRef","extJSRootComponentRef","firstExtJS","extjsObject","setRenderTo","ExtJSComponentRefArray","arrayLength","dynamicTarget","me","eventtasks","__zone_symbol__eventTasks","eventtask","eventIndex","data","eventname","eventparameters","parms","i_1","fit","top","left","width","height","Ext","innerElement","dom","ready","extgridMetaData","extgrid"],"mappings":"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EAAGC,GACvD,GAAuB,gBAAZL,UAAoD,kBAArBA,SAAQM,SAAyB,MAAON,SAAQM,SAASF,EAAGC,IGtK3GE,EAAArE,EAA4H,GAC5HsE,EAAAtE,EAAwB,IAExBuE,EAAA,mBAAAA,MAmJA,MAlJeA,GAAAC,MAAgB,SAChBD,EAAAE,YACb,eACA,cACA,YACA,WACA,WACA,YACA,UACA,OACA,SACA,SACA,WACA,MACA,YACA,aACA,OACA,uBACA,WACA,SACA,YACA,eACA,iBACA,gBACA,OACA,UACA,aACA,UACA,cACA,cACA,SACA,SACA,gBACA,gBACA,OACA,OACA,YACA,UACA,KACA,SACA,SACA,gBACA,eACA,WACA,OACA,YACA,SACA,YACA,WACA,YACA,WACA,QACA,UACA,UACA,UACA,eACA,cACA,cACA,YACA,SACA,YACA,WACA,WACA,QACA,QACA,aACA,UACA,SACA,OACA,gBACA,QACA,eACA,mBACA,OACA,YACA,gBACA,UACA,MACA,cACA,MACA,eACA,eACA,iBACA,KACA,iBACA,UACA,QACA,YACA,QACA,IACA,QACA,IACA,SACA,MACA,UAEaF,EAAAG,UACZC,KAAK,QAAQC,WAAW,2BACxBD,KAAK,aAAaC,WAAW,WAC7BD,KAAK,0BAA0BC,WAAW,KAC1CD,KAAK,aAAaC,WAAW,WAC7BD,KAAK,gBAAgBC,WAAW,WAChCD,KAAK,UAAUC,WAAW,KAC1BD,KAAK,SAASC,WAAW,WACzBD,KAAK,iBAAiBC,WAAW,sBACjCD,KAAK,aAAaC,WAAW,WAC7BD,KAAK,OAAOC,WAAW,WACvBD,KAAK,aAAaC,WAAW,WAC7BD,KAAK,QAAQC,WAAW,uCACxBD,KAAK,oBAAoBC,WAAW,KACpCD,KAAK,UAAUC,WAAW,YAC1BD,KAAK,mBAAmBC,WAAW,sBACnCD,KAAK,UAAUC,WAAW,aAC1BD,KAAK,UAAUC,WAAW,2BAC1BD,KAAK,SAASC,WAAW,YACzBD,KAAK,OAAOC,WAAW,WACvBD,KAAK,MAAMC,WAAW,aACtBD,KAAK,UAAUC,WAAW,WAC1BD,KAAK,aAAaC,WAAW,mBAC7BD,KAAK,QAAQ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EAAA/9C,UAAAk+C,oBAAA,SAAAl/C,GACA,KAAAA,YAAAyjC,OACAzjC,YAAAiW,MACArW,KAAAwyC,OAAAhvB,GAAAk7B,SAEAl5C,EAAAxF,KAAAo/C,uBACA,SAAAvb,IAAAzjC,EAAAJ,KAAAo/C,uBAIAD,EAAA/9C,UAAAq8C,aAAA,SAAA/7B,GACA,GAAA1X,GAAAhK,KACA0/C,EAAAr8C,EAAAjC,UAAAq8C,aAAA5+C,KAAAmB,KAAA0hB,EACA,iBAAAy7B,GACAnzC,EAAAq1C,aACA,KACA,MAAAK,GAAAvC,GAEA,MAAA/8C,GAEA,KADA4J,GAAAs1C,oBAAAl/C,GACAA,KAIA++C,GACK3C,IAqBLkB,GAAA,WACA,QAAAA,GAAAL,EAAAC,GACAt9C,KAAAq9C,SACAr9C,KAAAs9C,UAEA,MAAAI,MAGAiC,IACAt0C,mCACAmY,wBACAE,oCACAjV,wBACAgV,kBACAqB,0BACA0I,mBACAkY,mCACA1xB,cACAwoC,WACA2C,gBACAlP,oBACA31B,yBACAgmB,YACAkE,4BACAvuB,gBACAtC,gCACAgB,eACAqvB,aACAne,6BACAI,gBACAu0B,gBACAH,uBACAhoC,eACAsE,iBACA4oB,kBACAW,mBACA6R,gBACAlmB,0BACA7iB,gBACAuuC,wBACA9S,eACAC,aACAluB,cACAK,cACAG,cACAG,cACAG,cACAG,cACAG,cACAG,cACAG,cACAG,eACA/B,eACAogB,WACAzoB,aACAyf,aACAgpB,uBACAD,mBACAE,2BACAzB,wBACAmB,qBACAh4B,+BACAM,6BACAM,iBACAU,eACAK,gBACAJ,2BACA03B,mBACAhB,mBACAxB,aACAC,iBACAC,eACAj1B,mBACA6W,8BAGAn4B,GAAAsa,kBACAta,EAAAqb,kBACArb,EAAAwb,mBACAxb,EAAAkb,eACAlb,EAAAya,eACAza,EAAA+uC,kBACA/uC,EAAAka,kBACAla,EAAAqa,aACAra,EAAA6a,yBACA7a,EAAA63B,UACA73B,EAAAg4B,oBACAh4B,EAAA2a,wBACA3a,EAAA+3B,0BACA/3B,EAAAo3B,mBACAp3B,EAAAq3B,yBACAr3B,EAA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,GAAIK,KAE/EG,EAAc5B,MAAQA,KAAK4B,YAAe,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HR,GAAvHzB,EAAIkC,UAAU5C,OAAQ6C,EAAInC,EAAI,EAAI+B,EAAkB,OAATE,EAAgBA,EAAOb,OAAOgB,yBAAyBL,EAAQC,GAAOC,CACrH,IAAuB,gBAAZI,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAI7C,GAAI0C,EAAWxC,OAAS,EAAGF,GAAK,EAAGA,KAASqC,EAAIK,EAAW1C,MAAI+C,GAAKnC,EAAI,EAAIyB,EAAEU,GAAKnC,EAAI,EAAIyB,EAAEM,EAAQC,EAAKG,GAAKV,EAAEM,EAAQC,KAASG,EAChJ,OAAOnC,GAAI,GAAKmC,GAAKf,OAAOmB,eAAeR,EAAQC,EAAKG,GAAIA,GAE5DK,EAAcvC,MAAQA,KAAKuC,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZL,UAAoD,kBAArBA,SAAQM,SAAyB,MAAON,SAAQM,SAASF,EAAGC,IuB1oW3GE,EAAArE,EAA4H,GAC5HsE,EAAAtE,EAAwB,IAExB4oD,EAAA,mBAAAA,MA8OA,MA7OeA,GAAApkD,MAAgB,OAChBokD,EAAAnkD,YACb,aACA,gBACA,cACA,cACA,WACA,UACA,OACA,SACA,SACA,aACA,sBACA,WACA,MACA,UACA,YACA,YACA,UACA,aACA,OACA,uBACA,WACA,cACA,iBACA,2BACA,WACA,mBACA,qBACA,SACA,YACA,YACA,iBACA,gBACA,OACA,UACA,aACA,UACA,SACA,SACA,gBACA,cACA,gBACA,OACA,KACA,WACA,WACA,SACA,UACA,aACA,aACA,SACA,UACA,QACA,UACA,SACA,gBACA,eACA,cACA,eACA,SACA,OACA,YACA,cACA,SACA,gBACA,SACA,SACA,YACA,eACA,WACA,YACA,WACA,QACA,OACA,mBACA,UACA,aACA,eACA,UACA,eACA,6BACA,YACA,SACA,YACA,kBACA,wBACA,WACA,WACA,QACA,WACA,aACA,aACA,uBACA,YACA,UAC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","file":"angular2-extjs.3fa5c7271edb8fe4ca71.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tvar _m = moreModules[moduleId];\n/******/\n/******/ \t\t\t// Check if module is deduplicated\n/******/ \t\t\tswitch(typeof _m) {\n/******/ \t\t\tcase \"object\":\n/******/ \t\t\t\t// Module can be created from a template\n/******/ \t\t\t\tmodules[moduleId] = (function(_m) {\n/******/ \t\t\t\t\tvar args = _m.slice(1), templateId = _m[0];\n/******/ \t\t\t\t\treturn function (a,b,c) {\n/******/ \t\t\t\t\t\tmodules[templateId].apply(this, [a,b,c].concat(args));\n/******/ \t\t\t\t\t};\n/******/ \t\t\t\t}(_m));\n/******/ \t\t\t\tbreak;\n/******/ \t\t\tcase \"function\":\n/******/ \t\t\t\t// Normal module\n/******/ \t\t\t\tmodules[moduleId] = _m;\n/******/ \t\t\t\tbreak;\n/******/ \t\t\tdefault:\n/******/ \t\t\t\t// Module is a copy of another module\n/******/ \t\t\t\tmodules[moduleId] = modules[_m];\n/******/ \t\t\t\tbreak;\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/ \t\tif(moreModules[0]) {\n/******/ \t\t\tinstalledModules[0] = 0;\n/******/ \t\t\treturn __webpack_require__(0);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t0:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + \"3fa5c7271edb8fe4ca71\" + \".chunk.js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t__webpack_require__(1);\n\t__webpack_require__(21);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar ext_base_1 = __webpack_require__(20);\n\t// Ext Class - Ext.Button\n\tvar extbuttonMetaData = (function () {\n\t    function extbuttonMetaData() {\n\t    }\n\t    extbuttonMetaData.XTYPE = 'button';\n\t    extbuttonMetaData.INPUTNAMES = [\n\t        'allowDepress',\n\t        'alwaysOnTop',\n\t        'autoEvent',\n\t        'axisLock',\n\t        'badgeCls',\n\t        'badgeText',\n\t        'baseCls',\n\t        'bind',\n\t        'border',\n\t        'bottom',\n\t        'centered',\n\t        'cls',\n\t        'contentEl',\n\t        'controller',\n\t        'data',\n\t        'defaultListenerScope',\n\t        'disabled',\n\t        'docked',\n\t        'draggable',\n\t        'enableToggle',\n\t        'enterAnimation',\n\t        'exitAnimation',\n\t        'flex',\n\t        'floated',\n\t        'fullscreen',\n\t        'handler',\n\t        'hasBadgeCls',\n\t        'hasLabelCls',\n\t        'height',\n\t        'hidden',\n\t        'hideAnimation',\n\t        'hideOnMaskTap',\n\t        'html',\n\t        'icon',\n\t        'iconAlign',\n\t        'iconCls',\n\t        'id',\n\t        'itemId',\n\t        'keyMap',\n\t        'keyMapEnabled',\n\t        'keyMapTarget',\n\t        'labelCls',\n\t        'left',\n\t        'listeners',\n\t        'margin',\n\t        'maxHeight',\n\t        'maxWidth',\n\t        'minHeight',\n\t        'minWidth',\n\t        'modal',\n\t        'padding',\n\t        'plugins',\n\t        'pressed',\n\t        'pressedDelay',\n\t        'pressingCls',\n\t        'pressingCls',\n\t        'publishes',\n\t        'record',\n\t        'reference',\n\t        'relative',\n\t        'renderTo',\n\t        'right',\n\t        'scope',\n\t        'scrollable',\n\t        'session',\n\t        'shadow',\n\t        'shim',\n\t        'showAnimation',\n\t        'style',\n\t        'styleHtmlCls',\n\t        'styleHtmlContent',\n\t        'text',\n\t        'textAlign',\n\t        'toFrontOnShow',\n\t        'tooltip',\n\t        'top',\n\t        'touchAction',\n\t        'tpl',\n\t        'tplWriteMode',\n\t        'translatable',\n\t        'twoWayBindable',\n\t        'ui',\n\t        'useBodyElement',\n\t        'userCls',\n\t        'value',\n\t        'viewModel',\n\t        'width',\n\t        'x',\n\t        'xtype',\n\t        'y',\n\t        'zIndex',\n\t        'fit',\n\t        'config'\n\t    ];\n\t    extbuttonMetaData.OUTPUTS = [\n\t        { name: 'added', parameters: 'button,container,index' },\n\t        { name: 'beforehide', parameters: 'button' },\n\t        { name: 'beforeorientationchange', parameters: '' },\n\t        { name: 'beforeshow', parameters: 'button' },\n\t        { name: 'beforetofront', parameters: 'button' },\n\t        { name: 'destroy', parameters: '' },\n\t        { name: 'erased', parameters: 'button' },\n\t        { name: 'floatingchange', parameters: 'button,positioned' },\n\t        { name: 'fullscreen', parameters: 'button' },\n\t        { name: 'hide', parameters: 'button' },\n\t        { name: 'initialize', parameters: 'button' },\n\t        { name: 'moved', parameters: 'button,container,toIndex,fromIndex' },\n\t        { name: 'orientationchange', parameters: '' },\n\t        { name: 'painted', parameters: 'element' },\n\t        { name: 'positionedchange', parameters: 'button,positioned' },\n\t        { name: 'release', parameters: 'button,e' },\n\t        { name: 'removed', parameters: 'button,container,index' },\n\t        { name: 'resize', parameters: 'element' },\n\t        { name: 'show', parameters: 'button' },\n\t        { name: 'tap', parameters: 'button,e' },\n\t        { name: 'tofront', parameters: 'button' },\n\t        { name: 'updatedata', parameters: 'button,newData' },\n\t        { name: 'ready', parameters: '' }\n\t    ];\n\t    extbuttonMetaData.OUTPUTNAMES = [\n\t        'added',\n\t        'beforehide',\n\t        'beforeorientationchange',\n\t        'beforeshow',\n\t        'beforetofront',\n\t        'destroy',\n\t        'erased',\n\t        'floatingchange',\n\t        'fullscreen',\n\t        'hide',\n\t        'initialize',\n\t        'moved',\n\t        'orientationchange',\n\t        'painted',\n\t        'positionedchange',\n\t        'release',\n\t        'removed',\n\t        'resize',\n\t        'show',\n\t        'tap',\n\t        'tofront',\n\t        'updatedata',\n\t        'ready'\n\t    ];\n\t    return extbuttonMetaData;\n\t}());\n\tvar extbutton = (function (_super) {\n\t    __extends(extbutton, _super);\n\t    function extbutton(eRef, resolver, vcRef) {\n\t        _super.call(this, eRef, resolver, vcRef, extbuttonMetaData);\n\t    }\n\t    extbutton.prototype.ngAfterContentInit = function () { this.AfterContentInit(this.extbaseRef); };\n\t    extbutton.prototype.ngOnInit = function () { this.OnInit(this.dynamicRef, extbuttonMetaData); };\n\t    __decorate([\n\t        core_1.ContentChildren(ext_base_1.extbase, { read: core_1.ViewContainerRef }), \n\t        __metadata('design:type', core_1.QueryList)\n\t    ], extbutton.prototype, \"extbaseRef\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('dynamic', { read: core_1.ViewContainerRef }), \n\t        __metadata('design:type', core_1.ViewContainerRef)\n\t    ], extbutton.prototype, \"dynamicRef\", void 0);\n\t    extbutton = __decorate([\n\t        core_1.Component({\n\t            selector: 'ext-' + extbuttonMetaData.XTYPE,\n\t            inputs: extbuttonMetaData.INPUTNAMES,\n\t            outputs: extbuttonMetaData.OUTPUTNAMES,\n\t            providers: [{ provide: ext_base_1.extbase, useExisting: core_1.forwardRef(function () { return extbutton; }) }],\n\t            template: '<template #dynamic></template>'\n\t        }), \n\t        __metadata('design:paramtypes', [core_1.ElementRef, core_1.ComponentFactoryResolver, core_1.ViewContainerRef])\n\t    ], extbutton);\n\t    return extbutton;\n\t}(ext_base_1.extbase));\n\texports.extbutton = extbutton;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.0.0\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(3), __webpack_require__(4)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.Rx,global.Rx));\n\t}(this, function (exports,rxjs_Subject,rxjs_Observable) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = self;\n\t        }\n\t        else {\n\t            globalScope = global;\n\t        }\n\t    }\n\t    else {\n\t        globalScope = window;\n\t    }\n\t    function scheduleMicroTask(fn) {\n\t        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var global$1 = globalScope;\n\t    function getTypeNameForDebugging(type) {\n\t        if (type['name']) {\n\t            return type['name'];\n\t        }\n\t        return typeof type;\n\t    }\n\t    var Math = global$1.Math;\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    global$1.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    function isPresent(obj) {\n\t        return obj !== undefined && obj !== null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj === undefined || obj === null;\n\t    }\n\t    function isString(obj) {\n\t        return typeof obj === 'string';\n\t    }\n\t    function isFunction(obj) {\n\t        return typeof obj === 'function';\n\t    }\n\t    function isPromise(obj) {\n\t        // allow any Promise/A+ compliant thenable.\n\t        // It's up to the caller to ensure that obj.then conforms to the spec\n\t        return isPresent(obj) && isFunction(obj.then);\n\t    }\n\t    function isArray(obj) {\n\t        return Array.isArray(obj);\n\t    }\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token === undefined || token === null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return token.name;\n\t        }\n\t        var res = token.toString();\n\t        var newLineIndex = res.indexOf('\\n');\n\t        return (newLineIndex === -1) ? res : res.substring(0, newLineIndex);\n\t    }\n\t    var StringWrapper = (function () {\n\t        function StringWrapper() {\n\t        }\n\t        StringWrapper.fromCharCode = function (code) { return String.fromCharCode(code); };\n\t        StringWrapper.charCodeAt = function (s, index) { return s.charCodeAt(index); };\n\t        StringWrapper.split = function (s, regExp) { return s.split(regExp); };\n\t        StringWrapper.equals = function (s, s2) { return s === s2; };\n\t        StringWrapper.stripLeft = function (s, charVal) {\n\t            if (s && s.length) {\n\t                var pos = 0;\n\t                for (var i = 0; i < s.length; i++) {\n\t                    if (s[i] != charVal)\n\t                        break;\n\t                    pos++;\n\t                }\n\t                s = s.substring(pos);\n\t            }\n\t            return s;\n\t        };\n\t        StringWrapper.stripRight = function (s, charVal) {\n\t            if (s && s.length) {\n\t                var pos = s.length;\n\t                for (var i = s.length - 1; i >= 0; i--) {\n\t                    if (s[i] != charVal)\n\t                        break;\n\t                    pos--;\n\t                }\n\t                s = s.substring(0, pos);\n\t            }\n\t            return s;\n\t        };\n\t        StringWrapper.replace = function (s, from, replace) {\n\t            return s.replace(from, replace);\n\t        };\n\t        StringWrapper.replaceAll = function (s, from, replace) {\n\t            return s.replace(from, replace);\n\t        };\n\t        StringWrapper.slice = function (s, from, to) {\n\t            if (from === void 0) { from = 0; }\n\t            if (to === void 0) { to = null; }\n\t            return s.slice(from, to === null ? undefined : to);\n\t        };\n\t        StringWrapper.replaceAllMapped = function (s, from, cb) {\n\t            return s.replace(from, function () {\n\t                var matches = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    matches[_i - 0] = arguments[_i];\n\t                }\n\t                // Remove offset & string from the result array\n\t                matches.splice(-2, 2);\n\t                // The callback receives match, p1, ..., pn\n\t                return cb(matches);\n\t            });\n\t        };\n\t        StringWrapper.contains = function (s, substr) { return s.indexOf(substr) != -1; };\n\t        StringWrapper.compare = function (a, b) {\n\t            if (a < b) {\n\t                return -1;\n\t            }\n\t            else if (a > b) {\n\t                return 1;\n\t            }\n\t            else {\n\t                return 0;\n\t            }\n\t        };\n\t        return StringWrapper;\n\t    }());\n\t    var NumberWrapper = (function () {\n\t        function NumberWrapper() {\n\t        }\n\t        NumberWrapper.toFixed = function (n, fractionDigits) { return n.toFixed(fractionDigits); };\n\t        NumberWrapper.equal = function (a, b) { return a === b; };\n\t        NumberWrapper.parseIntAutoRadix = function (text) {\n\t            var result = parseInt(text);\n\t            if (isNaN(result)) {\n\t                throw new Error('Invalid integer literal when parsing ' + text);\n\t            }\n\t            return result;\n\t        };\n\t        NumberWrapper.parseInt = function (text, radix) {\n\t            if (radix == 10) {\n\t                if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n\t                    return parseInt(text, radix);\n\t                }\n\t            }\n\t            else if (radix == 16) {\n\t                if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n\t                    return parseInt(text, radix);\n\t                }\n\t            }\n\t            else {\n\t                var result = parseInt(text, radix);\n\t                if (!isNaN(result)) {\n\t                    return result;\n\t                }\n\t            }\n\t            throw new Error('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n\t        };\n\t        Object.defineProperty(NumberWrapper, \"NaN\", {\n\t            get: function () { return NaN; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n\t        NumberWrapper.isNaN = function (value) { return isNaN(value); };\n\t        NumberWrapper.isInteger = function (value) { return Number.isInteger(value); };\n\t        return NumberWrapper;\n\t    }());\n\t    // JS has NaN !== NaN\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\n\t    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n\t    function getMapKey(value) {\n\t        return value;\n\t    }\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    function print(obj) {\n\t        console.log(obj);\n\t    }\n\t    function warn(obj) {\n\t        console.warn(obj);\n\t    }\n\t    var _symbolIterator = null;\n\t    function getSymbolIterator() {\n\t        if (isBlank(_symbolIterator)) {\n\t            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var i = 0; i < keys.length; ++i) {\n\t                    var key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        Map.prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    var _nextClassId = 0;\n\t    function extractAnnotation(annotation) {\n\t        if (isFunction(annotation) && annotation.hasOwnProperty('annotation')) {\n\t            // it is a decorator, extract annotation\n\t            annotation = annotation.annotation;\n\t        }\n\t        return annotation;\n\t    }\n\t    function applyParams(fnOrArray, key) {\n\t        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n\t            fnOrArray === Number || fnOrArray === Array) {\n\t            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n\t        }\n\t        if (isFunction(fnOrArray)) {\n\t            return fnOrArray;\n\t        }\n\t        else if (fnOrArray instanceof Array) {\n\t            var annotations = fnOrArray;\n\t            var annoLength = annotations.length - 1;\n\t            var fn = fnOrArray[annoLength];\n\t            if (!isFunction(fn)) {\n\t                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n\t            }\n\t            if (annoLength != fn.length) {\n\t                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n\t            }\n\t            var paramsAnnotations = [];\n\t            for (var i = 0, ii = annotations.length - 1; i < ii; i++) {\n\t                var paramAnnotations = [];\n\t                paramsAnnotations.push(paramAnnotations);\n\t                var annotation = annotations[i];\n\t                if (annotation instanceof Array) {\n\t                    for (var j = 0; j < annotation.length; j++) {\n\t                        paramAnnotations.push(extractAnnotation(annotation[j]));\n\t                    }\n\t                }\n\t                else if (isFunction(annotation)) {\n\t                    paramAnnotations.push(extractAnnotation(annotation));\n\t                }\n\t                else {\n\t                    paramAnnotations.push(annotation);\n\t                }\n\t            }\n\t            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n\t            return fn;\n\t        }\n\t        else {\n\t            throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n\t        }\n\t    }\n\t    /**\n\t     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n\t     *\n\t     * ## Basic Example\n\t     *\n\t     * ```\n\t     * var Greeter = ng.Class({\n\t     *   constructor: function(name) {\n\t     *     this.name = name;\n\t     *   },\n\t     *\n\t     *   greet: function() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class Greeter {\n\t     *   constructor(name) {\n\t     *     this.name = name;\n\t     *   }\n\t     *\n\t     *   greet() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * or equivalent to ES5:\n\t     *\n\t     * ```\n\t     * var Greeter = function (name) {\n\t     *   this.name = name;\n\t     * }\n\t     *\n\t     * Greeter.prototype.greet = function () {\n\t     *   alert('Hello ' + this.name + '!');\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with parameter annotations\n\t     *\n\t     * ```\n\t     * var MyService = ng.Class({\n\t     *   constructor: [String, [new Query(), QueryList], function(name, queryList) {\n\t     *     ...\n\t     *   }]\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class MyService {\n\t     *   constructor(name: string, @Query() queryList: QueryList) {\n\t     *     ...\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with inheritance\n\t     *\n\t     * ```\n\t     * var Shape = ng.Class({\n\t     *   constructor: (color) {\n\t     *     this.color = color;\n\t     *   }\n\t     * });\n\t     *\n\t     * var Square = ng.Class({\n\t     *   extends: Shape,\n\t     *   constructor: function(color, size) {\n\t     *     Shape.call(this, color);\n\t     *     this.size = size;\n\t     *   }\n\t     * });\n\t     * ```\n\t     * @stable\n\t     */\n\t    function Class(clsDef) {\n\t        var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\t        var proto = constructor.prototype;\n\t        if (clsDef.hasOwnProperty('extends')) {\n\t            if (isFunction(clsDef.extends)) {\n\t                constructor.prototype = proto =\n\t                    Object.create(clsDef.extends.prototype);\n\t            }\n\t            else {\n\t                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n\t            }\n\t        }\n\t        for (var key in clsDef) {\n\t            if (key != 'extends' && key != 'prototype' && clsDef.hasOwnProperty(key)) {\n\t                proto[key] = applyParams(clsDef[key], key);\n\t            }\n\t        }\n\t        if (this && this.annotations instanceof Array) {\n\t            Reflect.defineMetadata('annotations', this.annotations, constructor);\n\t        }\n\t        var constructorName = constructor['name'];\n\t        if (!constructorName || constructorName === 'constructor') {\n\t            constructor['overriddenName'] = \"class\" + _nextClassId++;\n\t        }\n\t        return constructor;\n\t    }\n\t    var Reflect = global$1.Reflect;\n\t    function makeDecorator(name, props, parentClass, chainFn) {\n\t        if (chainFn === void 0) { chainFn = null; }\n\t        var metaCtor = makeMetadataCtor([props]);\n\t        function DecoratorFactory(objOrType) {\n\t            if (!(Reflect && Reflect.getMetadata)) {\n\t                throw 'reflect-metadata shim is required when using class decorators';\n\t            }\n\t            if (this instanceof DecoratorFactory) {\n\t                metaCtor.call(this, objOrType);\n\t                return this;\n\t            }\n\t            else {\n\t                var annotationInstance_1 = new DecoratorFactory(objOrType);\n\t                var chainAnnotation = isFunction(this) && this.annotations instanceof Array ? this.annotations : [];\n\t                chainAnnotation.push(annotationInstance_1);\n\t                var TypeDecorator = function TypeDecorator(cls) {\n\t                    var annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n\t                    annotations.push(annotationInstance_1);\n\t                    Reflect.defineMetadata('annotations', annotations, cls);\n\t                    return cls;\n\t                };\n\t                TypeDecorator.annotations = chainAnnotation;\n\t                TypeDecorator.Class = Class;\n\t                if (chainFn)\n\t                    chainFn(TypeDecorator);\n\t                return TypeDecorator;\n\t            }\n\t        }\n\t        if (parentClass) {\n\t            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        DecoratorFactory.annotationCls = DecoratorFactory;\n\t        return DecoratorFactory;\n\t    }\n\t    function makeMetadataCtor(props) {\n\t        function ctor() {\n\t            var _this = this;\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            props.forEach(function (prop, i) {\n\t                var argVal = args[i];\n\t                if (Array.isArray(prop)) {\n\t                    // plain parameter\n\t                    var val = !argVal || argVal === undefined ? prop[1] : argVal;\n\t                    _this[prop[0]] = val;\n\t                }\n\t                else {\n\t                    for (var propName in prop) {\n\t                        var val = !argVal || argVal[propName] === undefined ? prop[propName] : argVal[propName];\n\t                        _this[propName] = val;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        return ctor;\n\t    }\n\t    function makeParamDecorator(name, props, parentClass) {\n\t        var metaCtor = makeMetadataCtor(props);\n\t        function ParamDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof ParamDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n\t            ParamDecorator.annotation = annotationInstance;\n\t            return ParamDecorator;\n\t            function ParamDecorator(cls, unusedKey, index) {\n\t                var parameters = Reflect.getMetadata('parameters', cls) || [];\n\t                // there might be gaps if some in between parameters do not have annotations.\n\t                // we pad with nulls.\n\t                while (parameters.length <= index) {\n\t                    parameters.push(null);\n\t                }\n\t                parameters[index] = parameters[index] || [];\n\t                var annotationsForParam = parameters[index];\n\t                annotationsForParam.push(annotationInstance);\n\t                Reflect.defineMetadata('parameters', parameters, cls);\n\t                return cls;\n\t            }\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n\t        return ParamDecoratorFactory;\n\t    }\n\t    function makePropDecorator(name, props, parentClass) {\n\t        var metaCtor = makeMetadataCtor(props);\n\t        function PropDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof PropDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            else {\n\t                var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n\t                return function PropDecorator(target, name) {\n\t                    var meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n\t                    meta[name] = meta[name] || [];\n\t                    meta[name].unshift(decoratorInstance);\n\t                    Reflect.defineMetadata('propMetadata', meta, target.constructor);\n\t                };\n\t            }\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n\t        return PropDecoratorFactory;\n\t    }\n\t\n\t    /**\n\t     * Inject decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Inject = makeParamDecorator('Inject', [['token', undefined]]);\n\t    /**\n\t     * Optional decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Optional = makeParamDecorator('Optional', []);\n\t    /**\n\t     * Injectable decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Injectable = makeParamDecorator('Injectable', []);\n\t    /**\n\t     * Self decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Self = makeParamDecorator('Self', []);\n\t    /**\n\t     * SkipSelf decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var SkipSelf = makeParamDecorator('SkipSelf', []);\n\t    /**\n\t     * Host decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Host = makeParamDecorator('Host', []);\n\t\n\t    /**\n\t     * Creates a token that can be used in a DI Provider.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n\t     *\n\t     * ```typescript\n\t     * var t = new OpaqueToken(\"value\");\n\t     *\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   {provide: t, useValue: \"bindingValue\"}\n\t     * ]);\n\t     *\n\t     * expect(injector.get(t)).toEqual(\"bindingValue\");\n\t     * ```\n\t     *\n\t     * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n\t     * caused by multiple providers using the same string as two different tokens.\n\t     *\n\t     * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n\t     * error messages.\n\t     * @stable\n\t     */\n\t    // so that metadata is gathered for this class\n\t    var OpaqueToken = (function () {\n\t        function OpaqueToken(_desc) {\n\t            this._desc = _desc;\n\t        }\n\t        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n\t        OpaqueToken.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        OpaqueToken.ctorParameters = [\n\t            null,\n\t        ];\n\t        return OpaqueToken;\n\t    }());\n\t\n\t    /**\n\t     * This token can be used to create a virtual provider that will populate the\n\t     * `entryComponents` fields of components and ng modules based on its `useValue`.\n\t     * All components that are referenced in the `useValue` value (either directly\n\t     * or in a nested array or map) will be added to the `entryComponents` property.\n\t     *\n\t     * ### Example\n\t     * The following example shows how the router can populate the `entryComponents`\n\t     * field of an NgModule based on the router configuration which refers\n\t     * to components.\n\t     *\n\t     * ```typescript\n\t     * // helper function inside the router\n\t     * function provideRoutes(routes) {\n\t     *   return [\n\t     *     {provide: ROUTES, useValue: routes},\n\t     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n\t     *   ];\n\t     * }\n\t     *\n\t     * // user code\n\t     * let routes = [\n\t     *   {path: '/root', component: RootComp},\n\t     *   {path: '/teams', component: TeamsComp}\n\t     * ];\n\t     *\n\t     * @NgModule({\n\t     *   providers: [provideRoutes(routes)]\n\t     * })\n\t     * class ModuleWithRoutes {}\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n\t    /**\n\t     * Attribute decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n\t    /**\n\t     * Base class for query metadata.\n\t     *\n\t     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n\t     * more information.\n\t     *\n\t     * @stable\n\t     */\n\t    var Query = (function () {\n\t        function Query() {\n\t        }\n\t        return Query;\n\t    }());\n\t    /**\n\t     * ContentChildren decorator and metadata.\n\t     *\n\t     *  @stable\n\t     *  @Annotation\n\t     */\n\t    var ContentChildren = makePropDecorator('ContentChildren', [\n\t        ['selector', undefined],\n\t        { first: false, isViewQuery: false, descendants: false, read: undefined }\n\t    ], Query);\n\t    /**\n\t     * @whatItDoes Configures a content query.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n\t     *\n\t     * @description\n\t     *\n\t     * You can use ContentChild to get the first element or the directive matching the selector from the\n\t     * content DOM. If the content DOM changes, and a new child matches the selector,\n\t     * the property will be updated.\n\t     *\n\t     * Content queries are set before the `ngAfterContentInit` callback is called.\n\t     *\n\t     * **Metadata Properties**:\n\t     *\n\t     * * **selector** - the directive type or the name used for querying.\n\t     * * **read** - read a different token from the queried element.\n\t     *\n\t     * Let's look at an example:\n\t     *\n\t     * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/core`\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ContentChild = makePropDecorator('ContentChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: false,\n\t            descendants: false,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * @whatItDoes Configures a view query.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n\t     *\n\t     * @description\n\t     *\n\t     * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n\t     * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n\t     * and the changes observable of the query list will emit a new value.\n\t     *\n\t     * View queries are set before the `ngAfterViewInit` callback is called.\n\t     *\n\t     * **Metadata Properties**:\n\t     *\n\t     * * **selector** - the directive type or the name used for querying.\n\t     * * **read** - read a different token from the queried elements.\n\t     *\n\t     * Let's look at an example:\n\t     *\n\t     * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/core`\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ViewChildren = makePropDecorator('ViewChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * ViewChild decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ViewChild = makePropDecorator('ViewChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t\n\t    /**\n\t     * Describes within the change detector which strategy will be used the next time change\n\t     * detection is triggered.\n\t     * @stable\n\t     */\n\t    exports.ChangeDetectionStrategy;\n\t    (function (ChangeDetectionStrategy) {\n\t        /**\n\t         * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n\t         */\n\t        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n\t        /**\n\t         * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n\t         */\n\t        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n\t    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n\t    /**\n\t     * Describes the status of the detector.\n\t     */\n\t    var ChangeDetectorStatus;\n\t    (function (ChangeDetectorStatus) {\n\t        /**\n\t         * `CheckedOnce` means that after calling detectChanges the mode of the change detector\n\t         * will become `Checked`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n\t        /**\n\t         * `Checked` means that the change detector should be skipped until its mode changes to\n\t         * `CheckOnce`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n\t        /**\n\t         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n\t         * will remain `CheckAlways`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n\t        /**\n\t         * `Detached` means that the change detector sub tree is not a part of the main tree and\n\t         * should be skipped.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n\t        /**\n\t         * `Errored` means that the change detector encountered an error checking a binding\n\t         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n\t         * detectors in this state will no longer detect changes.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n\t        /**\n\t         * `Destroyed` means that the change detector is destroyed.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n\t    })(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n\t    /**\n\t     * List of possible {@link ChangeDetectionStrategy} values.\n\t     */\n\t    var CHANGE_DETECTION_STRATEGY_VALUES = [\n\t        exports.ChangeDetectionStrategy.OnPush,\n\t        exports.ChangeDetectionStrategy.Default,\n\t    ];\n\t    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n\t        return isBlank(changeDetectionStrategy) ||\n\t            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n\t    }\n\t\n\t    /**\n\t     * Directive decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Directive = makeDecorator('Directive', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        providers: undefined,\n\t        exportAs: undefined,\n\t        queries: undefined\n\t    });\n\t    /**\n\t     * Component decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Component = makeDecorator('Component', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        exportAs: undefined,\n\t        moduleId: undefined,\n\t        providers: undefined,\n\t        viewProviders: undefined,\n\t        changeDetection: exports.ChangeDetectionStrategy.Default,\n\t        queries: undefined,\n\t        templateUrl: undefined,\n\t        template: undefined,\n\t        styleUrls: undefined,\n\t        styles: undefined,\n\t        animations: undefined,\n\t        encapsulation: undefined,\n\t        interpolation: undefined,\n\t        entryComponents: undefined\n\t    }, Directive);\n\t    /**\n\t     * Pipe decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Pipe = makeDecorator('Pipe', {\n\t        name: undefined,\n\t        pure: true,\n\t    });\n\t    /**\n\t     * Input decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * Output decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * HostBinding decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n\t    /**\n\t     * HostBinding decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @stable\n\t     */\n\t    var LifecycleHooks;\n\t    (function (LifecycleHooks) {\n\t        LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n\t        LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n\t        LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n\t        LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n\t    })(LifecycleHooks || (LifecycleHooks = {}));\n\t    var LIFECYCLE_HOOKS_VALUES = [\n\t        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n\t        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n\t        LifecycleHooks.AfterViewChecked\n\t    ];\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n\t     *\n\t     * @description\n\t     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n\t     * and content children are checked if at least one of them has changed.\n\t     * The `changes` parameter contains the changed properties.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnChanges = (function () {\n\t        function OnChanges() {\n\t        }\n\t        return OnChanges;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n\t     *\n\t     * @description\n\t     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n\t     * first time, and before any of its children have been checked. It is invoked only once when the\n\t     * directive is instantiated.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnInit = (function () {\n\t        function OnInit() {\n\t        }\n\t        return OnInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n\t     *\n\t     * @description\n\t     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n\t     * algorithm. The default change detection algorithm looks for differences by comparing\n\t     * bound-property values by reference across change detection runs.\n\t     *\n\t     * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n\t     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n\t     * detector detects changes.\n\t     *\n\t     * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n\t     * for collections.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var DoCheck = (function () {\n\t        function DoCheck() {\n\t        }\n\t        return DoCheck;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when a directive or pipe is destroyed.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n\t     *\n\t     * @description\n\t     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n\t     * instance is destroyed.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnDestroy = (function () {\n\t        function OnDestroy() {\n\t        }\n\t        return OnDestroy;\n\t    }());\n\t    /**\n\t     *\n\t     * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterContentInit = (function () {\n\t        function AfterContentInit() {\n\t        }\n\t        return AfterContentInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterContentChecked = (function () {\n\t        function AfterContentChecked() {\n\t        }\n\t        return AfterContentChecked;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterViewInit = (function () {\n\t        function AfterViewInit() {\n\t        }\n\t        return AfterViewInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterViewChecked = (function () {\n\t        function AfterViewChecked() {\n\t        }\n\t        return AfterViewChecked;\n\t    }());\n\t\n\t    /**\n\t     * Defines a schema that will allow:\n\t     * - any non-angular elements with a `-` in their name,\n\t     * - any properties on elements with a `-` in their name which is the common rule for custom\n\t     * elements.\n\t     *\n\t     * @stable\n\t     */\n\t    var CUSTOM_ELEMENTS_SCHEMA = {\n\t        name: 'custom-elements'\n\t    };\n\t    /**\n\t     * Defines a schema that will allow any property on any element.\n\t     *\n\t     * @experimental\n\t     */\n\t    var NO_ERRORS_SCHEMA = {\n\t        name: 'no-errors-schema'\n\t    };\n\t    /**\n\t     * NgModule decorator and metadata\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var NgModule = makeDecorator('NgModule', {\n\t        providers: undefined,\n\t        declarations: undefined,\n\t        imports: undefined,\n\t        exports: undefined,\n\t        entryComponents: undefined,\n\t        bootstrap: undefined,\n\t        schemas: undefined,\n\t        id: undefined,\n\t    });\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Defines template and style encapsulation options available for Component's {@link Component}.\n\t     *\n\t     * See {@link ViewMetadata#encapsulation}.\n\t     * @stable\n\t     */\n\t    exports.ViewEncapsulation;\n\t    (function (ViewEncapsulation) {\n\t        /**\n\t         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n\t         * Element and pre-processing the style rules provided via\n\t         * {@link ViewMetadata#styles} or {@link ViewMetadata#stylesUrls}, and adding the new Host Element\n\t         * attribute to all selectors.\n\t         *\n\t         * This is the default option.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n\t        /**\n\t         * Use the native encapsulation mechanism of the renderer.\n\t         *\n\t         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n\t         * creating a ShadowRoot for Component's Host Element.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n\t        /**\n\t         * Don't provide any template or style encapsulation.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n\t    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\t    var VIEW_ENCAPSULATION_VALUES = [exports.ViewEncapsulation.Emulated, exports.ViewEncapsulation.Native, exports.ViewEncapsulation.None];\n\t    /**\n\t     * Metadata properties available for configuring Views.\n\t     *\n\t     * Each Angular component requires a single `@Component` and at least one `@View` annotation. The\n\t     * `@View` annotation specifies the HTML template to use, and lists the directives that are active\n\t     * within the template.\n\t     *\n\t     * When a component is instantiated, the template is loaded into the component's shadow root, and\n\t     * the expressions and statements in the template are evaluated against the component.\n\t     *\n\t     * For details on the `@Component` annotation, see {@link Component}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'greet',\n\t     *   template: 'Hello {{name}}!',\n\t     *   directives: [GreetUser, Bold]\n\t     * })\n\t     * class Greet {\n\t     *   name: string;\n\t     *\n\t     *   constructor() {\n\t     *     this.name = 'World';\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @deprecated Use Component instead.\n\t     */\n\t    var ViewMetadata = (function () {\n\t        function ViewMetadata(_a) {\n\t            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n\t            this.templateUrl = templateUrl;\n\t            this.template = template;\n\t            this.styleUrls = styleUrls;\n\t            this.styles = styles;\n\t            this.encapsulation = encapsulation;\n\t            this.animations = animations;\n\t            this.interpolation = interpolation;\n\t        }\n\t        return ViewMetadata;\n\t    }());\n\t\n\t    /**\n\t     * Allows to refer to references which are not yet defined.\n\t     *\n\t     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n\t     * DI is declared,\n\t     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n\t     * yet defined.\n\t     *\n\t     * ### Example\n\t     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n\t     * @experimental\n\t     */\n\t    function forwardRef(forwardRefFn) {\n\t        forwardRefFn.__forward_ref__ = forwardRef;\n\t        forwardRefFn.toString = function () { return stringify(this()); };\n\t        return forwardRefFn;\n\t    }\n\t    /**\n\t     * Lazily retrieves the reference value from a forwardRef.\n\t     *\n\t     * Acts as the identity function when given a non-forward-ref value.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n\t     *\n\t     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n\t     *\n\t     * See: {@link forwardRef}\n\t     * @experimental\n\t     */\n\t    function resolveForwardRef(type) {\n\t        if (isFunction(type) && type.hasOwnProperty('__forward_ref__') &&\n\t            type.__forward_ref__ === forwardRef) {\n\t            return type();\n\t        }\n\t        else {\n\t            return type;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function unimplemented() {\n\t        throw new Error('unimplemented');\n\t    }\n\t    /**\n\t     * @stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends(BaseError, _super);\n\t        function BaseError(message) {\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            var nativeError = _super.call(this, message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            get: function () { return this._nativeError.message; },\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            get: function () { return this._nativeError.stack; },\n\t            set: function (value) { this._nativeError.stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * @stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends(WrappedError, _super);\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            get: function () {\n\t                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    var _THROW_IF_NOT_FOUND = new Object();\n\t    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t    var _NullInjector = (function () {\n\t        function _NullInjector() {\n\t        }\n\t        _NullInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n\t            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n\t                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n\t            }\n\t            return notFoundValue;\n\t        };\n\t        return _NullInjector;\n\t    }());\n\t    /**\n\t     * @whatItDoes Injector interface\n\t     * @howToUse\n\t     * ```\n\t     * const injector: Injector = ...;\n\t     * injector.get(...);\n\t     * ```\n\t     *\n\t     * @description\n\t     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example core/di/ts/injector_spec.ts region='Injector'}\n\t     *\n\t     * `Injector` returns itself when given `Injector` as a token:\n\t     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n\t     *\n\t     * @stable\n\t     */\n\t    var Injector = (function () {\n\t        function Injector() {\n\t        }\n\t        /**\n\t         * Retrieves an instance from the injector based on the provided token.\n\t         * If not found:\n\t         * - Throws {@link NoProviderError} if no `notFoundValue` that is not equal to\n\t         * Injector.THROW_IF_NOT_FOUND is given\n\t         * - Returns the `notFoundValue` otherwise\n\t         * ```\n\t         */\n\t        Injector.prototype.get = function (token, notFoundValue) { return unimplemented(); };\n\t        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t        Injector.NULL = new _NullInjector();\n\t        return Injector;\n\t    }());\n\t\n\t    var Map$1 = global$1.Map;\n\t    var Set = global$1.Set;\n\t    // Safari and Internet Explorer do not support the iterable parameter to the\n\t    // Map constructor.  We work around that by manually adding the items.\n\t    var createMapFromPairs = (function () {\n\t        try {\n\t            if (new Map$1([[1, 2]]).size === 1) {\n\t                return function createMapFromPairs(pairs) { return new Map$1(pairs); };\n\t            }\n\t        }\n\t        catch (e) {\n\t        }\n\t        return function createMapAndPopulateFromPairs(pairs) {\n\t            var map = new Map$1();\n\t            for (var i = 0; i < pairs.length; i++) {\n\t                var pair = pairs[i];\n\t                map.set(pair[0], pair[1]);\n\t            }\n\t            return map;\n\t        };\n\t    })();\n\t    var createMapFromMap = (function () {\n\t        try {\n\t            if (new Map$1(new Map$1())) {\n\t                return function createMapFromMap(m) { return new Map$1(m); };\n\t            }\n\t        }\n\t        catch (e) {\n\t        }\n\t        return function createMapAndPopulateFromMap(m) {\n\t            var map = new Map$1();\n\t            m.forEach(function (v, k) { map.set(k, v); });\n\t            return map;\n\t        };\n\t    })();\n\t    var _clearValues = (function () {\n\t        if ((new Map$1()).keys().next) {\n\t            return function _clearValues(m) {\n\t                var keyIterator = m.keys();\n\t                var k;\n\t                while (!((k = keyIterator.next()).done)) {\n\t                    m.set(k.value, null);\n\t                }\n\t            };\n\t        }\n\t        else {\n\t            return function _clearValuesWithForeEach(m) {\n\t                m.forEach(function (v, k) { m.set(k, null); });\n\t            };\n\t        }\n\t    })();\n\t    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n\t    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n\t    var _arrayFromMap = (function () {\n\t        try {\n\t            if ((new Map$1()).values().next) {\n\t                return function createArrayFromMap(m, getValues) {\n\t                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n\t                };\n\t            }\n\t        }\n\t        catch (e) {\n\t        }\n\t        return function createArrayFromMapWithForeach(m, getValues) {\n\t            var res = ListWrapper.createFixedSize(m.size), i = 0;\n\t            m.forEach(function (v, k) {\n\t                res[i] = getValues ? v : k;\n\t                i++;\n\t            });\n\t            return res;\n\t        };\n\t    })();\n\t    var MapWrapper = (function () {\n\t        function MapWrapper() {\n\t        }\n\t        MapWrapper.clone = function (m) { return createMapFromMap(m); };\n\t        MapWrapper.createFromStringMap = function (stringMap) {\n\t            var result = new Map$1();\n\t            for (var prop in stringMap) {\n\t                result.set(prop, stringMap[prop]);\n\t            }\n\t            return result;\n\t        };\n\t        MapWrapper.toStringMap = function (m) {\n\t            var r = {};\n\t            m.forEach(function (v, k) { return r[k] = v; });\n\t            return r;\n\t        };\n\t        MapWrapper.createFromPairs = function (pairs) { return createMapFromPairs(pairs); };\n\t        MapWrapper.clearValues = function (m) { _clearValues(m); };\n\t        MapWrapper.iterable = function (m) { return m; };\n\t        MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n\t        MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n\t        return MapWrapper;\n\t    }());\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        StringMapWrapper.create = function () {\n\t            // Note: We are not using Object.create(null) here due to\n\t            // performance!\n\t            // http://jsperf.com/ng2-object-create-null\n\t            return {};\n\t        };\n\t        StringMapWrapper.contains = function (map, key) {\n\t            return map.hasOwnProperty(key);\n\t        };\n\t        StringMapWrapper.get = function (map, key) {\n\t            return map.hasOwnProperty(key) ? map[key] : undefined;\n\t        };\n\t        StringMapWrapper.set = function (map, key, value) { map[key] = value; };\n\t        StringMapWrapper.keys = function (map) { return Object.keys(map); };\n\t        StringMapWrapper.values = function (map) {\n\t            return Object.keys(map).map(function (k) { return map[k]; });\n\t        };\n\t        StringMapWrapper.isEmpty = function (map) {\n\t            for (var prop in map) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t        StringMapWrapper.delete = function (map, key) { delete map[key]; };\n\t        StringMapWrapper.forEach = function (map, callback) {\n\t            for (var _i = 0, _a = Object.keys(map); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                callback(map[k], k);\n\t            }\n\t        };\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var k1 = Object.keys(m1);\n\t            var k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var i = 0; i < k1.length; i++) {\n\t                var key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        // JS has no way to express a statically fixed size list, but dart does so we\n\t        // keep both methods.\n\t        ListWrapper.createFixedSize = function (size) { return new Array(size); };\n\t        ListWrapper.createGrowableSize = function (size) { return new Array(size); };\n\t        ListWrapper.clone = function (array) { return array.slice(0); };\n\t        ListWrapper.forEachWithIndex = function (array, fn) {\n\t            for (var i = 0; i < array.length; i++) {\n\t                fn(array[i], i);\n\t            }\n\t        };\n\t        ListWrapper.first = function (array) {\n\t            if (!array)\n\t                return null;\n\t            return array[0];\n\t        };\n\t        ListWrapper.last = function (array) {\n\t            if (!array || array.length == 0)\n\t                return null;\n\t            return array[array.length - 1];\n\t        };\n\t        ListWrapper.indexOf = function (array, value, startIndex) {\n\t            if (startIndex === void 0) { startIndex = 0; }\n\t            return array.indexOf(value, startIndex);\n\t        };\n\t        ListWrapper.contains = function (list, el) { return list.indexOf(el) !== -1; };\n\t        ListWrapper.reversed = function (array) {\n\t            var a = ListWrapper.clone(array);\n\t            return a.reverse();\n\t        };\n\t        ListWrapper.concat = function (a, b) { return a.concat(b); };\n\t        ListWrapper.insert = function (list, index, value) { list.splice(index, 0, value); };\n\t        ListWrapper.removeAt = function (list, index) {\n\t            var res = list[index];\n\t            list.splice(index, 1);\n\t            return res;\n\t        };\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var i = 0; i < items.length; ++i) {\n\t                var index = list.indexOf(items[i]);\n\t                list.splice(index, 1);\n\t            }\n\t        };\n\t        ListWrapper.remove = function (list, el) {\n\t            var index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        ListWrapper.clear = function (list) { list.length = 0; };\n\t        ListWrapper.isEmpty = function (list) { return list.length == 0; };\n\t        ListWrapper.fill = function (list, value, start, end) {\n\t            if (start === void 0) { start = 0; }\n\t            if (end === void 0) { end = null; }\n\t            list.fill(value, start, end === null ? list.length : end);\n\t        };\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        ListWrapper.slice = function (l, from, to) {\n\t            if (from === void 0) { from = 0; }\n\t            if (to === void 0) { to = null; }\n\t            return l.slice(from, to === null ? undefined : to);\n\t        };\n\t        ListWrapper.splice = function (l, from, length) { return l.splice(from, length); };\n\t        ListWrapper.sort = function (l, compareFn) {\n\t            if (isPresent(compareFn)) {\n\t                l.sort(compareFn);\n\t            }\n\t            else {\n\t                l.sort();\n\t            }\n\t        };\n\t        ListWrapper.toString = function (l) { return l.toString(); };\n\t        ListWrapper.toJSON = function (l) { return JSON.stringify(l); };\n\t        ListWrapper.maximum = function (list, predicate) {\n\t            if (list.length == 0) {\n\t                return null;\n\t            }\n\t            var solution = null;\n\t            var maxValue = -Infinity;\n\t            for (var index = 0; index < list.length; index++) {\n\t                var candidate = list[index];\n\t                if (isBlank(candidate)) {\n\t                    continue;\n\t                }\n\t                var candidateValue = predicate(candidate);\n\t                if (candidateValue > maxValue) {\n\t                    solution = candidate;\n\t                    maxValue = candidateValue;\n\t                }\n\t            }\n\t            return solution;\n\t        };\n\t        ListWrapper.flatten = function (list) {\n\t            var target = [];\n\t            _flattenArray(list, target);\n\t            return target;\n\t        };\n\t        ListWrapper.addAll = function (list, source) {\n\t            for (var i = 0; i < source.length; i++) {\n\t                list.push(source[i]);\n\t            }\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t    function _flattenArray(source, target) {\n\t        if (isPresent(source)) {\n\t            for (var i = 0; i < source.length; i++) {\n\t                var item = source[i];\n\t                if (isArray(item)) {\n\t                    _flattenArray(item, target);\n\t                }\n\t                else {\n\t                    target.push(item);\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return isArray(obj) ||\n\t            (!(obj instanceof Map$1) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t    function areIterablesEqual(a, b, comparator) {\n\t        var iterator1 = a[getSymbolIterator()]();\n\t        var iterator2 = b[getSymbolIterator()]();\n\t        while (true) {\n\t            var item1 = iterator1.next();\n\t            var item2 = iterator2.next();\n\t            if (item1.done && item2.done)\n\t                return true;\n\t            if (item1.done || item2.done)\n\t                return false;\n\t            if (!comparator(item1.value, item2.value))\n\t                return false;\n\t        }\n\t    }\n\t    function iterateListLike(obj, fn) {\n\t        if (isArray(obj)) {\n\t            for (var i = 0; i < obj.length; i++) {\n\t                fn(obj[i]);\n\t            }\n\t        }\n\t        else {\n\t            var iterator = obj[getSymbolIterator()]();\n\t            var item;\n\t            while (!((item = iterator.next()).done)) {\n\t                fn(item.value);\n\t            }\n\t        }\n\t    }\n\t    // Safari and Internet Explorer do not support the iterable parameter to the\n\t    // Set constructor.  We work around that by manually adding the items.\n\t    var createSetFromList = (function () {\n\t        var test = new Set([1, 2, 3]);\n\t        if (test.size === 3) {\n\t            return function createSetFromList(lst) { return new Set(lst); };\n\t        }\n\t        else {\n\t            return function createSetAndPopulateFromList(lst) {\n\t                var res = new Set(lst);\n\t                if (res.size !== lst.length) {\n\t                    for (var i = 0; i < lst.length; i++) {\n\t                        res.add(lst[i]);\n\t                    }\n\t                }\n\t                return res;\n\t            };\n\t        }\n\t    })();\n\t    var SetWrapper = (function () {\n\t        function SetWrapper() {\n\t        }\n\t        SetWrapper.createFromList = function (lst) { return createSetFromList(lst); };\n\t        SetWrapper.has = function (s, key) { return s.has(key); };\n\t        SetWrapper.delete = function (m, k) { m.delete(k); };\n\t        return SetWrapper;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function findFirstClosedCycle(keys) {\n\t        var res = [];\n\t        for (var i = 0; i < keys.length; ++i) {\n\t            if (ListWrapper.contains(res, keys[i])) {\n\t                res.push(keys[i]);\n\t                return res;\n\t            }\n\t            res.push(keys[i]);\n\t        }\n\t        return res;\n\t    }\n\t    function constructResolvingPath(keys) {\n\t        if (keys.length > 1) {\n\t            var reversed = findFirstClosedCycle(ListWrapper.reversed(keys));\n\t            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n\t            return ' (' + tokenStrs.join(' -> ') + ')';\n\t        }\n\t        return '';\n\t    }\n\t    /**\n\t     * Base class for all errors arising from misconfigured providers.\n\t     * @stable\n\t     */\n\t    var AbstractProviderError = (function (_super) {\n\t        __extends$1(AbstractProviderError, _super);\n\t        function AbstractProviderError(injector, key, constructResolvingMessage) {\n\t            _super.call(this, 'DI Error');\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t            this.constructResolvingMessage = constructResolvingMessage;\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        }\n\t        AbstractProviderError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        };\n\t        return AbstractProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n\t     * {@link Injector} does not have a {@link Provider} for the given key.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b:B) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var NoProviderError = (function (_super) {\n\t        __extends$1(NoProviderError, _super);\n\t        function NoProviderError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                var first = stringify(ListWrapper.first(keys).token);\n\t                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return NoProviderError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when dependencies form a cycle.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n\t     *\n\t     * ```typescript\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n\t     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n\t     * ]);\n\t     *\n\t     * expect(() => injector.get(\"one\")).toThrowError();\n\t     * ```\n\t     *\n\t     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n\t     * @stable\n\t     */\n\t    var CyclicDependencyError = (function (_super) {\n\t        __extends$1(CyclicDependencyError, _super);\n\t        function CyclicDependencyError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return CyclicDependencyError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when a constructing type returns with an Error.\n\t     *\n\t     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n\t     * this object to be instantiated.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor() {\n\t     *     throw new Error('message');\n\t     *   }\n\t     * }\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t\n\t     * try {\n\t     *   injector.get(A);\n\t     * } catch (e) {\n\t     *   expect(e instanceof InstantiationError).toBe(true);\n\t     *   expect(e.originalException.message).toEqual(\"message\");\n\t     *   expect(e.originalStack).toBeDefined();\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var InstantiationError = (function (_super) {\n\t        __extends$1(InstantiationError, _super);\n\t        function InstantiationError(injector, originalException, originalStack, key) {\n\t            _super.call(this, 'DI Error', originalException);\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t        }\n\t        InstantiationError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t        };\n\t        Object.defineProperty(InstantiationError.prototype, \"message\", {\n\t            get: function () {\n\t                var first = stringify(ListWrapper.first(this.keys).token);\n\t                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n\t            get: function () { return this.keys[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return InstantiationError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n\t     * creation.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var InvalidProviderError = (function (_super) {\n\t        __extends$1(InvalidProviderError, _super);\n\t        function InvalidProviderError(provider) {\n\t            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n\t        }\n\t        return InvalidProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when the class has no annotation information.\n\t     *\n\t     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n\t     * need to be injected into the constructor.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     *\n\t     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n\t     *\n\t     * ```typescript\n\t     * class B {}\n\t     *\n\t     * class A {\n\t     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var NoAnnotationError = (function (_super) {\n\t        __extends$1(NoAnnotationError, _super);\n\t        function NoAnnotationError(typeOrFunc, params) {\n\t            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n\t        }\n\t        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n\t            var signature = [];\n\t            for (var i = 0, ii = params.length; i < ii; i++) {\n\t                var parameter = params[i];\n\t                if (isBlank(parameter) || parameter.length == 0) {\n\t                    signature.push('?');\n\t                }\n\t                else {\n\t                    signature.push(parameter.map(stringify).join(' '));\n\t                }\n\t            }\n\t            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n\t                signature.join(', ') + '). ' +\n\t                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n\t                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n\t        };\n\t        return NoAnnotationError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when getting an object by index.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {}\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t     *\n\t     * expect(() => injector.getAt(100)).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var OutOfBoundsError = (function (_super) {\n\t        __extends$1(OutOfBoundsError, _super);\n\t        function OutOfBoundsError(index) {\n\t            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n\t        }\n\t        return OutOfBoundsError;\n\t    }(BaseError));\n\t    // TODO: add a working example after alpha38 is released\n\t    /**\n\t     * Thrown when a multi provider and a regular provider are bound to the same token.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\n\t     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n\t     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n\t     * ])).toThrowError();\n\t     * ```\n\t     */\n\t    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n\t        __extends$1(MixingMultiProvidersWithRegularProvidersError, _super);\n\t        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n\t            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n\t                provider2.toString());\n\t        }\n\t        return MixingMultiProvidersWithRegularProvidersError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n\t     *\n\t     * Keys have:\n\t     * - a system-wide unique `id`.\n\t     * - a `token`.\n\t     *\n\t     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n\t     * the\n\t     * injector to store created objects in a more efficient way.\n\t     *\n\t     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n\t     * resolving\n\t     * providers.\n\t     * @experimental\n\t     */\n\t    var ReflectiveKey = (function () {\n\t        /**\n\t         * Private\n\t         */\n\t        function ReflectiveKey(token, id) {\n\t            this.token = token;\n\t            this.id = id;\n\t            if (isBlank(token)) {\n\t                throw new Error('Token must be defined!');\n\t            }\n\t        }\n\t        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n\t            /**\n\t             * Returns a stringified token.\n\t             */\n\t            get: function () { return stringify(this.token); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Retrieves a `Key` for a token.\n\t         */\n\t        ReflectiveKey.get = function (token) {\n\t            return _globalKeyRegistry.get(resolveForwardRef(token));\n\t        };\n\t        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n\t            /**\n\t             * @returns the number of keys registered in the system.\n\t             */\n\t            get: function () { return _globalKeyRegistry.numberOfKeys; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ReflectiveKey;\n\t    }());\n\t    /**\n\t     * @internal\n\t     */\n\t    var KeyRegistry = (function () {\n\t        function KeyRegistry() {\n\t            this._allKeys = new Map();\n\t        }\n\t        KeyRegistry.prototype.get = function (token) {\n\t            if (token instanceof ReflectiveKey)\n\t                return token;\n\t            if (this._allKeys.has(token)) {\n\t                return this._allKeys.get(token);\n\t            }\n\t            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n\t            this._allKeys.set(token, newKey);\n\t            return newKey;\n\t        };\n\t        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n\t            get: function () { return this._allKeys.size; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return KeyRegistry;\n\t    }());\n\t    var _globalKeyRegistry = new KeyRegistry();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Represents a type that a Component or other object is instances of.\n\t     *\n\t     * @description\n\t     *\n\t     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n\t     * the `MyCustomComponent` constructor function.\n\t     *\n\t     * @stable\n\t     */\n\t    var Type = Function;\n\t\n\t    var ReflectionCapabilities = (function () {\n\t        function ReflectionCapabilities(reflect) {\n\t            this._reflect = reflect || global$1.Reflect;\n\t        }\n\t        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n\t        ReflectionCapabilities.prototype.factory = function (t) {\n\t            var prototype = t.prototype;\n\t            return function () {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var instance = Object.create(prototype);\n\t                t.apply(instance, args);\n\t                return instance;\n\t            };\n\t        };\n\t        /** @internal */\n\t        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes /** TODO #9100 */, paramAnnotations /** TODO #9100 */) {\n\t            var result;\n\t            if (typeof paramTypes === 'undefined') {\n\t                result = new Array(paramAnnotations.length);\n\t            }\n\t            else {\n\t                result = new Array(paramTypes.length);\n\t            }\n\t            for (var i = 0; i < result.length; i++) {\n\t                // TS outputs Object for parameters without types, while Traceur omits\n\t                // the annotations. For now we preserve the Traceur behavior to aid\n\t                // migration, but this can be revisited.\n\t                if (typeof paramTypes === 'undefined') {\n\t                    result[i] = [];\n\t                }\n\t                else if (paramTypes[i] != Object) {\n\t                    result[i] = [paramTypes[i]];\n\t                }\n\t                else {\n\t                    result[i] = [];\n\t                }\n\t                if (isPresent(paramAnnotations) && isPresent(paramAnnotations[i])) {\n\t                    result[i] = result[i].concat(paramAnnotations[i]);\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t        ReflectionCapabilities.prototype.parameters = function (typeOrFunc) {\n\t            // Prefer the direct API.\n\t            if (isPresent(typeOrFunc.parameters)) {\n\t                return typeOrFunc.parameters;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (isPresent(typeOrFunc.ctorParameters)) {\n\t                var ctorParameters = typeOrFunc.ctorParameters;\n\t                var paramTypes_1 = ctorParameters.map(function (ctorParam /** TODO #9100 */) { return ctorParam && ctorParam.type; });\n\t                var paramAnnotations_1 = ctorParameters.map(function (ctorParam /** TODO #9100 */) {\n\t                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n\t                });\n\t                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n\t                var paramAnnotations = this._reflect.getMetadata('parameters', typeOrFunc);\n\t                var paramTypes = this._reflect.getMetadata('design:paramtypes', typeOrFunc);\n\t                if (isPresent(paramTypes) || isPresent(paramAnnotations)) {\n\t                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t                }\n\t            }\n\t            // The array has to be filled with `undefined` because holes would be skipped by `some`\n\t            var parameters = new Array(typeOrFunc.length);\n\t            parameters.fill(undefined);\n\t            return parameters;\n\t        };\n\t        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n\t            // Prefer the direct API.\n\t            if (isPresent(typeOrFunc.annotations)) {\n\t                var annotations = typeOrFunc.annotations;\n\t                if (isFunction(annotations) && annotations.annotations) {\n\t                    annotations = annotations.annotations;\n\t                }\n\t                return annotations;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (isPresent(typeOrFunc.decorators)) {\n\t                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n\t                var annotations = this._reflect.getMetadata('annotations', typeOrFunc);\n\t                if (isPresent(annotations))\n\t                    return annotations;\n\t            }\n\t            return [];\n\t        };\n\t        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n\t            // Prefer the direct API.\n\t            if (isPresent(typeOrFunc.propMetadata)) {\n\t                var propMetadata = typeOrFunc.propMetadata;\n\t                if (isFunction(propMetadata) && propMetadata.propMetadata) {\n\t                    propMetadata = propMetadata.propMetadata;\n\t                }\n\t                return propMetadata;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (isPresent(typeOrFunc.propDecorators)) {\n\t                var propDecorators_1 = typeOrFunc.propDecorators;\n\t                var propMetadata_1 = {};\n\t                Object.keys(propDecorators_1).forEach(function (prop) {\n\t                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n\t                });\n\t                return propMetadata_1;\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n\t                var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);\n\t                if (isPresent(propMetadata))\n\t                    return propMetadata;\n\t            }\n\t            return {};\n\t        };\n\t        // Note: JavaScript does not support to query for interfaces during runtime.\n\t        // However, we can't throw here as the reflector will always call this method\n\t        // when asked for a lifecycle interface as this is what we check in Dart.\n\t        ReflectionCapabilities.prototype.interfaces = function (type) { return []; };\n\t        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcInterface, lcProperty) {\n\t            if (!(type instanceof Type))\n\t                return false;\n\t            var proto = type.prototype;\n\t            return !!proto[lcProperty];\n\t        };\n\t        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n\t        ReflectionCapabilities.prototype.setter = function (name) {\n\t            return new Function('o', 'v', 'return o.' + name + ' = v;');\n\t        };\n\t        ReflectionCapabilities.prototype.method = function (name) {\n\t            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n\t            return new Function('o', 'args', functionBody);\n\t        };\n\t        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n\t        ReflectionCapabilities.prototype.importUri = function (type) {\n\t            // StaticSymbol\n\t            if (typeof type === 'object' && type['filePath']) {\n\t                return type['filePath'];\n\t            }\n\t            // Runtime type\n\t            return \"./\" + stringify(type);\n\t        };\n\t        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n\t        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n\t        return ReflectionCapabilities;\n\t    }());\n\t    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n\t        if (!decoratorInvocations) {\n\t            return [];\n\t        }\n\t        return decoratorInvocations.map(function (decoratorInvocation) {\n\t            var decoratorType = decoratorInvocation.type;\n\t            var annotationCls = decoratorType.annotationCls;\n\t            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n\t            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n\t        });\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Provides read-only access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     */\n\t    var ReflectorReader = (function () {\n\t        function ReflectorReader() {\n\t        }\n\t        return ReflectorReader;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Provides access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     */\n\t    var Reflector = (function (_super) {\n\t        __extends$2(Reflector, _super);\n\t        function Reflector(reflectionCapabilities) {\n\t            _super.call(this);\n\t            /** @internal */\n\t            this._injectableInfo = new Map$1();\n\t            /** @internal */\n\t            this._getters = new Map$1();\n\t            /** @internal */\n\t            this._setters = new Map$1();\n\t            /** @internal */\n\t            this._methods = new Map$1();\n\t            this._usedKeys = null;\n\t            this.reflectionCapabilities = reflectionCapabilities;\n\t        }\n\t        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n\t        Reflector.prototype.isReflectionEnabled = function () { return this.reflectionCapabilities.isReflectionEnabled(); };\n\t        /**\n\t         * Causes `this` reflector to track keys used to access\n\t         * {@link ReflectionInfo} objects.\n\t         */\n\t        Reflector.prototype.trackUsage = function () { this._usedKeys = new Set(); };\n\t        /**\n\t         * Lists types for which reflection information was not requested since\n\t         * {@link #trackUsage} was called. This list could later be audited as\n\t         * potential dead code.\n\t         */\n\t        Reflector.prototype.listUnusedKeys = function () {\n\t            var _this = this;\n\t            if (this._usedKeys == null) {\n\t                throw new Error('Usage tracking is disabled');\n\t            }\n\t            var allTypes = MapWrapper.keys(this._injectableInfo);\n\t            return allTypes.filter(function (key) { return !SetWrapper.has(_this._usedKeys, key); });\n\t        };\n\t        Reflector.prototype.registerFunction = function (func, funcInfo) {\n\t            this._injectableInfo.set(func, funcInfo);\n\t        };\n\t        Reflector.prototype.registerType = function (type, typeInfo) {\n\t            this._injectableInfo.set(type, typeInfo);\n\t        };\n\t        Reflector.prototype.registerGetters = function (getters) { _mergeMaps(this._getters, getters); };\n\t        Reflector.prototype.registerSetters = function (setters) { _mergeMaps(this._setters, setters); };\n\t        Reflector.prototype.registerMethods = function (methods) { _mergeMaps(this._methods, methods); };\n\t        Reflector.prototype.factory = function (type) {\n\t            if (this._containsReflectionInfo(type)) {\n\t                var res = this._getReflectionInfo(type).factory;\n\t                return isPresent(res) ? res : null;\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.factory(type);\n\t            }\n\t        };\n\t        Reflector.prototype.parameters = function (typeOrFunc) {\n\t            if (this._injectableInfo.has(typeOrFunc)) {\n\t                var res = this._getReflectionInfo(typeOrFunc).parameters;\n\t                return isPresent(res) ? res : [];\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.parameters(typeOrFunc);\n\t            }\n\t        };\n\t        Reflector.prototype.annotations = function (typeOrFunc) {\n\t            if (this._injectableInfo.has(typeOrFunc)) {\n\t                var res = this._getReflectionInfo(typeOrFunc).annotations;\n\t                return isPresent(res) ? res : [];\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.annotations(typeOrFunc);\n\t            }\n\t        };\n\t        Reflector.prototype.propMetadata = function (typeOrFunc) {\n\t            if (this._injectableInfo.has(typeOrFunc)) {\n\t                var res = this._getReflectionInfo(typeOrFunc).propMetadata;\n\t                return isPresent(res) ? res : {};\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.propMetadata(typeOrFunc);\n\t            }\n\t        };\n\t        Reflector.prototype.interfaces = function (type) {\n\t            if (this._injectableInfo.has(type)) {\n\t                var res = this._getReflectionInfo(type).interfaces;\n\t                return isPresent(res) ? res : [];\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.interfaces(type);\n\t            }\n\t        };\n\t        Reflector.prototype.hasLifecycleHook = function (type, lcInterface, lcProperty) {\n\t            var interfaces = this.interfaces(type);\n\t            if (interfaces.indexOf(lcInterface) !== -1) {\n\t                return true;\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.hasLifecycleHook(type, lcInterface, lcProperty);\n\t            }\n\t        };\n\t        Reflector.prototype.getter = function (name) {\n\t            if (this._getters.has(name)) {\n\t                return this._getters.get(name);\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.getter(name);\n\t            }\n\t        };\n\t        Reflector.prototype.setter = function (name) {\n\t            if (this._setters.has(name)) {\n\t                return this._setters.get(name);\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.setter(name);\n\t            }\n\t        };\n\t        Reflector.prototype.method = function (name) {\n\t            if (this._methods.has(name)) {\n\t                return this._methods.get(name);\n\t            }\n\t            else {\n\t                return this.reflectionCapabilities.method(name);\n\t            }\n\t        };\n\t        /** @internal */\n\t        Reflector.prototype._getReflectionInfo = function (typeOrFunc) {\n\t            if (isPresent(this._usedKeys)) {\n\t                this._usedKeys.add(typeOrFunc);\n\t            }\n\t            return this._injectableInfo.get(typeOrFunc);\n\t        };\n\t        /** @internal */\n\t        Reflector.prototype._containsReflectionInfo = function (typeOrFunc) { return this._injectableInfo.has(typeOrFunc); };\n\t        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n\t        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n\t            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n\t        };\n\t        Reflector.prototype.resolveEnum = function (identifier, name) {\n\t            return this.reflectionCapabilities.resolveEnum(identifier, name);\n\t        };\n\t        return Reflector;\n\t    }(ReflectorReader));\n\t    function _mergeMaps(target, config) {\n\t        StringMapWrapper.forEach(config, function (v, k) { return target.set(k, v); });\n\t    }\n\t\n\t    /**\n\t     * The {@link Reflector} used internally in Angular to access metadata\n\t     * about symbols.\n\t     */\n\t    var reflector = new Reflector(new ReflectionCapabilities());\n\t\n\t    /**\n\t     * `Dependency` is used by the framework to extend DI.\n\t     * This is internal to Angular and should not be used directly.\n\t     */\n\t    var ReflectiveDependency = (function () {\n\t        function ReflectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {\n\t            this.key = key;\n\t            this.optional = optional;\n\t            this.lowerBoundVisibility = lowerBoundVisibility;\n\t            this.upperBoundVisibility = upperBoundVisibility;\n\t            this.properties = properties;\n\t        }\n\t        ReflectiveDependency.fromKey = function (key) {\n\t            return new ReflectiveDependency(key, false, null, null, []);\n\t        };\n\t        return ReflectiveDependency;\n\t    }());\n\t    var _EMPTY_LIST = [];\n\t    var ResolvedReflectiveProvider_ = (function () {\n\t        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n\t            this.key = key;\n\t            this.resolvedFactories = resolvedFactories;\n\t            this.multiProvider = multiProvider;\n\t        }\n\t        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n\t            get: function () { return this.resolvedFactories[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ResolvedReflectiveProvider_;\n\t    }());\n\t    /**\n\t     * An internal resolved representation of a factory function created by resolving {@link\n\t     * Provider}.\n\t     * @experimental\n\t     */\n\t    var ResolvedReflectiveFactory = (function () {\n\t        function ResolvedReflectiveFactory(\n\t            /**\n\t             * Factory function which can return an instance of an object represented by a key.\n\t             */\n\t            factory,\n\t            /**\n\t             * Arguments (dependencies) to the `factory` function.\n\t             */\n\t            dependencies) {\n\t            this.factory = factory;\n\t            this.dependencies = dependencies;\n\t        }\n\t        return ResolvedReflectiveFactory;\n\t    }());\n\t    /**\n\t     * Resolve a single provider.\n\t     */\n\t    function resolveReflectiveFactory(provider) {\n\t        var factoryFn;\n\t        var resolvedDeps;\n\t        if (isPresent(provider.useClass)) {\n\t            var useClass = resolveForwardRef(provider.useClass);\n\t            factoryFn = reflector.factory(useClass);\n\t            resolvedDeps = _dependenciesFor(useClass);\n\t        }\n\t        else if (isPresent(provider.useExisting)) {\n\t            factoryFn = function (aliasInstance) { return aliasInstance; };\n\t            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n\t        }\n\t        else if (isPresent(provider.useFactory)) {\n\t            factoryFn = provider.useFactory;\n\t            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n\t        }\n\t        else {\n\t            factoryFn = function () { return provider.useValue; };\n\t            resolvedDeps = _EMPTY_LIST;\n\t        }\n\t        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n\t    }\n\t    /**\n\t     * Converts the {@link Provider} into {@link ResolvedProvider}.\n\t     *\n\t     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n\t     * convenience provider syntax.\n\t     */\n\t    function resolveReflectiveProvider(provider) {\n\t        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n\t    }\n\t    /**\n\t     * Resolve a list of Providers.\n\t     */\n\t    function resolveReflectiveProviders(providers) {\n\t        var normalized = _normalizeProviders(providers, []);\n\t        var resolved = normalized.map(resolveReflectiveProvider);\n\t        return MapWrapper.values(mergeResolvedReflectiveProviders(resolved, new Map()));\n\t    }\n\t    /**\n\t     * Merges a list of ResolvedProviders into a list where\n\t     * each key is contained exactly once and multi providers\n\t     * have been merged.\n\t     */\n\t    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n\t        for (var i = 0; i < providers.length; i++) {\n\t            var provider = providers[i];\n\t            var existing = normalizedProvidersMap.get(provider.key.id);\n\t            if (isPresent(existing)) {\n\t                if (provider.multiProvider !== existing.multiProvider) {\n\t                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n\t                }\n\t                if (provider.multiProvider) {\n\t                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n\t                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n\t                    }\n\t                }\n\t                else {\n\t                    normalizedProvidersMap.set(provider.key.id, provider);\n\t                }\n\t            }\n\t            else {\n\t                var resolvedProvider;\n\t                if (provider.multiProvider) {\n\t                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, ListWrapper.clone(provider.resolvedFactories), provider.multiProvider);\n\t                }\n\t                else {\n\t                    resolvedProvider = provider;\n\t                }\n\t                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n\t            }\n\t        }\n\t        return normalizedProvidersMap;\n\t    }\n\t    function _normalizeProviders(providers, res) {\n\t        providers.forEach(function (b) {\n\t            if (b instanceof Type) {\n\t                res.push({ provide: b, useClass: b });\n\t            }\n\t            else if (b && typeof b == 'object' && b.provide !== undefined) {\n\t                res.push(b);\n\t            }\n\t            else if (b instanceof Array) {\n\t                _normalizeProviders(b, res);\n\t            }\n\t            else {\n\t                throw new InvalidProviderError(b);\n\t            }\n\t        });\n\t        return res;\n\t    }\n\t    function constructDependencies(typeOrFunc, dependencies) {\n\t        if (isBlank(dependencies)) {\n\t            return _dependenciesFor(typeOrFunc);\n\t        }\n\t        else {\n\t            var params = dependencies.map(function (t) { return [t]; });\n\t            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params); });\n\t        }\n\t    }\n\t    function _dependenciesFor(typeOrFunc) {\n\t        var params = reflector.parameters(typeOrFunc);\n\t        if (isBlank(params))\n\t            return [];\n\t        if (params.some(isBlank)) {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n\t    }\n\t    function _extractToken(typeOrFunc /** TODO #9100 */, metadata /** TODO #9100 */ /*any[] | any*/, params) {\n\t        var depProps = [];\n\t        var token = null;\n\t        var optional = false;\n\t        if (!isArray(metadata)) {\n\t            if (metadata instanceof Inject) {\n\t                return _createDependency(metadata.token, optional, null, null, depProps);\n\t            }\n\t            else {\n\t                return _createDependency(metadata, optional, null, null, depProps);\n\t            }\n\t        }\n\t        var lowerBoundVisibility = null;\n\t        var upperBoundVisibility = null;\n\t        for (var i = 0; i < metadata.length; ++i) {\n\t            var paramMetadata = metadata[i];\n\t            if (paramMetadata instanceof Type) {\n\t                token = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof Inject) {\n\t                token = paramMetadata.token;\n\t            }\n\t            else if (paramMetadata instanceof Optional) {\n\t                optional = true;\n\t            }\n\t            else if (paramMetadata instanceof Self) {\n\t                upperBoundVisibility = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof Host) {\n\t                upperBoundVisibility = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof SkipSelf) {\n\t                lowerBoundVisibility = paramMetadata;\n\t            }\n\t        }\n\t        token = resolveForwardRef(token);\n\t        if (isPresent(token)) {\n\t            return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n\t        }\n\t        else {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t    }\n\t    function _createDependency(token /** TODO #9100 */, optional /** TODO #9100 */, lowerBoundVisibility /** TODO #9100 */, upperBoundVisibility /** TODO #9100 */, depProps /** TODO #9100 */) {\n\t        return new ReflectiveDependency(ReflectiveKey.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n\t    }\n\t\n\t    // avoid unused import when Type union types are erased\n\t    // Threshold for the dynamic version\n\t    var _MAX_CONSTRUCTION_COUNTER = 10;\n\t    var UNDEFINED = new Object();\n\t    var ReflectiveProtoInjectorInlineStrategy = (function () {\n\t        function ReflectiveProtoInjectorInlineStrategy(protoEI, providers) {\n\t            this.provider0 = null;\n\t            this.provider1 = null;\n\t            this.provider2 = null;\n\t            this.provider3 = null;\n\t            this.provider4 = null;\n\t            this.provider5 = null;\n\t            this.provider6 = null;\n\t            this.provider7 = null;\n\t            this.provider8 = null;\n\t            this.provider9 = null;\n\t            this.keyId0 = null;\n\t            this.keyId1 = null;\n\t            this.keyId2 = null;\n\t            this.keyId3 = null;\n\t            this.keyId4 = null;\n\t            this.keyId5 = null;\n\t            this.keyId6 = null;\n\t            this.keyId7 = null;\n\t            this.keyId8 = null;\n\t            this.keyId9 = null;\n\t            var length = providers.length;\n\t            if (length > 0) {\n\t                this.provider0 = providers[0];\n\t                this.keyId0 = providers[0].key.id;\n\t            }\n\t            if (length > 1) {\n\t                this.provider1 = providers[1];\n\t                this.keyId1 = providers[1].key.id;\n\t            }\n\t            if (length > 2) {\n\t                this.provider2 = providers[2];\n\t                this.keyId2 = providers[2].key.id;\n\t            }\n\t            if (length > 3) {\n\t                this.provider3 = providers[3];\n\t                this.keyId3 = providers[3].key.id;\n\t            }\n\t            if (length > 4) {\n\t                this.provider4 = providers[4];\n\t                this.keyId4 = providers[4].key.id;\n\t            }\n\t            if (length > 5) {\n\t                this.provider5 = providers[5];\n\t                this.keyId5 = providers[5].key.id;\n\t            }\n\t            if (length > 6) {\n\t                this.provider6 = providers[6];\n\t                this.keyId6 = providers[6].key.id;\n\t            }\n\t            if (length > 7) {\n\t                this.provider7 = providers[7];\n\t                this.keyId7 = providers[7].key.id;\n\t            }\n\t            if (length > 8) {\n\t                this.provider8 = providers[8];\n\t                this.keyId8 = providers[8].key.id;\n\t            }\n\t            if (length > 9) {\n\t                this.provider9 = providers[9];\n\t                this.keyId9 = providers[9].key.id;\n\t            }\n\t        }\n\t        ReflectiveProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function (index) {\n\t            if (index == 0)\n\t                return this.provider0;\n\t            if (index == 1)\n\t                return this.provider1;\n\t            if (index == 2)\n\t                return this.provider2;\n\t            if (index == 3)\n\t                return this.provider3;\n\t            if (index == 4)\n\t                return this.provider4;\n\t            if (index == 5)\n\t                return this.provider5;\n\t            if (index == 6)\n\t                return this.provider6;\n\t            if (index == 7)\n\t                return this.provider7;\n\t            if (index == 8)\n\t                return this.provider8;\n\t            if (index == 9)\n\t                return this.provider9;\n\t            throw new OutOfBoundsError(index);\n\t        };\n\t        ReflectiveProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function (injector) {\n\t            return new ReflectiveInjectorInlineStrategy(injector, this);\n\t        };\n\t        return ReflectiveProtoInjectorInlineStrategy;\n\t    }());\n\t    var ReflectiveProtoInjectorDynamicStrategy = (function () {\n\t        function ReflectiveProtoInjectorDynamicStrategy(protoInj, providers) {\n\t            this.providers = providers;\n\t            var len = providers.length;\n\t            this.keyIds = ListWrapper.createFixedSize(len);\n\t            for (var i = 0; i < len; i++) {\n\t                this.keyIds[i] = providers[i].key.id;\n\t            }\n\t        }\n\t        ReflectiveProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function (index) {\n\t            if (index < 0 || index >= this.providers.length) {\n\t                throw new OutOfBoundsError(index);\n\t            }\n\t            return this.providers[index];\n\t        };\n\t        ReflectiveProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function (ei) {\n\t            return new ReflectiveInjectorDynamicStrategy(this, ei);\n\t        };\n\t        return ReflectiveProtoInjectorDynamicStrategy;\n\t    }());\n\t    var ReflectiveProtoInjector = (function () {\n\t        function ReflectiveProtoInjector(providers) {\n\t            this.numberOfProviders = providers.length;\n\t            this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ?\n\t                new ReflectiveProtoInjectorDynamicStrategy(this, providers) :\n\t                new ReflectiveProtoInjectorInlineStrategy(this, providers);\n\t        }\n\t        ReflectiveProtoInjector.fromResolvedProviders = function (providers) {\n\t            return new ReflectiveProtoInjector(providers);\n\t        };\n\t        ReflectiveProtoInjector.prototype.getProviderAtIndex = function (index) {\n\t            return this._strategy.getProviderAtIndex(index);\n\t        };\n\t        return ReflectiveProtoInjector;\n\t    }());\n\t    var ReflectiveInjectorInlineStrategy = (function () {\n\t        function ReflectiveInjectorInlineStrategy(injector, protoStrategy) {\n\t            this.injector = injector;\n\t            this.protoStrategy = protoStrategy;\n\t            this.obj0 = UNDEFINED;\n\t            this.obj1 = UNDEFINED;\n\t            this.obj2 = UNDEFINED;\n\t            this.obj3 = UNDEFINED;\n\t            this.obj4 = UNDEFINED;\n\t            this.obj5 = UNDEFINED;\n\t            this.obj6 = UNDEFINED;\n\t            this.obj7 = UNDEFINED;\n\t            this.obj8 = UNDEFINED;\n\t            this.obj9 = UNDEFINED;\n\t        }\n\t        ReflectiveInjectorInlineStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n\t        ReflectiveInjectorInlineStrategy.prototype.instantiateProvider = function (provider) {\n\t            return this.injector._new(provider);\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getObjByKeyId = function (keyId) {\n\t            var p = this.protoStrategy;\n\t            var inj = this.injector;\n\t            if (p.keyId0 === keyId) {\n\t                if (this.obj0 === UNDEFINED) {\n\t                    this.obj0 = inj._new(p.provider0);\n\t                }\n\t                return this.obj0;\n\t            }\n\t            if (p.keyId1 === keyId) {\n\t                if (this.obj1 === UNDEFINED) {\n\t                    this.obj1 = inj._new(p.provider1);\n\t                }\n\t                return this.obj1;\n\t            }\n\t            if (p.keyId2 === keyId) {\n\t                if (this.obj2 === UNDEFINED) {\n\t                    this.obj2 = inj._new(p.provider2);\n\t                }\n\t                return this.obj2;\n\t            }\n\t            if (p.keyId3 === keyId) {\n\t                if (this.obj3 === UNDEFINED) {\n\t                    this.obj3 = inj._new(p.provider3);\n\t                }\n\t                return this.obj3;\n\t            }\n\t            if (p.keyId4 === keyId) {\n\t                if (this.obj4 === UNDEFINED) {\n\t                    this.obj4 = inj._new(p.provider4);\n\t                }\n\t                return this.obj4;\n\t            }\n\t            if (p.keyId5 === keyId) {\n\t                if (this.obj5 === UNDEFINED) {\n\t                    this.obj5 = inj._new(p.provider5);\n\t                }\n\t                return this.obj5;\n\t            }\n\t            if (p.keyId6 === keyId) {\n\t                if (this.obj6 === UNDEFINED) {\n\t                    this.obj6 = inj._new(p.provider6);\n\t                }\n\t                return this.obj6;\n\t            }\n\t            if (p.keyId7 === keyId) {\n\t                if (this.obj7 === UNDEFINED) {\n\t                    this.obj7 = inj._new(p.provider7);\n\t                }\n\t                return this.obj7;\n\t            }\n\t            if (p.keyId8 === keyId) {\n\t                if (this.obj8 === UNDEFINED) {\n\t                    this.obj8 = inj._new(p.provider8);\n\t                }\n\t                return this.obj8;\n\t            }\n\t            if (p.keyId9 === keyId) {\n\t                if (this.obj9 === UNDEFINED) {\n\t                    this.obj9 = inj._new(p.provider9);\n\t                }\n\t                return this.obj9;\n\t            }\n\t            return UNDEFINED;\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getObjAtIndex = function (index) {\n\t            if (index == 0)\n\t                return this.obj0;\n\t            if (index == 1)\n\t                return this.obj1;\n\t            if (index == 2)\n\t                return this.obj2;\n\t            if (index == 3)\n\t                return this.obj3;\n\t            if (index == 4)\n\t                return this.obj4;\n\t            if (index == 5)\n\t                return this.obj5;\n\t            if (index == 6)\n\t                return this.obj6;\n\t            if (index == 7)\n\t                return this.obj7;\n\t            if (index == 8)\n\t                return this.obj8;\n\t            if (index == 9)\n\t                return this.obj9;\n\t            throw new OutOfBoundsError(index);\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getMaxNumberOfObjects = function () { return _MAX_CONSTRUCTION_COUNTER; };\n\t        return ReflectiveInjectorInlineStrategy;\n\t    }());\n\t    var ReflectiveInjectorDynamicStrategy = (function () {\n\t        function ReflectiveInjectorDynamicStrategy(protoStrategy, injector) {\n\t            this.protoStrategy = protoStrategy;\n\t            this.injector = injector;\n\t            this.objs = ListWrapper.createFixedSize(protoStrategy.providers.length);\n\t            ListWrapper.fill(this.objs, UNDEFINED);\n\t        }\n\t        ReflectiveInjectorDynamicStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n\t        ReflectiveInjectorDynamicStrategy.prototype.instantiateProvider = function (provider) {\n\t            return this.injector._new(provider);\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getObjByKeyId = function (keyId) {\n\t            var p = this.protoStrategy;\n\t            for (var i = 0; i < p.keyIds.length; i++) {\n\t                if (p.keyIds[i] === keyId) {\n\t                    if (this.objs[i] === UNDEFINED) {\n\t                        this.objs[i] = this.injector._new(p.providers[i]);\n\t                    }\n\t                    return this.objs[i];\n\t                }\n\t            }\n\t            return UNDEFINED;\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getObjAtIndex = function (index) {\n\t            if (index < 0 || index >= this.objs.length) {\n\t                throw new OutOfBoundsError(index);\n\t            }\n\t            return this.objs[index];\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function () { return this.objs.length; };\n\t        return ReflectiveInjectorDynamicStrategy;\n\t    }());\n\t    /**\n\t     * A ReflectiveDependency injection container used for instantiating objects and resolving\n\t     * dependencies.\n\t     *\n\t     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n\t     * constructor dependencies.\n\t     *\n\t     * In typical use, application code asks for the dependencies in the constructor and they are\n\t     * resolved by the `Injector`.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n\t     *\n\t     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n\t     *\n\t     * ```typescript\n\t     * @Injectable()\n\t     * class Engine {\n\t     * }\n\t     *\n\t     * @Injectable()\n\t     * class Car {\n\t     *   constructor(public engine:Engine) {}\n\t     * }\n\t     *\n\t     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t     * var car = injector.get(Car);\n\t     * expect(car instanceof Car).toBe(true);\n\t     * expect(car.engine instanceof Engine).toBe(true);\n\t     * ```\n\t     *\n\t     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n\t     * resolve all of the object's dependencies automatically.\n\t     *\n\t     * @stable\n\t     */\n\t    var ReflectiveInjector = (function () {\n\t        function ReflectiveInjector() {\n\t        }\n\t        /**\n\t         * Turns an array of provider definitions into an array of resolved providers.\n\t         *\n\t         * A resolution is a process of flattening multiple nested arrays and converting individual\n\t         * providers into an array of {@link ResolvedReflectiveProvider}s.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n\t         *\n\t         * expect(providers.length).toEqual(2);\n\t         *\n\t         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n\t         * expect(providers[0].key.displayName).toBe(\"Car\");\n\t         * expect(providers[0].dependencies.length).toEqual(1);\n\t         * expect(providers[0].factory).toBeDefined();\n\t         *\n\t         * expect(providers[1].key.displayName).toBe(\"Engine\");\n\t         * });\n\t         * ```\n\t         *\n\t         * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n\t         */\n\t        ReflectiveInjector.resolve = function (providers) {\n\t            return resolveReflectiveProviders(providers);\n\t        };\n\t        /**\n\t         * Resolves an array of providers and creates an injector from those providers.\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `fromResolvedProviders`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {@link Injector#resolve} and {@link Injector#fromResolvedProviders}.\n\t         */\n\t        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n\t        };\n\t        /**\n\t         * Creates an injector from previously resolved providers.\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n\t         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         * @experimental\n\t         */\n\t        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers), parent);\n\t        };\n\t        Object.defineProperty(ReflectiveInjector.prototype, \"parent\", {\n\t            /**\n\t             * Parent of this injector.\n\t             *\n\t             * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t             * -->\n\t             *\n\t             * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n\t             *\n\t             * ```typescript\n\t             * var parent = ReflectiveInjector.resolveAndCreate([]);\n\t             * var child = parent.resolveAndCreateChild([]);\n\t             * expect(child.parent).toBe(parent);\n\t             * ```\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Resolves an array of providers and creates a child injector from those providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n\t         * var child = parent.resolveAndCreateChild([ChildProvider]);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `createChildFromResolved`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {@link Injector#resolve} and {@link Injector#createChildFromResolved}.\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { return unimplemented(); };\n\t        /**\n\t         * Creates a child injector from previously resolved providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n\t         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n\t         *\n\t         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n\t         * var child = parent.createChildFromResolved(childProviders);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.createChildFromResolved = function (providers) {\n\t            return unimplemented();\n\t        };\n\t        /**\n\t         * Resolves a provider and instantiates an object in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         *\n\t         * var car = injector.resolveAndInstantiate(Car);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { return unimplemented(); };\n\t        /**\n\t         * Instantiates an object using a resolved provider in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n\t         * var car = injector.instantiateResolved(carProvider);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.instantiateResolved = function (provider) { return unimplemented(); };\n\t        return ReflectiveInjector;\n\t    }());\n\t    var ReflectiveInjector_ = (function () {\n\t        /**\n\t         * Private\n\t         */\n\t        function ReflectiveInjector_(_proto /* ProtoInjector */, _parent) {\n\t            if (_parent === void 0) { _parent = null; }\n\t            /** @internal */\n\t            this._constructionCounter = 0;\n\t            this._proto = _proto;\n\t            this._parent = _parent;\n\t            this._strategy = _proto._strategy.createInjectorStrategy(this);\n\t        }\n\t        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            return this._getByKey(ReflectiveKey.get(token), null, null, notFoundValue);\n\t        };\n\t        ReflectiveInjector_.prototype.getAt = function (index) { return this._strategy.getObjAtIndex(index); };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"internalStrategy\", {\n\t            /**\n\t             * @internal\n\t             * Internal. Do not use.\n\t             * We return `any` not to export the InjectorStrategy type.\n\t             */\n\t            get: function () { return this._strategy; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n\t            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return this.createChildFromResolved(ResolvedReflectiveProviders);\n\t        };\n\t        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n\t            var proto = new ReflectiveProtoInjector(providers);\n\t            var inj = new ReflectiveInjector_(proto);\n\t            inj._parent = this;\n\t            return inj;\n\t        };\n\t        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n\t            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n\t        };\n\t        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._new = function (provider) {\n\t            if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {\n\t                throw new CyclicDependencyError(this, provider.key);\n\t            }\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n\t            if (provider.multiProvider) {\n\t                var res = ListWrapper.createFixedSize(provider.resolvedFactories.length);\n\t                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n\t                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n\t                }\n\t                return res;\n\t            }\n\t            else {\n\t                return this._instantiate(provider, provider.resolvedFactories[0]);\n\t            }\n\t        };\n\t        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n\t            var factory = ResolvedReflectiveFactory.factory;\n\t            var deps = ResolvedReflectiveFactory.dependencies;\n\t            var length = deps.length;\n\t            var d0;\n\t            var d1;\n\t            var d2;\n\t            var d3;\n\t            var d4;\n\t            var d5;\n\t            var d6;\n\t            var d7;\n\t            var d8;\n\t            var d9;\n\t            var d10;\n\t            var d11;\n\t            var d12;\n\t            var d13;\n\t            var d14;\n\t            var d15;\n\t            var d16;\n\t            var d17;\n\t            var d18;\n\t            var d19;\n\t            try {\n\t                d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;\n\t                d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;\n\t                d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;\n\t                d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;\n\t                d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;\n\t                d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;\n\t                d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;\n\t                d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;\n\t                d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;\n\t                d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;\n\t                d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;\n\t                d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;\n\t                d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;\n\t                d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;\n\t                d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;\n\t                d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;\n\t                d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;\n\t                d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;\n\t                d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;\n\t                d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;\n\t            }\n\t            catch (e) {\n\t                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n\t                    e.addKey(this, provider.key);\n\t                }\n\t                throw e;\n\t            }\n\t            var obj;\n\t            try {\n\t                switch (length) {\n\t                    case 0:\n\t                        obj = factory();\n\t                        break;\n\t                    case 1:\n\t                        obj = factory(d0);\n\t                        break;\n\t                    case 2:\n\t                        obj = factory(d0, d1);\n\t                        break;\n\t                    case 3:\n\t                        obj = factory(d0, d1, d2);\n\t                        break;\n\t                    case 4:\n\t                        obj = factory(d0, d1, d2, d3);\n\t                        break;\n\t                    case 5:\n\t                        obj = factory(d0, d1, d2, d3, d4);\n\t                        break;\n\t                    case 6:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5);\n\t                        break;\n\t                    case 7:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6);\n\t                        break;\n\t                    case 8:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);\n\t                        break;\n\t                    case 9:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);\n\t                        break;\n\t                    case 10:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);\n\t                        break;\n\t                    case 11:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);\n\t                        break;\n\t                    case 12:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);\n\t                        break;\n\t                    case 13:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);\n\t                        break;\n\t                    case 14:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);\n\t                        break;\n\t                    case 15:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);\n\t                        break;\n\t                    case 16:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);\n\t                        break;\n\t                    case 17:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);\n\t                        break;\n\t                    case 18:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);\n\t                        break;\n\t                    case 19:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);\n\t                        break;\n\t                    case 20:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);\n\t                        break;\n\t                    default:\n\t                        throw new Error(\"Cannot instantiate '\" + provider.key.displayName + \"' because it has more than 20 dependencies\");\n\t                }\n\t            }\n\t            catch (e) {\n\t                throw new InstantiationError(this, e, e.stack, provider.key);\n\t            }\n\t            return obj;\n\t        };\n\t        ReflectiveInjector_.prototype._getByReflectiveDependency = function (provider, dep) {\n\t            return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n\t        };\n\t        ReflectiveInjector_.prototype._getByKey = function (key, lowerBoundVisibility, upperBoundVisibility, notFoundValue) {\n\t            if (key === INJECTOR_KEY) {\n\t                return this;\n\t            }\n\t            if (upperBoundVisibility instanceof Self) {\n\t                return this._getByKeySelf(key, notFoundValue);\n\t            }\n\t            else {\n\t                return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);\n\t            }\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n\t            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n\t                return notFoundValue;\n\t            }\n\t            else {\n\t                throw new NoProviderError(this, key);\n\t            }\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n\t            var obj = this._strategy.getObjByKeyId(key.id);\n\t            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, lowerBoundVisibility) {\n\t            var inj;\n\t            if (lowerBoundVisibility instanceof SkipSelf) {\n\t                inj = this._parent;\n\t            }\n\t            else {\n\t                inj = this;\n\t            }\n\t            while (inj instanceof ReflectiveInjector_) {\n\t                var inj_ = inj;\n\t                var obj = inj_._strategy.getObjByKeyId(key.id);\n\t                if (obj !== UNDEFINED)\n\t                    return obj;\n\t                inj = inj_._parent;\n\t            }\n\t            if (inj !== null) {\n\t                return inj.get(key.token, notFoundValue);\n\t            }\n\t            else {\n\t                return this._throwOrNull(key, notFoundValue);\n\t            }\n\t        };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n\t            get: function () {\n\t                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n\t                    .join(', ');\n\t                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n\t        return ReflectiveInjector_;\n\t    }());\n\t    var INJECTOR_KEY = ReflectiveKey.get(Injector);\n\t    function _mapProviders(injector, fn) {\n\t        var res = new Array(injector._proto.numberOfProviders);\n\t        for (var i = 0; i < injector._proto.numberOfProviders; ++i) {\n\t            res[i] = fn(injector._proto.getProviderAtIndex(i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Provides a hook for centralized exception handling.\n\t     *\n\t     * The default implementation of `ErrorHandler` prints error messages to the `Console`. To\n\t     * intercept error handling,\n\t     * write a custom exception handler that replaces this default as appropriate for your app.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```javascript\n\t     *\n\t     * class MyErrorHandler implements ErrorHandler {\n\t     *   call(error, stackTrace = null, reason = null) {\n\t     *     // do something with the exception\n\t     *   }\n\t     * }\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n\t     * })\n\t     * class MyModule {}\n\t     * ```\n\t     * @stable\n\t     */\n\t    var ErrorHandler = (function () {\n\t        function ErrorHandler(rethrowError) {\n\t            if (rethrowError === void 0) { rethrowError = true; }\n\t            /**\n\t             * @internal\n\t             */\n\t            this._console = console;\n\t            this.rethrowError = rethrowError;\n\t        }\n\t        ErrorHandler.prototype.handleError = function (error) {\n\t            var originalError = this._findOriginalError(error);\n\t            var originalStack = this._findOriginalStack(error);\n\t            var context = this._findContext(error);\n\t            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n\t            if (originalError) {\n\t                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n\t            }\n\t            if (originalStack) {\n\t                this._console.error('ORIGINAL STACKTRACE:');\n\t                this._console.error(originalStack);\n\t            }\n\t            if (context) {\n\t                this._console.error('ERROR CONTEXT:');\n\t                this._console.error(context);\n\t            }\n\t            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n\t            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n\t            if (this.rethrowError)\n\t                throw error;\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._extractMessage = function (error) {\n\t            return error instanceof Error ? error.message : error.toString();\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findContext = function (error) {\n\t            if (error) {\n\t                return error.context ? error.context :\n\t                    this._findContext(error.originalError);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findOriginalError = function (error) {\n\t            var e = error.originalError;\n\t            while (e && e.originalError) {\n\t                e = e.originalError;\n\t            }\n\t            return e;\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findOriginalStack = function (error) {\n\t            if (!(error instanceof Error))\n\t                return null;\n\t            var e = error;\n\t            var stack = e.stack;\n\t            while (e instanceof Error && e.originalError) {\n\t                e = e.originalError;\n\t                if (e instanceof Error && e.stack) {\n\t                    stack = e.stack;\n\t                }\n\t            }\n\t            return stack;\n\t        };\n\t        return ErrorHandler;\n\t    }());\n\t\n\t    /**\n\t     * A function that will be executed when an application is initialized.\n\t     * @experimental\n\t     */\n\t    var APP_INITIALIZER = new OpaqueToken('Application Initializer');\n\t    /**\n\t     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ApplicationInitStatus = (function () {\n\t        function ApplicationInitStatus(appInits) {\n\t            var _this = this;\n\t            this._done = false;\n\t            var asyncInitPromises = [];\n\t            if (appInits) {\n\t                for (var i = 0; i < appInits.length; i++) {\n\t                    var initResult = appInits[i]();\n\t                    if (isPromise(initResult)) {\n\t                        asyncInitPromises.push(initResult);\n\t                    }\n\t                }\n\t            }\n\t            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n\t            if (asyncInitPromises.length === 0) {\n\t                this._done = true;\n\t            }\n\t        }\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n\t            get: function () { return this._done; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n\t            get: function () { return this._donePromise; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ApplicationInitStatus.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationInitStatus.ctorParameters = [\n\t            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n\t        ];\n\t        return ApplicationInitStatus;\n\t    }());\n\t\n\t    /**\n\t     * A DI Token representing a unique string id assigned to the application by Angular and used\n\t     * primarily for prefixing application attributes and CSS styles when\n\t     * {@link ViewEncapsulation#Emulated} is being used.\n\t     *\n\t     * If you need to avoid randomly generated value to be used as an application id, you can provide\n\t     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n\t     * using this token.\n\t     * @experimental\n\t     */\n\t    var APP_ID = new OpaqueToken('AppId');\n\t    function _appIdRandomProviderFactory() {\n\t        return \"\" + _randomChar() + _randomChar() + _randomChar();\n\t    }\n\t    /**\n\t     * Providers that will generate a random APP_ID_TOKEN.\n\t     * @experimental\n\t     */\n\t    var APP_ID_RANDOM_PROVIDER = {\n\t        provide: APP_ID,\n\t        useFactory: _appIdRandomProviderFactory,\n\t        deps: []\n\t    };\n\t    function _randomChar() {\n\t        return StringWrapper.fromCharCode(97 + Math.floor(Math.random() * 25));\n\t    }\n\t    /**\n\t     * A function that will be executed when a platform is initialized.\n\t     * @experimental\n\t     */\n\t    var PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n\t    /**\n\t     * All callbacks provided via this token will be called for every component that is bootstrapped.\n\t     * Signature of the callback:\n\t     *\n\t     * `(componentRef: ComponentRef) => void`.\n\t     *\n\t     * @experimental\n\t     */\n\t    var APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n\t    /**\n\t     * A token which indicates the root directory of the application\n\t     * @experimental\n\t     */\n\t    var PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\t\n\t    var Console = (function () {\n\t        function Console() {\n\t        }\n\t        Console.prototype.log = function (message) { print(message); };\n\t        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n\t        Console.prototype.warn = function (message) { warn(message); };\n\t        Console.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Console.ctorParameters = [];\n\t        return Console;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a component is still being loaded in a synchronous compile.\n\t     *\n\t     * @stable\n\t     */\n\t    var ComponentStillLoadingError = (function (_super) {\n\t        __extends$4(ComponentStillLoadingError, _super);\n\t        function ComponentStillLoadingError(compType) {\n\t            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n\t            this.compType = compType;\n\t        }\n\t        return ComponentStillLoadingError;\n\t    }(BaseError));\n\t    /**\n\t     * Combination of NgModuleFactory and ComponentFactorys.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ModuleWithComponentFactories = (function () {\n\t        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n\t            this.ngModuleFactory = ngModuleFactory;\n\t            this.componentFactories = componentFactories;\n\t        }\n\t        return ModuleWithComponentFactories;\n\t    }());\n\t    function _throwError() {\n\t        throw new Error(\"Runtime compiler is not loaded\");\n\t    }\n\t    /**\n\t     * Low-level service for running the angular compiler during runtime\n\t     * to create {@link ComponentFactory}s, which\n\t     * can later be used to create and render a Component instance.\n\t     *\n\t     * Each `@NgModule` provides an own `Compiler` to its injector,\n\t     * that will use the directives/pipes of the ng module for compilation\n\t     * of components.\n\t     * @stable\n\t     */\n\t    var Compiler = (function () {\n\t        function Compiler() {\n\t        }\n\t        /**\n\t         * Compiles the given NgModule and all of its components. All templates of the components listed\n\t         * in `entryComponents`\n\t         * have to be inlined. Otherwise throws a {@link ComponentStillLoadingError}.\n\t         */\n\t        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Compiles the given NgModule and all of its components\n\t         */\n\t        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Same as {@link compileModuleSync} but also creates ComponentFactories for all components.\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Same as {@link compileModuleAsync} but also creates ComponentFactories for all components.\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Clears all caches.\n\t         */\n\t        Compiler.prototype.clearCache = function () { };\n\t        /**\n\t         * Clears the cache for the given component/ngModule.\n\t         */\n\t        Compiler.prototype.clearCacheFor = function (type) { };\n\t        return Compiler;\n\t    }());\n\t    /**\n\t     * Token to provide CompilerOptions in the platform injector.\n\t     *\n\t     * @experimental\n\t     */\n\t    var COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n\t    /**\n\t     * A factory for creating a Compiler\n\t     *\n\t     * @experimental\n\t     */\n\t    var CompilerFactory = (function () {\n\t        function CompilerFactory() {\n\t        }\n\t        return CompilerFactory;\n\t    }());\n\t\n\t    var DefaultIterableDifferFactory = (function () {\n\t        function DefaultIterableDifferFactory() {\n\t        }\n\t        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n\t        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n\t            return new DefaultIterableDiffer(trackByFn);\n\t        };\n\t        return DefaultIterableDifferFactory;\n\t    }());\n\t    var trackByIdentity = function (index, item) { return item; };\n\t    /**\n\t     * @stable\n\t     */\n\t    var DefaultIterableDiffer = (function () {\n\t        function DefaultIterableDiffer(_trackByFn) {\n\t            this._trackByFn = _trackByFn;\n\t            this._length = null;\n\t            this._collection = null;\n\t            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n\t            this._linkedRecords = null;\n\t            // Keeps track of the removed records at any point in time during `_check()` calls.\n\t            this._unlinkedRecords = null;\n\t            this._previousItHead = null;\n\t            this._itHead = null;\n\t            this._itTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._movesHead = null;\n\t            this._movesTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t            // Keeps track of records where custom track by is the same, but item identity has changed\n\t            this._identityChangesHead = null;\n\t            this._identityChangesTail = null;\n\t            this._trackByFn = isPresent(this._trackByFn) ? this._trackByFn : trackByIdentity;\n\t        }\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n\t            get: function () { return this._collection; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n\t            get: function () { return this._length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n\t            var record;\n\t            for (record = this._itHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n\t            var nextIt = this._itHead;\n\t            var nextRemove = this._removalsHead;\n\t            var addRemoveOffset = 0;\n\t            var moveOffsets = null;\n\t            while (nextIt || nextRemove) {\n\t                // Figure out which is the next record to process\n\t                // Order: remove, add, move\n\t                var record = !nextRemove ||\n\t                    nextIt &&\n\t                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n\t                    nextIt :\n\t                    nextRemove;\n\t                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n\t                var currentIndex = record.currentIndex;\n\t                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n\t                if (record === nextRemove) {\n\t                    addRemoveOffset--;\n\t                    nextRemove = nextRemove._nextRemoved;\n\t                }\n\t                else {\n\t                    nextIt = nextIt._next;\n\t                    if (record.previousIndex == null) {\n\t                        addRemoveOffset++;\n\t                    }\n\t                    else {\n\t                        // INVARIANT:  currentIndex < previousIndex\n\t                        if (!moveOffsets)\n\t                            moveOffsets = [];\n\t                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n\t                        var localCurrentIndex = currentIndex - addRemoveOffset;\n\t                        if (localMovePreviousIndex != localCurrentIndex) {\n\t                            for (var i = 0; i < localMovePreviousIndex; i++) {\n\t                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n\t                                var index = offset + i;\n\t                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n\t                                    moveOffsets[i] = offset + 1;\n\t                                }\n\t                            }\n\t                            var previousIndex = record.previousIndex;\n\t                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n\t                        }\n\t                    }\n\t                }\n\t                if (adjPreviousIndex !== currentIndex) {\n\t                    fn(record, adjPreviousIndex, currentIndex);\n\t                }\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var record;\n\t            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n\t            var record;\n\t            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.diff = function (collection) {\n\t            if (isBlank(collection))\n\t                collection = [];\n\t            if (!isListLikeIterable(collection)) {\n\t                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n\t            }\n\t            if (this.check(collection)) {\n\t                return this;\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.onDestroy = function () { };\n\t        // todo(vicb): optim for UnmodifiableListView (frozen arrays)\n\t        DefaultIterableDiffer.prototype.check = function (collection) {\n\t            var _this = this;\n\t            this._reset();\n\t            var record = this._itHead;\n\t            var mayBeDirty = false;\n\t            var index;\n\t            var item;\n\t            var itemTrackBy;\n\t            if (isArray(collection)) {\n\t                var list = collection;\n\t                this._length = collection.length;\n\t                for (index = 0; index < this._length; index++) {\n\t                    item = list[index];\n\t                    itemTrackBy = this._trackByFn(index, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = this._mismatch(record, item, itemTrackBy, index);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                }\n\t            }\n\t            else {\n\t                index = 0;\n\t                iterateListLike(collection, function (item /** TODO #9100 */) {\n\t                    itemTrackBy = _this._trackByFn(index, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = _this._mismatch(record, item, itemTrackBy, index);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            _this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                    index++;\n\t                });\n\t                this._length = index;\n\t            }\n\t            this._truncate(record);\n\t            this._collection = collection;\n\t            return this.isDirty;\n\t        };\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n\t            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n\t             * changes.\n\t             */\n\t            get: function () {\n\t                return this._additionsHead !== null || this._movesHead !== null ||\n\t                    this._removalsHead !== null || this._identityChangesHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Reset the state of the change objects to show no changes. This means set previousKey to\n\t         * currentKey, and clear all of the queues (additions, moves, removals).\n\t         * Set the previousIndexes of moved and added items to their currentIndexes\n\t         * Reset the list of additions, moves and removals\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var record;\n\t                var nextRecord;\n\t                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                    record.previousIndex = record.currentIndex;\n\t                }\n\t                this._additionsHead = this._additionsTail = null;\n\t                for (record = this._movesHead; record !== null; record = nextRecord) {\n\t                    record.previousIndex = record.currentIndex;\n\t                    nextRecord = record._nextMoved;\n\t                }\n\t                this._movesHead = this._movesTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t                this._identityChangesHead = this._identityChangesTail = null;\n\t            }\n\t        };\n\t        /**\n\t         * This is the core function which handles differences between collections.\n\t         *\n\t         * - `record` is the record which we saw at this position last time. If null then it is a new\n\t         *   item.\n\t         * - `item` is the current item in the collection\n\t         * - `index` is the position of the item in the collection\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n\t            // The previous record after which we will append the current one.\n\t            var previousRecord;\n\t            if (record === null) {\n\t                previousRecord = this._itTail;\n\t            }\n\t            else {\n\t                previousRecord = record._prev;\n\t                // Remove the record from the collection since we know it does not match the item.\n\t                this._remove(record);\n\t            }\n\t            // Attempt to see if we have seen the item before.\n\t            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n\t            if (record !== null) {\n\t                // We have seen this before, we need to move it forward in the collection.\n\t                // But first we need to check if identity changed, so we can update in view if necessary\n\t                if (!looseIdentical(record.item, item))\n\t                    this._addIdentityChange(record, item);\n\t                this._moveAfter(record, previousRecord, index);\n\t            }\n\t            else {\n\t                // Never seen it, check evicted list.\n\t                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t                if (record !== null) {\n\t                    // It is an item which we have evicted earlier: reinsert it back into the list.\n\t                    // But first we need to check if identity changed, so we can update in view if necessary\n\t                    if (!looseIdentical(record.item, item))\n\t                        this._addIdentityChange(record, item);\n\t                    this._reinsertAfter(record, previousRecord, index);\n\t                }\n\t                else {\n\t                    // It is a new item: add it.\n\t                    record =\n\t                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n\t                }\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n\t         *\n\t         * Use case: `[a, a]` => `[b, a, a]`\n\t         *\n\t         * If we did not have this check then the insertion of `b` would:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) leave `a` at index `1` as is. <-- this is wrong!\n\t         *   3) reinsert `a` at index 2. <-- this is wrong!\n\t         *\n\t         * The correct behavior is:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) reinsert `a` at index 1.\n\t         *   3) move `a` at from `1` to `2`.\n\t         *\n\t         *\n\t         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n\t         * have already been removed:\n\t         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n\t         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n\t         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n\t         * at the end.\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n\t            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t            if (reinsertRecord !== null) {\n\t                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n\t            }\n\t            else if (record.currentIndex != index) {\n\t                record.currentIndex = index;\n\t                this._addToMoves(record, index);\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * Get rid of any excess {@link CollectionChangeRecord}s from the previous collection\n\t         *\n\t         * - `record` The first excess {@link CollectionChangeRecord}.\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._truncate = function (record) {\n\t            // Anything after that needs to be removed;\n\t            while (record !== null) {\n\t                var nextRecord = record._next;\n\t                this._addToRemovals(this._unlink(record));\n\t                record = nextRecord;\n\t            }\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.clear();\n\t            }\n\t            if (this._additionsTail !== null) {\n\t                this._additionsTail._nextAdded = null;\n\t            }\n\t            if (this._movesTail !== null) {\n\t                this._movesTail._nextMoved = null;\n\t            }\n\t            if (this._itTail !== null) {\n\t                this._itTail._next = null;\n\t            }\n\t            if (this._removalsTail !== null) {\n\t                this._removalsTail._nextRemoved = null;\n\t            }\n\t            if (this._identityChangesTail !== null) {\n\t                this._identityChangesTail._nextIdentityChange = null;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.remove(record);\n\t            }\n\t            var prev = record._prevRemoved;\n\t            var next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n\t            this._unlink(record);\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n\t            this._insertAfter(record, prevRecord, index);\n\t            if (this._additionsTail === null) {\n\t                // todo(vicb)\n\t                // assert(this._additionsHead === null);\n\t                this._additionsTail = this._additionsHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_additionsTail._nextAdded === null);\n\t                // assert(record._nextAdded === null);\n\t                this._additionsTail = this._additionsTail._nextAdded = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n\t            // todo(vicb)\n\t            // assert(record != prevRecord);\n\t            // assert(record._next === null);\n\t            // assert(record._prev === null);\n\t            var next = prevRecord === null ? this._itHead : prevRecord._next;\n\t            // todo(vicb)\n\t            // assert(next != record);\n\t            // assert(prevRecord != record);\n\t            record._next = next;\n\t            record._prev = prevRecord;\n\t            if (next === null) {\n\t                this._itTail = record;\n\t            }\n\t            else {\n\t                next._prev = record;\n\t            }\n\t            if (prevRecord === null) {\n\t                this._itHead = record;\n\t            }\n\t            else {\n\t                prevRecord._next = record;\n\t            }\n\t            if (this._linkedRecords === null) {\n\t                this._linkedRecords = new _DuplicateMap();\n\t            }\n\t            this._linkedRecords.put(record);\n\t            record.currentIndex = index;\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._remove = function (record) {\n\t            return this._addToRemovals(this._unlink(record));\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._unlink = function (record) {\n\t            if (this._linkedRecords !== null) {\n\t                this._linkedRecords.remove(record);\n\t            }\n\t            var prev = record._prev;\n\t            var next = record._next;\n\t            // todo(vicb)\n\t            // assert((record._prev = null) === null);\n\t            // assert((record._next = null) === null);\n\t            if (prev === null) {\n\t                this._itHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            if (next === null) {\n\t                this._itTail = prev;\n\t            }\n\t            else {\n\t                next._prev = prev;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n\t            // todo(vicb)\n\t            // assert(record._nextMoved === null);\n\t            if (record.previousIndex === toIndex) {\n\t                return record;\n\t            }\n\t            if (this._movesTail === null) {\n\t                // todo(vicb)\n\t                // assert(_movesHead === null);\n\t                this._movesTail = this._movesHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_movesTail._nextMoved === null);\n\t                this._movesTail = this._movesTail._nextMoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._unlinkedRecords === null) {\n\t                this._unlinkedRecords = new _DuplicateMap();\n\t            }\n\t            this._unlinkedRecords.put(record);\n\t            record.currentIndex = null;\n\t            record._nextRemoved = null;\n\t            if (this._removalsTail === null) {\n\t                // todo(vicb)\n\t                // assert(_removalsHead === null);\n\t                this._removalsTail = this._removalsHead = record;\n\t                record._prevRemoved = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_removalsTail._nextRemoved === null);\n\t                // assert(record._nextRemoved === null);\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = this._removalsTail._nextRemoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n\t            record.item = item;\n\t            if (this._identityChangesTail === null) {\n\t                this._identityChangesTail = this._identityChangesHead = record;\n\t            }\n\t            else {\n\t                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n\t            }\n\t            return record;\n\t        };\n\t        DefaultIterableDiffer.prototype.toString = function () {\n\t            var list = [];\n\t            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n\t            var previous = [];\n\t            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n\t            var additions = [];\n\t            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n\t            var moves = [];\n\t            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n\t            var removals = [];\n\t            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n\t            var identityChanges = [];\n\t            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n\t            return 'collection: ' + list.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'moves: ' + moves.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n' +\n\t                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n\t        };\n\t        return DefaultIterableDiffer;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var CollectionChangeRecord = (function () {\n\t        function CollectionChangeRecord(item, trackById) {\n\t            this.item = item;\n\t            this.trackById = trackById;\n\t            this.currentIndex = null;\n\t            this.previousIndex = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._prev = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._prevDup = null;\n\t            /** @internal */\n\t            this._nextDup = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextMoved = null;\n\t            /** @internal */\n\t            this._nextIdentityChange = null;\n\t        }\n\t        CollectionChangeRecord.prototype.toString = function () {\n\t            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n\t                stringify(this.item) + '[' +\n\t                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n\t        };\n\t        return CollectionChangeRecord;\n\t    }());\n\t    // A linked list of CollectionChangeRecords with the same CollectionChangeRecord.item\n\t    var _DuplicateItemRecordList = (function () {\n\t        function _DuplicateItemRecordList() {\n\t            /** @internal */\n\t            this._head = null;\n\t            /** @internal */\n\t            this._tail = null;\n\t        }\n\t        /**\n\t         * Append the record to the list of duplicates.\n\t         *\n\t         * Note: by design all records in the list of duplicates hold the same value in record.item.\n\t         */\n\t        _DuplicateItemRecordList.prototype.add = function (record) {\n\t            if (this._head === null) {\n\t                this._head = this._tail = record;\n\t                record._nextDup = null;\n\t                record._prevDup = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(record.item ==  _head.item ||\n\t                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n\t                this._tail._nextDup = record;\n\t                record._prevDup = this._tail;\n\t                record._nextDup = null;\n\t                this._tail = record;\n\t            }\n\t        };\n\t        // Returns a CollectionChangeRecord having CollectionChangeRecord.trackById == trackById and\n\t        // CollectionChangeRecord.currentIndex >= afterIndex\n\t        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n\t            var record;\n\t            for (record = this._head; record !== null; record = record._nextDup) {\n\t                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n\t                    looseIdentical(record.trackById, trackById)) {\n\t                    return record;\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * Remove one {@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * Returns whether the list of duplicates is empty.\n\t         */\n\t        _DuplicateItemRecordList.prototype.remove = function (record) {\n\t            // todo(vicb)\n\t            // assert(() {\n\t            //  // verify that the record being removed is in the list.\n\t            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n\t            //    if (identical(cursor, record)) return true;\n\t            //  }\n\t            //  return false;\n\t            //});\n\t            var prev = record._prevDup;\n\t            var next = record._nextDup;\n\t            if (prev === null) {\n\t                this._head = next;\n\t            }\n\t            else {\n\t                prev._nextDup = next;\n\t            }\n\t            if (next === null) {\n\t                this._tail = prev;\n\t            }\n\t            else {\n\t                next._prevDup = prev;\n\t            }\n\t            return this._head === null;\n\t        };\n\t        return _DuplicateItemRecordList;\n\t    }());\n\t    var _DuplicateMap = (function () {\n\t        function _DuplicateMap() {\n\t            this.map = new Map();\n\t        }\n\t        _DuplicateMap.prototype.put = function (record) {\n\t            // todo(vicb) handle corner cases\n\t            var key = getMapKey(record.trackById);\n\t            var duplicates = this.map.get(key);\n\t            if (!isPresent(duplicates)) {\n\t                duplicates = new _DuplicateItemRecordList();\n\t                this.map.set(key, duplicates);\n\t            }\n\t            duplicates.add(record);\n\t        };\n\t        /**\n\t         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n\t         * have already iterated over, we use the afterIndex to pretend it is not there.\n\t         *\n\t         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n\t         * have any more `a`s needs to return the last `a` not the first or second.\n\t         */\n\t        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n\t            if (afterIndex === void 0) { afterIndex = null; }\n\t            var key = getMapKey(trackById);\n\t            var recordList = this.map.get(key);\n\t            return isBlank(recordList) ? null : recordList.get(trackById, afterIndex);\n\t        };\n\t        /**\n\t         * Removes a {@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * The list of duplicates also is removed from the map if it gets empty.\n\t         */\n\t        _DuplicateMap.prototype.remove = function (record) {\n\t            var key = getMapKey(record.trackById);\n\t            // todo(vicb)\n\t            // assert(this.map.containsKey(key));\n\t            var recordList = this.map.get(key);\n\t            // Remove the list of duplicates when it gets empty\n\t            if (recordList.remove(record)) {\n\t                this.map.delete(key);\n\t            }\n\t            return record;\n\t        };\n\t        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n\t            get: function () { return this.map.size === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n\t        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n\t        return _DuplicateMap;\n\t    }());\n\t    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n\t        var previousIndex = item.previousIndex;\n\t        if (previousIndex === null)\n\t            return previousIndex;\n\t        var moveOffset = 0;\n\t        if (moveOffsets && previousIndex < moveOffsets.length) {\n\t            moveOffset = moveOffsets[previousIndex];\n\t        }\n\t        return previousIndex + addRemoveOffset + moveOffset;\n\t    }\n\t\n\t    var DefaultKeyValueDifferFactory = (function () {\n\t        function DefaultKeyValueDifferFactory() {\n\t        }\n\t        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n\t        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n\t        return DefaultKeyValueDifferFactory;\n\t    }());\n\t    var DefaultKeyValueDiffer = (function () {\n\t        function DefaultKeyValueDiffer() {\n\t            this._records = new Map();\n\t            this._mapHead = null;\n\t            this._previousMapHead = null;\n\t            this._changesHead = null;\n\t            this._changesTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t        }\n\t        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n\t            get: function () {\n\t                return this._additionsHead !== null || this._changesHead !== null ||\n\t                    this._removalsHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n\t            var record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var record;\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n\t            var record;\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.diff = function (map) {\n\t            if (!map) {\n\t                map = new Map();\n\t            }\n\t            else if (!(map instanceof Map || isJsObject(map))) {\n\t                throw new Error(\"Error trying to diff '\" + map + \"'\");\n\t            }\n\t            return this.check(map) ? this : null;\n\t        };\n\t        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n\t        DefaultKeyValueDiffer.prototype.check = function (map) {\n\t            var _this = this;\n\t            this._reset();\n\t            var records = this._records;\n\t            var oldSeqRecord = this._mapHead;\n\t            var lastOldSeqRecord = null;\n\t            var lastNewSeqRecord = null;\n\t            var seqChanged = false;\n\t            this._forEach(map, function (value, key) {\n\t                var newSeqRecord;\n\t                if (oldSeqRecord && key === oldSeqRecord.key) {\n\t                    newSeqRecord = oldSeqRecord;\n\t                    _this._maybeAddToChanges(newSeqRecord, value);\n\t                }\n\t                else {\n\t                    seqChanged = true;\n\t                    if (oldSeqRecord !== null) {\n\t                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n\t                        _this._addToRemovals(oldSeqRecord);\n\t                    }\n\t                    if (records.has(key)) {\n\t                        newSeqRecord = records.get(key);\n\t                        _this._maybeAddToChanges(newSeqRecord, value);\n\t                    }\n\t                    else {\n\t                        newSeqRecord = new KeyValueChangeRecord(key);\n\t                        records.set(key, newSeqRecord);\n\t                        newSeqRecord.currentValue = value;\n\t                        _this._addToAdditions(newSeqRecord);\n\t                    }\n\t                }\n\t                if (seqChanged) {\n\t                    if (_this._isInRemovals(newSeqRecord)) {\n\t                        _this._removeFromRemovals(newSeqRecord);\n\t                    }\n\t                    if (lastNewSeqRecord == null) {\n\t                        _this._mapHead = newSeqRecord;\n\t                    }\n\t                    else {\n\t                        lastNewSeqRecord._next = newSeqRecord;\n\t                    }\n\t                }\n\t                lastOldSeqRecord = oldSeqRecord;\n\t                lastNewSeqRecord = newSeqRecord;\n\t                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n\t            });\n\t            this._truncate(lastOldSeqRecord, oldSeqRecord);\n\t            return this.isDirty;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var record = void 0;\n\t                // Record the state of the mapping\n\t                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                this._changesHead = this._changesTail = null;\n\t                this._additionsHead = this._additionsTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n\t            while (record !== null) {\n\t                if (lastRecord === null) {\n\t                    this._mapHead = null;\n\t                }\n\t                else {\n\t                    lastRecord._next = null;\n\t                }\n\t                var nextRecord = record._next;\n\t                this._addToRemovals(record);\n\t                lastRecord = record;\n\t                record = nextRecord;\n\t            }\n\t            for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n\t                rec.previousValue = rec.currentValue;\n\t                rec.currentValue = null;\n\t                this._records.delete(rec.key);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n\t            if (!looseIdentical(newValue, record.currentValue)) {\n\t                record.previousValue = record.currentValue;\n\t                record.currentValue = newValue;\n\t                this._addToChanges(record);\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n\t            return record === this._removalsHead || record._nextRemoved !== null ||\n\t                record._prevRemoved !== null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._removalsHead === null) {\n\t                this._removalsHead = this._removalsTail = record;\n\t            }\n\t            else {\n\t                this._removalsTail._nextRemoved = record;\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = record;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n\t            var next = record._next;\n\t            if (prev === null) {\n\t                this._mapHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            record._next = null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n\t            var prev = record._prevRemoved;\n\t            var next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            record._prevRemoved = record._nextRemoved = null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n\t            if (this._additionsHead === null) {\n\t                this._additionsHead = this._additionsTail = record;\n\t            }\n\t            else {\n\t                this._additionsTail._nextAdded = record;\n\t                this._additionsTail = record;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n\t            if (this._changesHead === null) {\n\t                this._changesHead = this._changesTail = record;\n\t            }\n\t            else {\n\t                this._changesTail._nextChanged = record;\n\t                this._changesTail = record;\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.toString = function () {\n\t            var items = [];\n\t            var previous = [];\n\t            var changes = [];\n\t            var additions = [];\n\t            var removals = [];\n\t            var record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                items.push(stringify(record));\n\t            }\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                previous.push(stringify(record));\n\t            }\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                changes.push(stringify(record));\n\t            }\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                additions.push(stringify(record));\n\t            }\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                removals.push(stringify(record));\n\t            }\n\t            return 'map: ' + items.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'changes: ' + changes.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n';\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n\t            if (obj instanceof Map) {\n\t                obj.forEach(fn);\n\t            }\n\t            else {\n\t                StringMapWrapper.forEach(obj, fn);\n\t            }\n\t        };\n\t        return DefaultKeyValueDiffer;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var KeyValueChangeRecord = (function () {\n\t        function KeyValueChangeRecord(key) {\n\t            this.key = key;\n\t            this.previousValue = null;\n\t            this.currentValue = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextChanged = null;\n\t        }\n\t        KeyValueChangeRecord.prototype.toString = function () {\n\t            return looseIdentical(this.previousValue, this.currentValue) ?\n\t                stringify(this.key) :\n\t                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n\t                    stringify(this.currentValue) + ']');\n\t        };\n\t        return KeyValueChangeRecord;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n\t     * @stable\n\t     */\n\t    var IterableDiffers = (function () {\n\t        function IterableDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        IterableDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var copied = ListWrapper.clone(parent.factories);\n\t                factories = factories.concat(copied);\n\t                return new IterableDiffers(factories);\n\t            }\n\t            else {\n\t                return new IterableDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n\t         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n\t         * {@link IterableDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t               * which will only be applied to the injector for this component and its children.\n\t               * This step is all that's required to make a new {@link IterableDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * @Component({\n\t         *   viewProviders: [\n\t         *     IterableDiffers.extend([new ImmutableListDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         */\n\t        IterableDiffers.extend = function (factories) {\n\t            return {\n\t                provide: IterableDiffers,\n\t                useFactory: function (parent) {\n\t                    if (isBlank(parent)) {\n\t                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n\t                    }\n\t                    return IterableDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        IterableDiffers.prototype.find = function (iterable) {\n\t            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n\t            }\n\t        };\n\t        return IterableDiffers;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n\t     * @stable\n\t     */\n\t    var KeyValueDiffers = (function () {\n\t        function KeyValueDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        KeyValueDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var copied = ListWrapper.clone(parent.factories);\n\t                factories = factories.concat(copied);\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t            else {\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n\t         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n\t         * {@link KeyValueDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t               * which will only be applied to the injector for this component and its children.\n\t               * This step is all that's required to make a new {@link KeyValueDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * @Component({\n\t         *   viewProviders: [\n\t         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         */\n\t        KeyValueDiffers.extend = function (factories) {\n\t            return {\n\t                provide: KeyValueDiffers,\n\t                useFactory: function (parent) {\n\t                    if (isBlank(parent)) {\n\t                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n\t                    }\n\t                    return KeyValueDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        KeyValueDiffers.prototype.find = function (kv) {\n\t            var factory = this.factories.find(function (f) { return f.supports(kv); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n\t            }\n\t        };\n\t        return KeyValueDiffers;\n\t    }());\n\t\n\t    var UNINITIALIZED = {\n\t        toString: function () { return 'CD_INIT_VALUE'; }\n\t    };\n\t    function devModeEqual(a, b) {\n\t        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n\t            return areIterablesEqual(a, b, devModeEqual);\n\t        }\n\t        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n\t            return true;\n\t        }\n\t        else {\n\t            return looseIdentical(a, b);\n\t        }\n\t    }\n\t    /**\n\t     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n\t     * reference\n\t     * has not changed.\n\t     *\n\t     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```\n\t     * if (this._latestValue === this._latestReturnedValue) {\n\t     *    return this._latestReturnedValue;\n\t     *  } else {\n\t     *    this._latestReturnedValue = this._latestValue;\n\t     *    return WrappedValue.wrap(this._latestValue); // this will force update\n\t     *  }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var WrappedValue = (function () {\n\t        function WrappedValue(wrapped) {\n\t            this.wrapped = wrapped;\n\t        }\n\t        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n\t        return WrappedValue;\n\t    }());\n\t    /**\n\t     * Helper class for unwrapping WrappedValue s\n\t     */\n\t    var ValueUnwrapper = (function () {\n\t        function ValueUnwrapper() {\n\t            this.hasWrappedValue = false;\n\t        }\n\t        ValueUnwrapper.prototype.unwrap = function (value) {\n\t            if (value instanceof WrappedValue) {\n\t                this.hasWrappedValue = true;\n\t                return value.wrapped;\n\t            }\n\t            return value;\n\t        };\n\t        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n\t        return ValueUnwrapper;\n\t    }());\n\t    /**\n\t     * Represents a basic change from a previous to a new value.\n\t     * @stable\n\t     */\n\t    var SimpleChange = (function () {\n\t        function SimpleChange(previousValue, currentValue) {\n\t            this.previousValue = previousValue;\n\t            this.currentValue = currentValue;\n\t        }\n\t        /**\n\t         * Check whether the new value is the first value assigned.\n\t         */\n\t        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n\t        return SimpleChange;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @stable\n\t     */\n\t    var ChangeDetectorRef = (function () {\n\t        function ChangeDetectorRef() {\n\t        }\n\t        return ChangeDetectorRef;\n\t    }());\n\t\n\t    /**\n\t     * Structural diffing for `Object`s and `Map`s.\n\t     */\n\t    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n\t    /**\n\t     * Structural diffing for `Iterable` types such as `Array`s.\n\t     */\n\t    var iterableDiff = [new DefaultIterableDifferFactory()];\n\t    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\t    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\t\n\t    /**\n\t     * @experimental\n\t     */\n\t    // TODO (matsko): add typing for the animation function\n\t    var RenderComponentType = (function () {\n\t        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n\t            this.id = id;\n\t            this.templateUrl = templateUrl;\n\t            this.slotCount = slotCount;\n\t            this.encapsulation = encapsulation;\n\t            this.styles = styles;\n\t            this.animations = animations;\n\t        }\n\t        return RenderComponentType;\n\t    }());\n\t    var RenderDebugInfo = (function () {\n\t        function RenderDebugInfo() {\n\t        }\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"injector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"component\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"providerTokens\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"references\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"context\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"source\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return RenderDebugInfo;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var Renderer = (function () {\n\t        function Renderer() {\n\t        }\n\t        return Renderer;\n\t    }());\n\t    /**\n\t     * Injectable service that provides a low-level interface for modifying the UI.\n\t     *\n\t     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n\t     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n\t     * not statically known, use {@link #setElementProperty} or {@link #setElementAttribute}\n\t     * respectively.\n\t     *\n\t     * If you are implementing a custom renderer, you must implement this interface.\n\t     *\n\t     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n\t     * @experimental\n\t     */\n\t    var RootRenderer = (function () {\n\t        function RootRenderer() {\n\t        }\n\t        return RootRenderer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n\t     * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n\t     * handled.\n\t     *\n\t     * See DomSanitizer for more details on security in Angular applications.\n\t     *\n\t     * @stable\n\t     */\n\t    exports.SecurityContext;\n\t    (function (SecurityContext) {\n\t        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n\t        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n\t        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n\t        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n\t        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n\t        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n\t    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\t    /**\n\t     * Sanitizer is used by the views to sanitize potentially dangerous values.\n\t     *\n\t     * @stable\n\t     */\n\t    var Sanitizer = (function () {\n\t        function Sanitizer() {\n\t        }\n\t        return Sanitizer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * A wrapper around a native element inside of a View.\n\t     *\n\t     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n\t     * element.\n\t     *\n\t     * @security Permitting direct access to the DOM can make your application more vulnerable to\n\t     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n\t     * [Security Guide](http://g.co/ng/security).\n\t     *\n\t     * @stable\n\t     */\n\t    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n\t    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n\t    // and could do better codegen in the future.\n\t    var ElementRef = (function () {\n\t        function ElementRef(nativeElement) {\n\t            this.nativeElement = nativeElement;\n\t        }\n\t        return ElementRef;\n\t    }());\n\t\n\t    var trace;\n\t    var events;\n\t    function detectWTF() {\n\t        var wtf = global$1['wtf'];\n\t        if (wtf) {\n\t            trace = wtf['trace'];\n\t            if (trace) {\n\t                events = trace['events'];\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t    function createScope(signature, flags) {\n\t        if (flags === void 0) { flags = null; }\n\t        return events.createScope(signature, flags);\n\t    }\n\t    function leave(scope, returnValue) {\n\t        trace.leaveScope(scope, returnValue);\n\t        return returnValue;\n\t    }\n\t    function startTimeRange(rangeType, action) {\n\t        return trace.beginTimeRange(rangeType, action);\n\t    }\n\t    function endTimeRange(range) {\n\t        trace.endTimeRange(range);\n\t    }\n\t\n\t    /**\n\t     * True if WTF is enabled.\n\t     */\n\t    var wtfEnabled = detectWTF();\n\t    function noopScope(arg0, arg1) {\n\t        return null;\n\t    }\n\t    /**\n\t     * Create trace scope.\n\t     *\n\t     * Scopes must be strictly nested and are analogous to stack frames, but\n\t     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n\t     * nesting. You may want to use\n\t     * [Event\n\t     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n\t     * as they are defined in WTF.\n\t     *\n\t     * Used to mark scope entry. The return value is used to leave the scope.\n\t     *\n\t     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n\t     *\n\t     *     someMethod() {\n\t     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n\t     *        // DO SOME WORK HERE\n\t     *        return wtfLeave(s, 123); // Return value 123\n\t     *     }\n\t     *\n\t     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n\t     * negatively impact the performance of your application. For this reason we recommend that\n\t     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n\t     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n\t     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n\t     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n\t     * an exception is expected during normal execution while profiling.\n\t     *\n\t     * @experimental\n\t     */\n\t    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n\t    /**\n\t     * Used to mark end of Scope.\n\t     *\n\t     * - `scope` to end.\n\t     * - `returnValue` (optional) to be passed to the WTF.\n\t     *\n\t     * Returns the `returnValue for easy chaining.\n\t     * @experimental\n\t     */\n\t    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n\t    /**\n\t     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n\t     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n\t     * enabled.\n\t     *\n\t     *     someMethod() {\n\t     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n\t     *        var future = new Future.delay(5).then((_) {\n\t     *          wtfEndTimeRange(s);\n\t     *        });\n\t     *     }\n\t     * @experimental\n\t     */\n\t    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n\t    /**\n\t     * Ends a async time range operation.\n\t     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n\t     * enabled.\n\t     * @experimental\n\t     */\n\t    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\t\n\t    /**\n\t     * Represents a container where one or more Views can be attached.\n\t     *\n\t     * The container can contain two kinds of Views. Host Views, created by instantiating a\n\t     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n\t     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n\t     *\n\t     * The location of the View Container within the containing View is specified by the Anchor\n\t     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n\t     * have a single View Container.\n\t     *\n\t     * Root elements of Views attached to this container become siblings of the Anchor Element in\n\t     * the Rendered View.\n\t     *\n\t     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n\t     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n\t     * @stable\n\t     */\n\t    var ViewContainerRef = (function () {\n\t        function ViewContainerRef() {\n\t        }\n\t        Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n\t            /**\n\t             * Anchor element that specifies the location of this container in the containing View.\n\t             * <!-- TODO: rename to anchorElement -->\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n\t            /**\n\t             * Returns the number of Views currently attached to this container.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return ViewContainerRef;\n\t    }());\n\t    var ViewContainerRef_ = (function () {\n\t        function ViewContainerRef_(_element) {\n\t            this._element = _element;\n\t            /** @internal */\n\t            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n\t            /** @internal */\n\t            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n\t            /** @internal */\n\t            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n\t            /** @internal */\n\t            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n\t        }\n\t        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n\t            get: function () {\n\t                var views = this._element.nestedViews;\n\t                return isPresent(views) ? views.length : 0;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n\t            get: function () { return this._element.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n\t            get: function () { return this._element.injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n\t            get: function () { return this._element.parentInjector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        // TODO(rado): profile and decide whether bounds checks should be added\n\t        // to the methods below.\n\t        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n\t            if (context === void 0) { context = null; }\n\t            if (index === void 0) { index = -1; }\n\t            var viewRef = templateRef.createEmbeddedView(context);\n\t            this.insert(viewRef, index);\n\t            return viewRef;\n\t        };\n\t        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n\t            if (index === void 0) { index = -1; }\n\t            if (injector === void 0) { injector = null; }\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            var s = this._createComponentInContainerScope();\n\t            var contextInjector = isPresent(injector) ? injector : this._element.parentInjector;\n\t            var componentRef = componentFactory.create(contextInjector, projectableNodes);\n\t            this.insert(componentRef.hostView, index);\n\t            return wtfLeave(s, componentRef);\n\t        };\n\t        // TODO(i): refactor insert+remove into move\n\t        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._insertScope();\n\t            if (index == -1)\n\t                index = this.length;\n\t            var viewRef_ = viewRef;\n\t            this._element.attachView(viewRef_.internalView, index);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n\t            var s = this._insertScope();\n\t            if (currentIndex == -1)\n\t                return;\n\t            var viewRef_ = viewRef;\n\t            this._element.moveView(viewRef_.internalView, currentIndex);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n\t            return ListWrapper.indexOf(this._element.nestedViews, viewRef.internalView);\n\t        };\n\t        // TODO(i): rename to destroy\n\t        ViewContainerRef_.prototype.remove = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._removeScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var view = this._element.detachView(index);\n\t            view.destroy();\n\t            // view is intentionally not returned to the client.\n\t            wtfLeave(s);\n\t        };\n\t        // TODO(i): refactor insert+remove into move\n\t        ViewContainerRef_.prototype.detach = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._detachScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var view = this._element.detachView(index);\n\t            return wtfLeave(s, view.ref);\n\t        };\n\t        ViewContainerRef_.prototype.clear = function () {\n\t            for (var i = this.length - 1; i >= 0; i--) {\n\t                this.remove(i);\n\t            }\n\t        };\n\t        return ViewContainerRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var ViewType;\n\t    (function (ViewType) {\n\t        // A view that contains the host element with bound component directive.\n\t        // Contains a COMPONENT view\n\t        ViewType[ViewType[\"HOST\"] = 0] = \"HOST\";\n\t        // The view of the component\n\t        // Can contain 0 to n EMBEDDED views\n\t        ViewType[ViewType[\"COMPONENT\"] = 1] = \"COMPONENT\";\n\t        // A view that is embedded into another View via a <template> element\n\t        // inside of a COMPONENT view\n\t        ViewType[ViewType[\"EMBEDDED\"] = 2] = \"EMBEDDED\";\n\t    })(ViewType || (ViewType = {}));\n\t\n\t    /**\n\t     * An AppElement is created for elements that have a ViewContainerRef,\n\t     * a nested component or a <template> element to keep data around\n\t     * that is needed for later instantiations.\n\t     */\n\t    var AppElement = (function () {\n\t        function AppElement(index, parentIndex, parentView, nativeElement) {\n\t            this.index = index;\n\t            this.parentIndex = parentIndex;\n\t            this.parentView = parentView;\n\t            this.nativeElement = nativeElement;\n\t            this.nestedViews = null;\n\t            this.componentView = null;\n\t        }\n\t        Object.defineProperty(AppElement.prototype, \"elementRef\", {\n\t            get: function () { return new ElementRef(this.nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppElement.prototype, \"vcRef\", {\n\t            get: function () { return new ViewContainerRef_(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AppElement.prototype.initComponent = function (component, componentConstructorViewQueries, view) {\n\t            this.component = component;\n\t            this.componentConstructorViewQueries = componentConstructorViewQueries;\n\t            this.componentView = view;\n\t        };\n\t        Object.defineProperty(AppElement.prototype, \"parentInjector\", {\n\t            get: function () { return this.parentView.injector(this.parentIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppElement.prototype, \"injector\", {\n\t            get: function () { return this.parentView.injector(this.index); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AppElement.prototype.mapNestedViews = function (nestedViewClass, callback) {\n\t            var result = [];\n\t            if (isPresent(this.nestedViews)) {\n\t                this.nestedViews.forEach(function (nestedView) {\n\t                    if (nestedView.clazz === nestedViewClass) {\n\t                        result.push(callback(nestedView));\n\t                    }\n\t                });\n\t            }\n\t            return result;\n\t        };\n\t        AppElement.prototype.moveView = function (view, currentIndex) {\n\t            var previousIndex = this.nestedViews.indexOf(view);\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            ListWrapper.removeAt(nestedViews, previousIndex);\n\t            ListWrapper.insert(nestedViews, currentIndex, view);\n\t            var refRenderNode;\n\t            if (currentIndex > 0) {\n\t                var prevView = nestedViews[currentIndex - 1];\n\t                refRenderNode = prevView.lastRootNode;\n\t            }\n\t            else {\n\t                refRenderNode = this.nativeElement;\n\t            }\n\t            if (isPresent(refRenderNode)) {\n\t                view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n\t            }\n\t            view.markContentChildAsMoved(this);\n\t        };\n\t        AppElement.prototype.attachView = function (view, viewIndex) {\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            ListWrapper.insert(nestedViews, viewIndex, view);\n\t            var refRenderNode;\n\t            if (viewIndex > 0) {\n\t                var prevView = nestedViews[viewIndex - 1];\n\t                refRenderNode = prevView.lastRootNode;\n\t            }\n\t            else {\n\t                refRenderNode = this.nativeElement;\n\t            }\n\t            if (isPresent(refRenderNode)) {\n\t                view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n\t            }\n\t            view.addToContentChildren(this);\n\t        };\n\t        AppElement.prototype.detachView = function (viewIndex) {\n\t            var view = ListWrapper.removeAt(this.nestedViews, viewIndex);\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            view.detach();\n\t            view.removeFromContentChildren(this);\n\t            return view;\n\t        };\n\t        return AppElement;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * An error thrown if application changes model breaking the top-down data flow.\n\t     *\n\t     * This exception is only thrown in dev mode.\n\t     *\n\t     * <!-- TODO: Add a link once the dev mode option is configurable -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   selector: 'parent',\n\t     *   template: `\n\t     *     <child [prop]=\"parentProp\"></child>\n\t     *   `,\n\t     *   directives: [forwardRef(() => Child)]\n\t     * })\n\t     * class Parent {\n\t     *   parentProp = \"init\";\n\t     * }\n\t     *\n\t     * @Directive({selector: 'child', inputs: ['prop']})\n\t     * class Child {\n\t     *   constructor(public parent: Parent) {}\n\t     *\n\t     *   set prop(v) {\n\t     *     // this updates the parent property, which is disallowed during change detection\n\t     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n\t     *     this.parent.parentProp = \"updated\";\n\t     *   }\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n\t        __extends$6(ExpressionChangedAfterItHasBeenCheckedError, _super);\n\t        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n\t            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n\t            if (oldValue === UNINITIALIZED) {\n\t                msg +=\n\t                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n\t                        \" Has it been created in a change detection hook ?\";\n\t            }\n\t            _super.call(this, msg);\n\t        }\n\t        return ExpressionChangedAfterItHasBeenCheckedError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when an exception was raised during view creation, change detection or destruction.\n\t     *\n\t     * This error wraps the original exception to attach additional contextual information that can\n\t     * be useful for debugging.\n\t     * @stable\n\t     */\n\t    var ViewWrappedError = (function (_super) {\n\t        __extends$6(ViewWrappedError, _super);\n\t        function ViewWrappedError(originalError, context) {\n\t            _super.call(this, \"Error in \" + context.source, originalError);\n\t            this.context = context;\n\t        }\n\t        return ViewWrappedError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when a destroyed view is used.\n\t     *\n\t     * This error indicates a bug in the framework.\n\t     *\n\t     * This is an internal Angular error.\n\t     * @stable\n\t     */\n\t    var ViewDestroyedError = (function (_super) {\n\t        __extends$6(ViewDestroyedError, _super);\n\t        function ViewDestroyedError(details) {\n\t            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n\t        }\n\t        return ViewDestroyedError;\n\t    }(BaseError));\n\t\n\t    var ViewUtils = (function () {\n\t        function ViewUtils(_renderer, _appId, sanitizer) {\n\t            this._renderer = _renderer;\n\t            this._appId = _appId;\n\t            this._nextCompTypeId = 0;\n\t            this.sanitizer = sanitizer;\n\t        }\n\t        /**\n\t         * Used by the generated code\n\t         */\n\t        // TODO (matsko): add typing for the animation function\n\t        ViewUtils.prototype.createRenderComponentType = function (templateUrl, slotCount, encapsulation, styles, animations) {\n\t            return new RenderComponentType(this._appId + \"-\" + this._nextCompTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n\t        };\n\t        /** @internal */\n\t        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n\t            return this._renderer.renderComponent(renderComponentType);\n\t        };\n\t        ViewUtils.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ViewUtils.ctorParameters = [\n\t            { type: RootRenderer, },\n\t            { type: undefined, decorators: [{ type: Inject, args: [APP_ID,] },] },\n\t            { type: Sanitizer, },\n\t        ];\n\t        return ViewUtils;\n\t    }());\n\t    function flattenNestedViewRenderNodes(nodes) {\n\t        return _flattenNestedViewRenderNodes(nodes, []);\n\t    }\n\t    function _flattenNestedViewRenderNodes(nodes, renderNodes) {\n\t        for (var i = 0; i < nodes.length; i++) {\n\t            var node = nodes[i];\n\t            if (node instanceof AppElement) {\n\t                var appEl = node;\n\t                renderNodes.push(appEl.nativeElement);\n\t                if (isPresent(appEl.nestedViews)) {\n\t                    for (var k = 0; k < appEl.nestedViews.length; k++) {\n\t                        _flattenNestedViewRenderNodes(appEl.nestedViews[k].rootNodesOrAppElements, renderNodes);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                renderNodes.push(node);\n\t            }\n\t        }\n\t        return renderNodes;\n\t    }\n\t    var EMPTY_ARR = [];\n\t    function ensureSlotCount(projectableNodes, expectedSlotCount) {\n\t        var res;\n\t        if (isBlank(projectableNodes)) {\n\t            res = EMPTY_ARR;\n\t        }\n\t        else if (projectableNodes.length < expectedSlotCount) {\n\t            var givenSlotCount = projectableNodes.length;\n\t            res = ListWrapper.createFixedSize(expectedSlotCount);\n\t            for (var i = 0; i < expectedSlotCount; i++) {\n\t                res[i] = (i < givenSlotCount) ? projectableNodes[i] : EMPTY_ARR;\n\t            }\n\t        }\n\t        else {\n\t            res = projectableNodes;\n\t        }\n\t        return res;\n\t    }\n\t    var MAX_INTERPOLATION_VALUES = 9;\n\t    function interpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n\t        switch (valueCount) {\n\t            case 1:\n\t                return c0 + _toStringWithNull(a1) + c1;\n\t            case 2:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n\t            case 3:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3;\n\t            case 4:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4;\n\t            case 5:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n\t            case 6:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n\t            case 7:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7;\n\t            case 8:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n\t            case 9:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n\t            default:\n\t                throw new Error(\"Does not support more than 9 expressions\");\n\t        }\n\t    }\n\t    function _toStringWithNull(v) {\n\t        return v != null ? v.toString() : '';\n\t    }\n\t    function checkBinding(throwOnChange, oldValue, newValue) {\n\t        if (throwOnChange) {\n\t            if (!devModeEqual(oldValue, newValue)) {\n\t                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n\t            }\n\t            return false;\n\t        }\n\t        else {\n\t            return !looseIdentical(oldValue, newValue);\n\t        }\n\t    }\n\t    function castByValue(input, value) {\n\t        return input;\n\t    }\n\t    var EMPTY_ARRAY = [];\n\t    var EMPTY_MAP = {};\n\t    function pureProxy1(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        return function (p0) {\n\t            if (!looseIdentical(v0, p0)) {\n\t                v0 = p0;\n\t                result = fn(p0);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy2(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        var v1 = UNINITIALIZED;\n\t        return function (p0, p1) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                result = fn(p0, p1);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy3(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        var v1 = UNINITIALIZED;\n\t        var v2 = UNINITIALIZED;\n\t        return function (p0, p1, p2) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                result = fn(p0, p1, p2);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy4(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3;\n\t        v0 = v1 = v2 = v3 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                result = fn(p0, p1, p2, p3);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy5(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4;\n\t        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                result = fn(p0, p1, p2, p3, p4);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy6(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                result = fn(p0, p1, p2, p3, p4, p5);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy7(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy8(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy9(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7, v8;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy10(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n\t                !looseIdentical(v9, p9)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                v9 = p9;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of a Component created via a {@link ComponentFactory}.\n\t     *\n\t     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n\t     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n\t     * method.\n\t     * @stable\n\t     */\n\t    var ComponentRef = (function () {\n\t        function ComponentRef() {\n\t        }\n\t        Object.defineProperty(ComponentRef.prototype, \"location\", {\n\t            /**\n\t             * Location of the Host Element of this Component Instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n\t            /**\n\t             * The injector on which the component instance exists.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"instance\", {\n\t            /**\n\t             * The instance of the Component.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef.prototype, \"hostView\", {\n\t            /**\n\t             * The {@link ViewRef} of the Host View of this Component instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef.prototype, \"changeDetectorRef\", {\n\t            /**\n\t             * The {@link ChangeDetectorRef} of the Component instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"componentType\", {\n\t            /**\n\t             * The component type.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ComponentRef;\n\t    }());\n\t    var ComponentRef_ = (function (_super) {\n\t        __extends$5(ComponentRef_, _super);\n\t        function ComponentRef_(_hostElement, _componentType) {\n\t            _super.call(this);\n\t            this._hostElement = _hostElement;\n\t            this._componentType = _componentType;\n\t        }\n\t        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n\t            get: function () { return this._hostElement.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n\t            get: function () { return this._hostElement.injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n\t            get: function () { return this._hostElement.component; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n\t            get: function () { return this._hostElement.parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n\t            get: function () { return this._hostElement.parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n\t            get: function () { return this._componentType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ComponentRef_.prototype.destroy = function () { this._hostElement.parentView.destroy(); };\n\t        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n\t        return ComponentRef_;\n\t    }(ComponentRef));\n\t    /**\n\t     * @experimental\n\t     */\n\t    var EMPTY_CONTEXT = new Object();\n\t    /**\n\t     * @stable\n\t     */\n\t    var ComponentFactory = (function () {\n\t        function ComponentFactory(selector, _viewFactory, _componentType) {\n\t            this.selector = selector;\n\t            this._viewFactory = _viewFactory;\n\t            this._componentType = _componentType;\n\t        }\n\t        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n\t            get: function () { return this._componentType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Creates a new component.\n\t         */\n\t        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n\t            var vu = injector.get(ViewUtils);\n\t            if (isBlank(projectableNodes)) {\n\t                projectableNodes = [];\n\t            }\n\t            // Note: Host views don't need a declarationAppElement!\n\t            var hostView = this._viewFactory(vu, injector, null);\n\t            var hostElement = hostView.create(EMPTY_CONTEXT, projectableNodes, rootSelectorOrNode);\n\t            return new ComponentRef_(hostElement, this._componentType);\n\t        };\n\t        return ComponentFactory;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @stable\n\t     */\n\t    var NoComponentFactoryError = (function (_super) {\n\t        __extends$7(NoComponentFactoryError, _super);\n\t        function NoComponentFactoryError(component) {\n\t            _super.call(this, \"No component factory found for \" + stringify(component));\n\t            this.component = component;\n\t        }\n\t        return NoComponentFactoryError;\n\t    }(BaseError));\n\t    var _NullComponentFactoryResolver = (function () {\n\t        function _NullComponentFactoryResolver() {\n\t        }\n\t        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            throw new NoComponentFactoryError(component);\n\t        };\n\t        return _NullComponentFactoryResolver;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var ComponentFactoryResolver = (function () {\n\t        function ComponentFactoryResolver() {\n\t        }\n\t        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n\t        return ComponentFactoryResolver;\n\t    }());\n\t    var CodegenComponentFactoryResolver = (function () {\n\t        function CodegenComponentFactoryResolver(factories, _parent) {\n\t            this._parent = _parent;\n\t            this._factories = new Map();\n\t            for (var i = 0; i < factories.length; i++) {\n\t                var factory = factories[i];\n\t                this._factories.set(factory.componentType, factory);\n\t            }\n\t        }\n\t        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            var result = this._factories.get(component);\n\t            if (!result) {\n\t                result = this._parent.resolveComponentFactory(component);\n\t            }\n\t            return result;\n\t        };\n\t        return CodegenComponentFactoryResolver;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   @Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   @Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * @stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$8(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var schedulerFn;\n\t            var errorFn = function (err) { return null; };\n\t            var completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value /** TODO #9100 */) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n\t                    setTimeout(function () { return generatorOrNext(value); });\n\t                } : function (value /** TODO #9100 */) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var NgZoneImpl = (function () {\n\t        function NgZoneImpl(_a) {\n\t            var _this = this;\n\t            var trace = _a.trace, onEnter = _a.onEnter, onLeave = _a.onLeave, setMicrotask = _a.setMicrotask, setMacrotask = _a.setMacrotask, onError = _a.onError;\n\t            this.onEnter = onEnter;\n\t            this.onLeave = onLeave;\n\t            this.setMicrotask = setMicrotask;\n\t            this.setMacrotask = setMacrotask;\n\t            this.onError = onError;\n\t            if (typeof Zone == 'undefined') {\n\t                throw new Error('Angular requires Zone.js prolyfill.');\n\t            }\n\t            Zone.assertZonePatched();\n\t            this.outer = this.inner = Zone.current;\n\t            if (Zone['wtfZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n\t            }\n\t            if (trace && Zone['longStackTraceZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n\t            }\n\t            this.inner = this.inner.fork({\n\t                name: 'angular',\n\t                properties: { 'isAngularZone': true },\n\t                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onHasTask: function (delegate, current, target, hasTaskState) {\n\t                    delegate.hasTask(target, hasTaskState);\n\t                    if (current === target) {\n\t                        // We are only interested in hasTask events which originate from our zone\n\t                        // (A child hasTask event is not interesting to us)\n\t                        if (hasTaskState.change == 'microTask') {\n\t                            _this.setMicrotask(hasTaskState.microTask);\n\t                        }\n\t                        else if (hasTaskState.change == 'macroTask') {\n\t                            _this.setMacrotask(hasTaskState.macroTask);\n\t                        }\n\t                    }\n\t                },\n\t                onHandleError: function (delegate, current, target, error) {\n\t                    delegate.handleError(target, error);\n\t                    _this.onError(error);\n\t                    return false;\n\t                }\n\t            });\n\t        }\n\t        NgZoneImpl.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n\t        NgZoneImpl.prototype.runInner = function (fn) { return this.inner.run(fn); };\n\t        ;\n\t        NgZoneImpl.prototype.runInnerGuarded = function (fn) { return this.inner.runGuarded(fn); };\n\t        ;\n\t        NgZoneImpl.prototype.runOuter = function (fn) { return this.outer.run(fn); };\n\t        ;\n\t        return NgZoneImpl;\n\t    }());\n\t\n\t    /**\n\t     * An injectable service for executing work inside or outside of the Angular zone.\n\t     *\n\t     * The most common use of this service is to optimize performance when starting a work consisting of\n\t     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n\t     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n\t     * can reenter the Angular zone via {@link #run}.\n\t     *\n\t     * <!-- TODO: add/fix links to:\n\t     *   - docs explaining zones and the use of zones in Angular and change-detection\n\t     *   - link to runOutsideAngular/run (throughout this file!)\n\t     *   -->\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/lY9m8HLy7z06vDoUaSN2?p=preview))\n\t     * ```\n\t     * import {Component, View, NgZone} from '@angular/core';\n\t     * import {NgIf} from '@angular/common';\n\t     *\n\t     * @Component({\n\t     *   selector: 'ng-zone-demo'.\n\t     *   template: `\n\t     *     <h2>Demo: NgZone</h2>\n\t     *\n\t     *     <p>Progress: {{progress}}%</p>\n\t     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n\t     *\n\t     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n\t     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n\t     *   `,\n\t     *   directives: [NgIf]\n\t     * })\n\t     * export class NgZoneDemo {\n\t     *   progress: number = 0;\n\t     *   label: string;\n\t     *\n\t     *   constructor(private _ngZone: NgZone) {}\n\t     *\n\t     *   // Loop inside the Angular zone\n\t     *   // so the UI DOES refresh after each setTimeout cycle\n\t     *   processWithinAngularZone() {\n\t     *     this.label = 'inside';\n\t     *     this.progress = 0;\n\t     *     this._increaseProgress(() => console.log('Inside Done!'));\n\t     *   }\n\t     *\n\t     *   // Loop outside of the Angular zone\n\t     *   // so the UI DOES NOT refresh after each setTimeout cycle\n\t     *   processOutsideOfAngularZone() {\n\t     *     this.label = 'outside';\n\t     *     this.progress = 0;\n\t     *     this._ngZone.runOutsideAngular(() => {\n\t     *       this._increaseProgress(() => {\n\t     *       // reenter the Angular zone and display done\n\t     *       this._ngZone.run(() => {console.log('Outside Done!') });\n\t     *     }}));\n\t     *   }\n\t     *\n\t     *\n\t     *   _increaseProgress(doneCallback: () => void) {\n\t     *     this.progress += 1;\n\t     *     console.log(`Current progress: ${this.progress}%`);\n\t     *\n\t     *     if (this.progress < 100) {\n\t     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n\t     *     } else {\n\t     *       doneCallback();\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     * @experimental\n\t     */\n\t    var NgZone = (function () {\n\t        function NgZone(_a) {\n\t            var _this = this;\n\t            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n\t            this._hasPendingMicrotasks = false;\n\t            this._hasPendingMacrotasks = false;\n\t            /** @internal */\n\t            this._isStable = true;\n\t            /** @internal */\n\t            this._nesting = 0;\n\t            /** @internal */\n\t            this._onUnstable = new EventEmitter(false);\n\t            /** @internal */\n\t            this._onMicrotaskEmpty = new EventEmitter(false);\n\t            /** @internal */\n\t            this._onStable = new EventEmitter(false);\n\t            /** @internal */\n\t            this._onErrorEvents = new EventEmitter(false);\n\t            this._zoneImpl = new NgZoneImpl({\n\t                trace: enableLongStackTrace,\n\t                onEnter: function () {\n\t                    // console.log('ZONE.enter', this._nesting, this._isStable);\n\t                    _this._nesting++;\n\t                    if (_this._isStable) {\n\t                        _this._isStable = false;\n\t                        _this._onUnstable.emit(null);\n\t                    }\n\t                },\n\t                onLeave: function () {\n\t                    _this._nesting--;\n\t                    // console.log('ZONE.leave', this._nesting, this._isStable);\n\t                    _this._checkStable();\n\t                },\n\t                setMicrotask: function (hasMicrotasks) {\n\t                    _this._hasPendingMicrotasks = hasMicrotasks;\n\t                    _this._checkStable();\n\t                },\n\t                setMacrotask: function (hasMacrotasks) { _this._hasPendingMacrotasks = hasMacrotasks; },\n\t                onError: function (error) { return _this._onErrorEvents.emit(error); }\n\t            });\n\t        }\n\t        NgZone.isInAngularZone = function () { return NgZoneImpl.isInAngularZone(); };\n\t        NgZone.assertInAngularZone = function () {\n\t            if (!NgZoneImpl.isInAngularZone()) {\n\t                throw new Error('Expected to be in Angular Zone, but it is not!');\n\t            }\n\t        };\n\t        NgZone.assertNotInAngularZone = function () {\n\t            if (NgZoneImpl.isInAngularZone()) {\n\t                throw new Error('Expected to not be in Angular Zone, but it is!');\n\t            }\n\t        };\n\t        NgZone.prototype._checkStable = function () {\n\t            var _this = this;\n\t            if (this._nesting == 0) {\n\t                if (!this._hasPendingMicrotasks && !this._isStable) {\n\t                    try {\n\t                        // console.log('ZONE.microtaskEmpty');\n\t                        this._nesting++;\n\t                        this._onMicrotaskEmpty.emit(null);\n\t                    }\n\t                    finally {\n\t                        this._nesting--;\n\t                        if (!this._hasPendingMicrotasks) {\n\t                            try {\n\t                                // console.log('ZONE.stable', this._nesting, this._isStable);\n\t                                this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n\t                            }\n\t                            finally {\n\t                                this._isStable = true;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        ;\n\t        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n\t            /**\n\t             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n\t             */\n\t            get: function () { return this._onUnstable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n\t            /**\n\t             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n\t             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n\t             * For this reason this event can fire multiple times per VM Turn.\n\t             */\n\t            get: function () { return this._onMicrotaskEmpty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onStable\", {\n\t            /**\n\t             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n\t             * implies we are about to relinquish VM turn.\n\t             * This event gets called just once.\n\t             */\n\t            get: function () { return this._onStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onError\", {\n\t            /**\n\t             * Notify that an error has been delivered.\n\t             */\n\t            get: function () { return this._onErrorEvents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"isStable\", {\n\t            /**\n\t             * Whether there are no outstanding microtasks or microtasks.\n\t             */\n\t            get: function () { return this._isStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n\t            /**\n\t             * Whether there are any outstanding microtasks.\n\t             */\n\t            get: function () { return this._hasPendingMicrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n\t            /**\n\t             * Whether there are any outstanding microtasks.\n\t             */\n\t            get: function () { return this._hasPendingMacrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n\t         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * within the Angular zone.\n\t         *\n\t         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n\t         */\n\t        NgZone.prototype.run = function (fn) { return this._zoneImpl.runInner(fn); };\n\t        /**\n\t         * Same as #run, except that synchronous errors are caught and forwarded\n\t         * via `onError` and not rethrown.\n\t         */\n\t        NgZone.prototype.runGuarded = function (fn) { return this._zoneImpl.runInnerGuarded(fn); };\n\t        /**\n\t         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n\t         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * outside of the Angular zone.\n\t         *\n\t         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n\t         */\n\t        NgZone.prototype.runOutsideAngular = function (fn) { return this._zoneImpl.runOuter(fn); };\n\t        return NgZone;\n\t    }());\n\t\n\t    /**\n\t     * The Testability service provides testing hooks that can be accessed from\n\t     * the browser and by services such as Protractor. Each bootstrapped Angular\n\t     * application on the page will have an instance of Testability.\n\t     * @experimental\n\t     */\n\t    var Testability = (function () {\n\t        function Testability(_ngZone) {\n\t            this._ngZone = _ngZone;\n\t            /** @internal */\n\t            this._pendingCount = 0;\n\t            /** @internal */\n\t            this._isZoneStable = true;\n\t            /**\n\t             * Whether any work was done since the last 'whenStable' callback. This is\n\t             * useful to detect if this could have potentially destabilized another\n\t             * component while it is stabilizing.\n\t             * @internal\n\t             */\n\t            this._didWork = false;\n\t            /** @internal */\n\t            this._callbacks = [];\n\t            this._watchAngularEvents();\n\t        }\n\t        /** @internal */\n\t        Testability.prototype._watchAngularEvents = function () {\n\t            var _this = this;\n\t            this._ngZone.onUnstable.subscribe({\n\t                next: function () {\n\t                    _this._didWork = true;\n\t                    _this._isZoneStable = false;\n\t                }\n\t            });\n\t            this._ngZone.runOutsideAngular(function () {\n\t                _this._ngZone.onStable.subscribe({\n\t                    next: function () {\n\t                        NgZone.assertNotInAngularZone();\n\t                        scheduleMicroTask(function () {\n\t                            _this._isZoneStable = true;\n\t                            _this._runCallbacksIfReady();\n\t                        });\n\t                    }\n\t                });\n\t            });\n\t        };\n\t        Testability.prototype.increasePendingRequestCount = function () {\n\t            this._pendingCount += 1;\n\t            this._didWork = true;\n\t            return this._pendingCount;\n\t        };\n\t        Testability.prototype.decreasePendingRequestCount = function () {\n\t            this._pendingCount -= 1;\n\t            if (this._pendingCount < 0) {\n\t                throw new Error('pending async requests below zero');\n\t            }\n\t            this._runCallbacksIfReady();\n\t            return this._pendingCount;\n\t        };\n\t        Testability.prototype.isStable = function () {\n\t            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n\t        };\n\t        /** @internal */\n\t        Testability.prototype._runCallbacksIfReady = function () {\n\t            var _this = this;\n\t            if (this.isStable()) {\n\t                // Schedules the call backs in a new frame so that it is always async.\n\t                scheduleMicroTask(function () {\n\t                    while (_this._callbacks.length !== 0) {\n\t                        (_this._callbacks.pop())(_this._didWork);\n\t                    }\n\t                    _this._didWork = false;\n\t                });\n\t            }\n\t            else {\n\t                // Not Ready\n\t                this._didWork = true;\n\t            }\n\t        };\n\t        Testability.prototype.whenStable = function (callback) {\n\t            this._callbacks.push(callback);\n\t            this._runCallbacksIfReady();\n\t        };\n\t        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n\t        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        Testability.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Testability.ctorParameters = [\n\t            { type: NgZone, },\n\t        ];\n\t        return Testability;\n\t    }());\n\t    /**\n\t     * A global registry of {@link Testability} instances for specific elements.\n\t     * @experimental\n\t     */\n\t    var TestabilityRegistry = (function () {\n\t        function TestabilityRegistry() {\n\t            /** @internal */\n\t            this._applications = new Map$1();\n\t            _testabilityGetter.addToWindow(this);\n\t        }\n\t        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n\t            this._applications.set(token, testability);\n\t        };\n\t        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n\t        TestabilityRegistry.prototype.getAllTestabilities = function () { return MapWrapper.values(this._applications); };\n\t        TestabilityRegistry.prototype.getAllRootElements = function () { return MapWrapper.keys(this._applications); };\n\t        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n\t            if (findInAncestors === void 0) { findInAncestors = true; }\n\t            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n\t        };\n\t        TestabilityRegistry.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        TestabilityRegistry.ctorParameters = [];\n\t        return TestabilityRegistry;\n\t    }());\n\t    var _NoopGetTestability = (function () {\n\t        function _NoopGetTestability() {\n\t        }\n\t        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n\t        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n\t            return null;\n\t        };\n\t        return _NoopGetTestability;\n\t    }());\n\t    /**\n\t     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n\t     * @experimental\n\t     */\n\t    function setTestabilityGetter(getter) {\n\t        _testabilityGetter = getter;\n\t    }\n\t    var _testabilityGetter = new _NoopGetTestability();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _devMode = true;\n\t    var _runModeLocked = false;\n\t    var _platform;\n\t    /**\n\t     * Disable Angular's development mode, which turns off assertions and other\n\t     * checks within the framework.\n\t     *\n\t     * One important assertion this disables verifies that a change detection pass\n\t     * does not result in additional changes to any bindings (also known as\n\t     * unidirectional data flow).\n\t     *\n\t     * @stable\n\t     */\n\t    function enableProdMode() {\n\t        if (_runModeLocked) {\n\t            throw new Error('Cannot enable prod mode after platform setup.');\n\t        }\n\t        _devMode = false;\n\t    }\n\t    /**\n\t     * Returns whether Angular is in development mode. After called once,\n\t     * the value is locked and won't change any more.\n\t     *\n\t     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function isDevMode() {\n\t        _runModeLocked = true;\n\t        return _devMode;\n\t    }\n\t    /**\n\t     * Creates a platform.\n\t     * Platforms have to be eagerly created via this function.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function createPlatform(injector) {\n\t        if (isPresent(_platform) && !_platform.destroyed) {\n\t            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n\t        }\n\t        _platform = injector.get(PlatformRef);\n\t        var inits = injector.get(PLATFORM_INITIALIZER, null);\n\t        if (isPresent(inits))\n\t            inits.forEach(function (init) { return init(); });\n\t        return _platform;\n\t    }\n\t    /**\n\t     * Creates a factory for a platform\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function createPlatformFactory(parentPlaformFactory, name, providers) {\n\t        if (providers === void 0) { providers = []; }\n\t        var marker = new OpaqueToken(\"Platform: \" + name);\n\t        return function (extraProviders) {\n\t            if (extraProviders === void 0) { extraProviders = []; }\n\t            if (!getPlatform()) {\n\t                if (parentPlaformFactory) {\n\t                    parentPlaformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n\t                }\n\t                else {\n\t                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n\t                }\n\t            }\n\t            return assertPlatform(marker);\n\t        };\n\t    }\n\t    /**\n\t     * Checks that there currently is a platform\n\t     * which contains the given token as a provider.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function assertPlatform(requiredToken) {\n\t        var platform = getPlatform();\n\t        if (isBlank(platform)) {\n\t            throw new Error('No platform exists!');\n\t        }\n\t        if (isPresent(platform) && isBlank(platform.injector.get(requiredToken, null))) {\n\t            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n\t        }\n\t        return platform;\n\t    }\n\t    /**\n\t     * Destroy the existing platform.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function destroyPlatform() {\n\t        if (isPresent(_platform) && !_platform.destroyed) {\n\t            _platform.destroy();\n\t        }\n\t    }\n\t    /**\n\t     * Returns the current platform.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function getPlatform() {\n\t        return isPresent(_platform) && !_platform.destroyed ? _platform : null;\n\t    }\n\t    /**\n\t     * The Angular platform is the entry point for Angular on a web page. Each page\n\t     * has exactly one platform, and services (such as reflection) which are common\n\t     * to every Angular application running on the page are bound in its scope.\n\t     *\n\t     * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n\t     * explicitly by calling {@link createPlatform}().\n\t     *\n\t     * @stable\n\t     */\n\t    var PlatformRef = (function () {\n\t        function PlatformRef() {\n\t        }\n\t        /**\n\t         * Creates an instance of an `@NgModule` for the given platform\n\t         * for offline compilation.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * my_module.ts:\n\t         *\n\t         * @NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * main.ts:\n\t         * import {MyModuleNgFactory} from './my_module.ngfactory';\n\t         * import {platformBrowser} from '@angular/platform-browser';\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n\t         * ```\n\t         *\n\t         * @experimental APIs related to application bootstrap are currently under review.\n\t         */\n\t        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) {\n\t            throw unimplemented();\n\t        };\n\t        /**\n\t         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * @NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n\t         * ```\n\t         * @stable\n\t         */\n\t        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            throw unimplemented();\n\t        };\n\t        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n\t            /**\n\t             * Retrieve the platform {@link Injector}, which is the parent injector for\n\t             * every Angular application on the page and provides singleton providers.\n\t             */\n\t            get: function () { throw unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n\t            get: function () { throw unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return PlatformRef;\n\t    }());\n\t    function _callAndReportToErrorHandler(errorHandler, callback) {\n\t        try {\n\t            var result = callback();\n\t            if (isPromise(result)) {\n\t                return result.catch(function (e) {\n\t                    errorHandler.handleError(e);\n\t                    // rethrow as the exception handler might not do it\n\t                    throw e;\n\t                });\n\t            }\n\t            else {\n\t                return result;\n\t            }\n\t        }\n\t        catch (e) {\n\t            errorHandler.handleError(e);\n\t            // rethrow as the exception handler might not do it\n\t            throw e;\n\t        }\n\t    }\n\t    var PlatformRef_ = (function (_super) {\n\t        __extends$3(PlatformRef_, _super);\n\t        function PlatformRef_(_injector) {\n\t            _super.call(this);\n\t            this._injector = _injector;\n\t            this._modules = [];\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n\t            get: function () { return this._injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n\t            get: function () { return this._destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        PlatformRef_.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error('The platform has already been destroyed!');\n\t            }\n\t            ListWrapper.clone(this._modules).forEach(function (app) { return app.destroy(); });\n\t            this._destroyListeners.forEach(function (dispose) { return dispose(); });\n\t            this._destroyed = true;\n\t        };\n\t        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n\t            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n\t        };\n\t        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n\t            var _this = this;\n\t            // Note: We need to create the NgZone _before_ we instantiate the module,\n\t            // as instantiating the module creates some providers eagerly.\n\t            // So we create a mini parent injector that just contains the new NgZone and\n\t            // pass that as parent to the NgModuleFactory.\n\t            if (!ngZone)\n\t                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n\t            // Attention: Don't use ApplicationRef.run here,\n\t            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n\t            return ngZone.run(function () {\n\t                var ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n\t                var moduleRef = moduleFactory.create(ngZoneInjector);\n\t                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n\t                if (!exceptionHandler) {\n\t                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n\t                }\n\t                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n\t                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n\t                return _callAndReportToErrorHandler(exceptionHandler, function () {\n\t                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n\t                    return initStatus.donePromise.then(function () {\n\t                        _this._moduleDoBootstrap(moduleRef);\n\t                        return moduleRef;\n\t                    });\n\t                });\n\t            });\n\t        };\n\t        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n\t        };\n\t        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n\t            var _this = this;\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            var compilerFactory = this.injector.get(CompilerFactory);\n\t            var compiler = compilerFactory.createCompiler(compilerOptions instanceof Array ? compilerOptions : [compilerOptions]);\n\t            // ugly internal api hack: generate host component factories for all declared components and\n\t            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n\t            // factories.\n\t            if (componentFactoryCallback) {\n\t                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n\t                    .then(function (_a) {\n\t                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n\t                    componentFactoryCallback(componentFactories);\n\t                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n\t                });\n\t            }\n\t            return compiler.compileModuleAsync(moduleType)\n\t                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n\t        };\n\t        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n\t            var appRef = moduleRef.injector.get(ApplicationRef);\n\t            if (moduleRef.bootstrapFactories.length > 0) {\n\t                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n\t            }\n\t            else if (moduleRef.instance.ngDoBootstrap) {\n\t                moduleRef.instance.ngDoBootstrap(appRef);\n\t            }\n\t            else {\n\t                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n\t                    \"Please define one of these.\");\n\t            }\n\t        };\n\t        PlatformRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PlatformRef_.ctorParameters = [\n\t            { type: Injector, },\n\t        ];\n\t        return PlatformRef_;\n\t    }(PlatformRef));\n\t    /**\n\t     * A reference to an Angular application running on a page.\n\t     *\n\t     * For more about Angular applications, see the documentation for {@link bootstrap}.\n\t     *\n\t     * @stable\n\t     */\n\t    var ApplicationRef = (function () {\n\t        function ApplicationRef() {\n\t        }\n\t        Object.defineProperty(ApplicationRef.prototype, \"componentTypes\", {\n\t            /**\n\t             * Get a list of component types registered to this application.\n\t             * This list is populated even before the component is created.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ApplicationRef.prototype, \"components\", {\n\t            /**\n\t             * Get a list of components registered to this application.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return ApplicationRef;\n\t    }());\n\t    var ApplicationRef_ = (function (_super) {\n\t        __extends$3(ApplicationRef_, _super);\n\t        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._zone = _zone;\n\t            this._console = _console;\n\t            this._injector = _injector;\n\t            this._exceptionHandler = _exceptionHandler;\n\t            this._componentFactoryResolver = _componentFactoryResolver;\n\t            this._initStatus = _initStatus;\n\t            this._testabilityRegistry = _testabilityRegistry;\n\t            this._testability = _testability;\n\t            this._bootstrapListeners = [];\n\t            this._rootComponents = [];\n\t            this._rootComponentTypes = [];\n\t            this._changeDetectorRefs = [];\n\t            this._runningTick = false;\n\t            this._enforceNoNewChanges = false;\n\t            this._enforceNoNewChanges = isDevMode();\n\t            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n\t        }\n\t        ApplicationRef_.prototype.registerChangeDetector = function (changeDetector) {\n\t            this._changeDetectorRefs.push(changeDetector);\n\t        };\n\t        ApplicationRef_.prototype.unregisterChangeDetector = function (changeDetector) {\n\t            ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n\t        };\n\t        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n\t            var _this = this;\n\t            if (!this._initStatus.done) {\n\t                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n\t            }\n\t            var componentFactory;\n\t            if (componentOrFactory instanceof ComponentFactory) {\n\t                componentFactory = componentOrFactory;\n\t            }\n\t            else {\n\t                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n\t            }\n\t            this._rootComponentTypes.push(componentFactory.componentType);\n\t            var compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n\t            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n\t            var testability = compRef.injector.get(Testability, null);\n\t            if (isPresent(testability)) {\n\t                compRef.injector.get(TestabilityRegistry)\n\t                    .registerApplication(compRef.location.nativeElement, testability);\n\t            }\n\t            this._loadComponent(compRef);\n\t            if (isDevMode()) {\n\t                this._console.log(\"Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.\");\n\t            }\n\t            return compRef;\n\t        };\n\t        /** @internal */\n\t        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n\t            this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n\t            this.tick();\n\t            this._rootComponents.push(componentRef);\n\t            // Get the listeners lazily to prevent DI cycles.\n\t            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n\t                .concat(this._bootstrapListeners);\n\t            listeners.forEach(function (listener) { return listener(componentRef); });\n\t        };\n\t        /** @internal */\n\t        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n\t            if (!ListWrapper.contains(this._rootComponents, componentRef)) {\n\t                return;\n\t            }\n\t            this.unregisterChangeDetector(componentRef.changeDetectorRef);\n\t            ListWrapper.remove(this._rootComponents, componentRef);\n\t        };\n\t        ApplicationRef_.prototype.tick = function () {\n\t            if (this._runningTick) {\n\t                throw new Error('ApplicationRef.tick is called recursively');\n\t            }\n\t            var s = ApplicationRef_._tickScope();\n\t            try {\n\t                this._runningTick = true;\n\t                this._changeDetectorRefs.forEach(function (detector) { return detector.detectChanges(); });\n\t                if (this._enforceNoNewChanges) {\n\t                    this._changeDetectorRefs.forEach(function (detector) { return detector.checkNoChanges(); });\n\t                }\n\t            }\n\t            finally {\n\t                this._runningTick = false;\n\t                wtfLeave(s);\n\t            }\n\t        };\n\t        ApplicationRef_.prototype.ngOnDestroy = function () {\n\t            // TODO(alxhub): Dispose of the NgZone.\n\t            ListWrapper.clone(this._rootComponents).forEach(function (ref) { return ref.destroy(); });\n\t        };\n\t        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n\t            get: function () { return this._rootComponentTypes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n\t            get: function () { return this._rootComponents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n\t        ApplicationRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationRef_.ctorParameters = [\n\t            { type: NgZone, },\n\t            { type: Console, },\n\t            { type: Injector, },\n\t            { type: ErrorHandler, },\n\t            { type: ComponentFactoryResolver, },\n\t            { type: ApplicationInitStatus, },\n\t            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n\t            { type: Testability, decorators: [{ type: Optional },] },\n\t        ];\n\t        return ApplicationRef_;\n\t    }(ApplicationRef));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n\t     *\n\t     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n\t     * NgModule Instance.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgModuleRef = (function () {\n\t        function NgModuleRef() {\n\t        }\n\t        Object.defineProperty(NgModuleRef.prototype, \"injector\", {\n\t            /**\n\t             * The injector that contains all of the providers of the NgModule.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleRef.prototype, \"componentFactoryResolver\", {\n\t            /**\n\t             * The ComponentFactoryResolver to get hold of the ComponentFactories\n\t             * declared in the `entryComponents` property of the module.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleRef.prototype, \"instance\", {\n\t            /**\n\t             * The NgModule instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgModuleRef;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var NgModuleFactory = (function () {\n\t        function NgModuleFactory(_injectorClass, _moduleType) {\n\t            this._injectorClass = _injectorClass;\n\t            this._moduleType = _moduleType;\n\t        }\n\t        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n\t            get: function () { return this._moduleType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModuleFactory.prototype.create = function (parentInjector) {\n\t            if (!parentInjector) {\n\t                parentInjector = Injector.NULL;\n\t            }\n\t            var instance = new this._injectorClass(parentInjector);\n\t            instance.create();\n\t            return instance;\n\t        };\n\t        return NgModuleFactory;\n\t    }());\n\t    var _UNDEFINED = new Object();\n\t    var NgModuleInjector = (function (_super) {\n\t        __extends$9(NgModuleInjector, _super);\n\t        function NgModuleInjector(parent, factories, bootstrapFactories) {\n\t            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n\t            this.parent = parent;\n\t            this.bootstrapFactories = bootstrapFactories;\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n\t        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            if (token === Injector || token === ComponentFactoryResolver) {\n\t                return this;\n\t            }\n\t            var result = this.getInternal(token, _UNDEFINED);\n\t            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n\t        };\n\t        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModuleInjector.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n\t            }\n\t            this._destroyed = true;\n\t            this.destroyInternal();\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t        };\n\t        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        return NgModuleInjector;\n\t    }(CodegenComponentFactoryResolver));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Used to load ng module factories.\n\t     * @stable\n\t     */\n\t    var NgModuleFactoryLoader = (function () {\n\t        function NgModuleFactoryLoader() {\n\t        }\n\t        return NgModuleFactoryLoader;\n\t    }());\n\t    var moduleFactories = new Map();\n\t    /**\n\t     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n\t     * @experimental\n\t     */\n\t    function registerModuleFactory(id, factory) {\n\t        var existing = moduleFactories.get(id);\n\t        if (existing) {\n\t            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n\t        }\n\t        moduleFactories.set(id, factory);\n\t    }\n\t    /**\n\t     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n\t     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n\t     * cannot be found.\n\t     * @experimental\n\t     */\n\t    function getModuleFactory(id) {\n\t        var factory = moduleFactories.get(id);\n\t        if (!factory)\n\t            throw new Error(\"No module with ID \" + id + \" loaded\");\n\t        return factory;\n\t    }\n\t\n\t    /**\n\t     * An unmodifiable list of items that Angular keeps up to date when the state\n\t     * of the application changes.\n\t     *\n\t     * The type of object that {@link Query} and {@link ViewQueryMetadata} provide.\n\t     *\n\t     * Implements an iterable interface, therefore it can be used in both ES6\n\t     * javascript `for (var i of items)` loops as well as in Angular templates with\n\t     * `*ngFor=\"let i of myList\"`.\n\t     *\n\t     * Changes can be observed by subscribing to the changes `Observable`.\n\t     *\n\t     * NOTE: In the future this class will implement an `Observable` interface.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n\t     * ```typescript\n\t     * @Component({...})\n\t     * class Container {\n\t     *   @ViewChildren(Item) items:QueryList<Item>;\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var QueryList = (function () {\n\t        function QueryList() {\n\t            this._dirty = true;\n\t            this._results = [];\n\t            this._emitter = new EventEmitter();\n\t        }\n\t        Object.defineProperty(QueryList.prototype, \"changes\", {\n\t            get: function () { return this._emitter; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"length\", {\n\t            get: function () { return this._results.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"first\", {\n\t            get: function () { return this._results[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"last\", {\n\t            get: function () { return this._results[this.length - 1]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * See\n\t         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n\t         */\n\t        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n\t        /**\n\t         * See\n\t         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n\t         */\n\t        QueryList.prototype.filter = function (fn) {\n\t            return this._results.filter(fn);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n\t         */\n\t        QueryList.prototype.reduce = function (fn, init) {\n\t            return this._results.reduce(fn, init);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n\t         */\n\t        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n\t        /**\n\t         * See\n\t         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n\t         */\n\t        QueryList.prototype.some = function (fn) {\n\t            return this._results.some(fn);\n\t        };\n\t        QueryList.prototype.toArray = function () { return this._results.slice(); };\n\t        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n\t        QueryList.prototype.toString = function () { return this._results.toString(); };\n\t        QueryList.prototype.reset = function (res) {\n\t            this._results = ListWrapper.flatten(res);\n\t            this._dirty = false;\n\t        };\n\t        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n\t        /** internal */\n\t        QueryList.prototype.setDirty = function () { this._dirty = true; };\n\t        Object.defineProperty(QueryList.prototype, \"dirty\", {\n\t            /** internal */\n\t            get: function () { return this._dirty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return QueryList;\n\t    }());\n\t\n\t    var _SEPARATOR = '#';\n\t    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n\t    /**\n\t     * Configuration for SystemJsNgModuleLoader.\n\t     * token.\n\t     *\n\t     * @experimental\n\t     */\n\t    var SystemJsNgModuleLoaderConfig = (function () {\n\t        function SystemJsNgModuleLoaderConfig() {\n\t        }\n\t        return SystemJsNgModuleLoaderConfig;\n\t    }());\n\t    var DEFAULT_CONFIG = {\n\t        factoryPathPrefix: '',\n\t        factoryPathSuffix: '.ngfactory',\n\t    };\n\t    /**\n\t     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n\t     * @experimental\n\t     */\n\t    var SystemJsNgModuleLoader = (function () {\n\t        function SystemJsNgModuleLoader(_compiler, config) {\n\t            this._compiler = _compiler;\n\t            this._config = config || DEFAULT_CONFIG;\n\t        }\n\t        SystemJsNgModuleLoader.prototype.load = function (path) {\n\t            var offlineMode = this._compiler instanceof Compiler;\n\t            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n\t        };\n\t        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n\t            var _this = this;\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            if (exportName === undefined)\n\t                exportName = 'default';\n\t            return System.import(module)\n\t                .then(function (module) { return module[exportName]; })\n\t                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n\t                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n\t        };\n\t        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n\t            if (exportName === undefined) {\n\t                exportName = 'default';\n\t                factoryClassSuffix = '';\n\t            }\n\t            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n\t                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n\t                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n\t        };\n\t        SystemJsNgModuleLoader.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        SystemJsNgModuleLoader.ctorParameters = [\n\t            { type: Compiler, },\n\t            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n\t        ];\n\t        return SystemJsNgModuleLoader;\n\t    }());\n\t    function checkNotEmpty(value, modulePath, exportName) {\n\t        if (!value) {\n\t            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n\t        }\n\t        return value;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n\t     *\n\t     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n\t     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n\t     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n\t     * `TemplateRef` from a Component or a Directive via {@link Query}.\n\t     *\n\t     * To instantiate Embedded Views based on a Template, use\n\t     * {@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n\t     * View Container.\n\t     * @stable\n\t     */\n\t    var TemplateRef = (function () {\n\t        function TemplateRef() {\n\t        }\n\t        Object.defineProperty(TemplateRef.prototype, \"elementRef\", {\n\t            /**\n\t             * The location in the View where the Embedded View logically belongs to.\n\t             *\n\t             * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n\t             * inherit from the contexts of this location.\n\t             *\n\t             * Typically new Embedded Views are attached to the View Container of this location, but in\n\t             * advanced use-cases, the View can be attached to a different container while keeping the\n\t             * data-binding and injection context from the original location.\n\t             *\n\t             */\n\t            // TODO(i): rename to anchor or location\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return TemplateRef;\n\t    }());\n\t    var TemplateRef_ = (function (_super) {\n\t        __extends$10(TemplateRef_, _super);\n\t        function TemplateRef_(_appElement, _viewFactory) {\n\t            _super.call(this);\n\t            this._appElement = _appElement;\n\t            this._viewFactory = _viewFactory;\n\t        }\n\t        TemplateRef_.prototype.createEmbeddedView = function (context) {\n\t            var view = this._viewFactory(this._appElement.parentView.viewUtils, this._appElement.parentInjector, this._appElement);\n\t            view.create(context || {}, null, null);\n\t            return view.ref;\n\t        };\n\t        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n\t            get: function () { return this._appElement.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return TemplateRef_;\n\t    }(TemplateRef));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var _queuedAnimations = [];\n\t    /** @internal */\n\t    function queueAnimation(player) {\n\t        _queuedAnimations.push(player);\n\t    }\n\t    /** @internal */\n\t    function triggerQueuedAnimations() {\n\t        for (var i = 0; i < _queuedAnimations.length; i++) {\n\t            var player = _queuedAnimations[i];\n\t            player.play();\n\t        }\n\t        _queuedAnimations = [];\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @stable\n\t     */\n\t    var ViewRef = (function () {\n\t        function ViewRef() {\n\t        }\n\t        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ViewRef;\n\t    }());\n\t    /**\n\t     * Represents an Angular View.\n\t     *\n\t     * <!-- TODO: move the next two paragraphs to the dev guide -->\n\t     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n\t     * Elements which are created and destroyed together.\n\t     *\n\t     * Properties of elements in a View can change, but the structure (number and order) of elements in\n\t     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n\t     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n\t     * <!-- /TODO -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * Given this template...\n\t     *\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * We have two {@link TemplateRef}s:\n\t     *\n\t     * Outer {@link TemplateRef}:\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * Inner {@link TemplateRef}:\n\t     * ```\n\t     *   <li>{{item}}</li>\n\t     * ```\n\t     *\n\t     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n\t     *\n\t     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n\t     *\n\t     * ```\n\t     * <!-- ViewRef: outer-0 -->\n\t     * Count: 2\n\t     * <ul>\n\t     *   <template view-container-ref></template>\n\t     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n\t     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n\t     * </ul>\n\t     * <!-- /ViewRef: outer-0 -->\n\t     * ```\n\t     * @experimental\n\t     */\n\t    var EmbeddedViewRef = (function (_super) {\n\t        __extends$11(EmbeddedViewRef, _super);\n\t        function EmbeddedViewRef() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        Object.defineProperty(EmbeddedViewRef.prototype, \"context\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(EmbeddedViewRef.prototype, \"rootNodes\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return EmbeddedViewRef;\n\t    }(ViewRef));\n\t    var ViewRef_ = (function () {\n\t        function ViewRef_(_view) {\n\t            this._view = _view;\n\t            this._view = _view;\n\t            this._originalMode = this._view.cdMode;\n\t        }\n\t        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n\t            get: function () { return this._view; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n\t            get: function () { return this._view.flatRootNodes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"context\", {\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n\t            get: function () { return this._view.destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n\t        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n\t        ViewRef_.prototype.detectChanges = function () {\n\t            this._view.detectChanges(false);\n\t            triggerQueuedAnimations();\n\t        };\n\t        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n\t        ViewRef_.prototype.reattach = function () {\n\t            this._view.cdMode = this._originalMode;\n\t            this.markForCheck();\n\t        };\n\t        ViewRef_.prototype.onDestroy = function (callback) { this._view.disposables.push(callback); };\n\t        ViewRef_.prototype.destroy = function () { this._view.destroy(); };\n\t        return ViewRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var EventListener = (function () {\n\t        function EventListener(name, callback) {\n\t            this.name = name;\n\t            this.callback = callback;\n\t        }\n\t        ;\n\t        return EventListener;\n\t    }());\n\t    /**\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugNode = (function () {\n\t        function DebugNode(nativeNode, parent, _debugInfo) {\n\t            this._debugInfo = _debugInfo;\n\t            this.nativeNode = nativeNode;\n\t            if (isPresent(parent) && parent instanceof DebugElement) {\n\t                parent.addChild(this);\n\t            }\n\t            else {\n\t                this.parent = null;\n\t            }\n\t            this.listeners = [];\n\t        }\n\t        Object.defineProperty(DebugNode.prototype, \"injector\", {\n\t            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.injector : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n\t            get: function () {\n\t                return isPresent(this._debugInfo) ? this._debugInfo.component : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"context\", {\n\t            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.context : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"references\", {\n\t            get: function () {\n\t                return isPresent(this._debugInfo) ? this._debugInfo.references : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n\t            get: function () {\n\t                return isPresent(this._debugInfo) ? this._debugInfo.providerTokens : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"source\", {\n\t            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.source : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugNode;\n\t    }());\n\t    /**\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugElement = (function (_super) {\n\t        __extends$12(DebugElement, _super);\n\t        function DebugElement(nativeNode, parent, _debugInfo) {\n\t            _super.call(this, nativeNode, parent, _debugInfo);\n\t            this.properties = {};\n\t            this.attributes = {};\n\t            this.classes = {};\n\t            this.styles = {};\n\t            this.childNodes = [];\n\t            this.nativeElement = nativeNode;\n\t        }\n\t        DebugElement.prototype.addChild = function (child) {\n\t            if (isPresent(child)) {\n\t                this.childNodes.push(child);\n\t                child.parent = this;\n\t            }\n\t        };\n\t        DebugElement.prototype.removeChild = function (child) {\n\t            var childIndex = this.childNodes.indexOf(child);\n\t            if (childIndex !== -1) {\n\t                child.parent = null;\n\t                this.childNodes.splice(childIndex, 1);\n\t            }\n\t        };\n\t        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n\t            var siblingIndex = this.childNodes.indexOf(child);\n\t            if (siblingIndex !== -1) {\n\t                var previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n\t                var nextChildren = this.childNodes.slice(siblingIndex + 1);\n\t                this.childNodes =\n\t                    ListWrapper.concat(ListWrapper.concat(previousChildren, newChildren), nextChildren);\n\t                for (var i = 0; i < newChildren.length; ++i) {\n\t                    var newChild = newChildren[i];\n\t                    if (isPresent(newChild.parent)) {\n\t                        newChild.parent.removeChild(newChild);\n\t                    }\n\t                    newChild.parent = this;\n\t                }\n\t            }\n\t        };\n\t        DebugElement.prototype.query = function (predicate) {\n\t            var results = this.queryAll(predicate);\n\t            return results.length > 0 ? results[0] : null;\n\t        };\n\t        DebugElement.prototype.queryAll = function (predicate) {\n\t            var matches = [];\n\t            _queryElementChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        DebugElement.prototype.queryAllNodes = function (predicate) {\n\t            var matches = [];\n\t            _queryNodeChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        Object.defineProperty(DebugElement.prototype, \"children\", {\n\t            get: function () {\n\t                var children = [];\n\t                this.childNodes.forEach(function (node) {\n\t                    if (node instanceof DebugElement) {\n\t                        children.push(node);\n\t                    }\n\t                });\n\t                return children;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n\t            this.listeners.forEach(function (listener) {\n\t                if (listener.name == eventName) {\n\t                    listener.callback(eventObj);\n\t                }\n\t            });\n\t        };\n\t        return DebugElement;\n\t    }(DebugNode));\n\t    /**\n\t     * @experimental\n\t     */\n\t    function asNativeElements(debugEls) {\n\t        return debugEls.map(function (el) { return el.nativeElement; });\n\t    }\n\t    function _queryElementChildren(element, predicate, matches) {\n\t        element.childNodes.forEach(function (node) {\n\t            if (node instanceof DebugElement) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                _queryElementChildren(node, predicate, matches);\n\t            }\n\t        });\n\t    }\n\t    function _queryNodeChildren(parentNode, predicate, matches) {\n\t        if (parentNode instanceof DebugElement) {\n\t            parentNode.childNodes.forEach(function (node) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                if (node instanceof DebugElement) {\n\t                    _queryNodeChildren(node, predicate, matches);\n\t                }\n\t            });\n\t        }\n\t    }\n\t    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n\t    var _nativeNodeToDebugNode = new Map();\n\t    /**\n\t     * @experimental\n\t     */\n\t    function getDebugNode(nativeNode) {\n\t        return _nativeNodeToDebugNode.get(nativeNode);\n\t    }\n\t    function indexDebugNode(node) {\n\t        _nativeNodeToDebugNode.set(node.nativeNode, node);\n\t    }\n\t    function removeDebugNodeFromIndex(node) {\n\t        _nativeNodeToDebugNode.delete(node.nativeNode);\n\t    }\n\t\n\t    function _reflector() {\n\t        return reflector;\n\t    }\n\t    var _CORE_PLATFORM_PROVIDERS = [\n\t        PlatformRef_, { provide: PlatformRef, useExisting: PlatformRef_ },\n\t        { provide: Reflector, useFactory: _reflector, deps: [] },\n\t        { provide: ReflectorReader, useExisting: Reflector }, TestabilityRegistry, Console\n\t    ];\n\t    /**\n\t     * This platform has to be included in any other platform\n\t     *\n\t     * @experimental\n\t     */\n\t    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\t\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var LOCALE_ID = new OpaqueToken('LocaleId');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var TRANSLATIONS = new OpaqueToken('Translations');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\t\n\t    function _iterableDiffersFactory() {\n\t        return defaultIterableDiffers;\n\t    }\n\t    function _keyValueDiffersFactory() {\n\t        return defaultKeyValueDiffers;\n\t    }\n\t    /**\n\t     * This module includes the providers of @angular/core that are needed\n\t     * to bootstrap components via `ApplicationRef`.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ApplicationModule = (function () {\n\t        function ApplicationModule() {\n\t        }\n\t        ApplicationModule.decorators = [\n\t            { type: NgModule, args: [{\n\t                        providers: [\n\t                            ApplicationRef_,\n\t                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n\t                            ApplicationInitStatus,\n\t                            Compiler,\n\t                            APP_ID_RANDOM_PROVIDER,\n\t                            ViewUtils,\n\t                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n\t                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n\t                            { provide: LOCALE_ID, useValue: 'en-US' },\n\t                        ]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationModule.ctorParameters = [];\n\t        return ApplicationModule;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n\t    var ANY_STATE = '*';\n\t    var DEFAULT_STATE = '*';\n\t    var EMPTY_STATE = 'void';\n\t\n\t    var Math$1 = global$1.Math;\n\t\n\t    var AnimationGroupPlayer = (function () {\n\t        function AnimationGroupPlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            var count = 0;\n\t            var total = this._players.length;\n\t            if (total == 0) {\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else {\n\t                this._players.forEach(function (player) {\n\t                    player.parentPlayer = _this;\n\t                    player.onDone(function () {\n\t                        if (++count >= total) {\n\t                            _this._onFinish();\n\t                        }\n\t                    });\n\t                });\n\t            }\n\t        }\n\t        AnimationGroupPlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                if (!isPresent(this.parentPlayer)) {\n\t                    this.destroy();\n\t                }\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n\t        AnimationGroupPlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._players.forEach(function (player) { return player.play(); });\n\t        };\n\t        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n\t        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n\t        AnimationGroupPlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        AnimationGroupPlayer.prototype.destroy = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.destroy(); });\n\t        };\n\t        AnimationGroupPlayer.prototype.reset = function () { this._players.forEach(function (player) { return player.reset(); }); };\n\t        AnimationGroupPlayer.prototype.setPosition = function (p /** TODO #9100 */) {\n\t            this._players.forEach(function (player) { player.setPosition(p); });\n\t        };\n\t        AnimationGroupPlayer.prototype.getPosition = function () {\n\t            var min = 0;\n\t            this._players.forEach(function (player) {\n\t                var p = player.getPosition();\n\t                min = Math$1.min(p, min);\n\t            });\n\t            return min;\n\t        };\n\t        return AnimationGroupPlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var AnimationKeyframe = (function () {\n\t        function AnimationKeyframe(offset, styles) {\n\t            this.offset = offset;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationKeyframe;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var AnimationOutput = (function () {\n\t        function AnimationOutput(name, phase, fullPropertyName) {\n\t            this.name = name;\n\t            this.phase = phase;\n\t            this.fullPropertyName = fullPropertyName;\n\t        }\n\t        return AnimationOutput;\n\t    }());\n\t\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationPlayer = (function () {\n\t        function AnimationPlayer() {\n\t        }\n\t        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationPlayer;\n\t    }());\n\t    var NoOpAnimationPlayer = (function () {\n\t        function NoOpAnimationPlayer() {\n\t            var _this = this;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            scheduleMicroTask(function () { return _this._onFinish(); });\n\t        }\n\t        /** @internal */\n\t        NoOpAnimationPlayer.prototype._onFinish = function () {\n\t            this._onDoneFns.forEach(function (fn) { return fn(); });\n\t            this._onDoneFns = [];\n\t        };\n\t        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n\t        NoOpAnimationPlayer.prototype.init = function () { };\n\t        NoOpAnimationPlayer.prototype.play = function () {\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t            }\n\t            this._started = true;\n\t        };\n\t        NoOpAnimationPlayer.prototype.pause = function () { };\n\t        NoOpAnimationPlayer.prototype.restart = function () { };\n\t        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n\t        NoOpAnimationPlayer.prototype.destroy = function () { };\n\t        NoOpAnimationPlayer.prototype.reset = function () { };\n\t        NoOpAnimationPlayer.prototype.setPosition = function (p /** TODO #9100 */) { };\n\t        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n\t        return NoOpAnimationPlayer;\n\t    }());\n\t\n\t    var AnimationSequencePlayer = (function () {\n\t        function AnimationSequencePlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._currentIndex = 0;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            this._players.forEach(function (player) { player.parentPlayer = _this; });\n\t            this._onNext(false);\n\t        }\n\t        AnimationSequencePlayer.prototype._onNext = function (start) {\n\t            var _this = this;\n\t            if (this._finished)\n\t                return;\n\t            if (this._players.length == 0) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else if (this._currentIndex >= this._players.length) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                this._onFinish();\n\t            }\n\t            else {\n\t                var player = this._players[this._currentIndex++];\n\t                player.onDone(function () { return _this._onNext(true); });\n\t                this._activePlayer = player;\n\t                if (start) {\n\t                    player.play();\n\t                }\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                if (!isPresent(this.parentPlayer)) {\n\t                    this.destroy();\n\t                }\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n\t        AnimationSequencePlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._activePlayer.play();\n\t        };\n\t        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n\t        AnimationSequencePlayer.prototype.restart = function () {\n\t            if (this._players.length > 0) {\n\t                this.reset();\n\t                this._players[0].restart();\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype.reset = function () { this._players.forEach(function (player) { return player.reset(); }); };\n\t        AnimationSequencePlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        AnimationSequencePlayer.prototype.destroy = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.destroy(); });\n\t        };\n\t        AnimationSequencePlayer.prototype.setPosition = function (p /** TODO #9100 */) { this._players[0].setPosition(p); };\n\t        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n\t        return AnimationSequencePlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$13 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AUTO_STYLE = '*';\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link trigger trigger\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationEntryMetadata = (function () {\n\t        function AnimationEntryMetadata(name, definitions) {\n\t            this.name = name;\n\t            this.definitions = definitions;\n\t        }\n\t        return AnimationEntryMetadata;\n\t    }());\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateMetadata = (function () {\n\t        function AnimationStateMetadata() {\n\t        }\n\t        return AnimationStateMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link state state animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateDeclarationMetadata = (function (_super) {\n\t        __extends$13(AnimationStateDeclarationMetadata, _super);\n\t        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n\t            _super.call(this);\n\t            this.stateNameExpr = stateNameExpr;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStateDeclarationMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the\n\t     * {@link transition transition animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateTransitionMetadata = (function (_super) {\n\t        __extends$13(AnimationStateTransitionMetadata, _super);\n\t        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n\t            _super.call(this);\n\t            this.stateChangeExpr = stateChangeExpr;\n\t            this.steps = steps;\n\t        }\n\t        return AnimationStateTransitionMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationMetadata = (function () {\n\t        function AnimationMetadata() {\n\t        }\n\t        return AnimationMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link keyframes keyframes\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationKeyframesSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n\t        function AnimationKeyframesSequenceMetadata(steps) {\n\t            _super.call(this);\n\t            this.steps = steps;\n\t        }\n\t        return AnimationKeyframesSequenceMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link style style animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStyleMetadata = (function (_super) {\n\t        __extends$13(AnimationStyleMetadata, _super);\n\t        function AnimationStyleMetadata(styles, offset) {\n\t            if (offset === void 0) { offset = null; }\n\t            _super.call(this);\n\t            this.styles = styles;\n\t            this.offset = offset;\n\t        }\n\t        return AnimationStyleMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link animate animate\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationAnimateMetadata = (function (_super) {\n\t        __extends$13(AnimationAnimateMetadata, _super);\n\t        function AnimationAnimateMetadata(timings, styles) {\n\t            _super.call(this);\n\t            this.timings = timings;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationAnimateMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationWithStepsMetadata = (function (_super) {\n\t        __extends$13(AnimationWithStepsMetadata, _super);\n\t        function AnimationWithStepsMetadata() {\n\t            _super.call(this);\n\t        }\n\t        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationWithStepsMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link sequence sequence\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationSequenceMetadata, _super);\n\t        function AnimationSequenceMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationSequenceMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link group group animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationGroupMetadata = (function (_super) {\n\t        __extends$13(AnimationGroupMetadata, _super);\n\t        function AnimationGroupMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationGroupMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n\t     * amount of\n\t     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n\t     * used within {@link sequence an animation sequence}, {@link group group}, or {@link transition\n\t     * transition}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `animate` function accepts two input parameters: `timing` and `styles`:\n\t     *\n\t     * - `timing` is a string based value that can be a combination of a duration with optional\n\t     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n\t     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n\t     * delay=100, easing=ease-out`.\n\t     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n\t     * form.\n\t     * - `styles` is the style input data which can either be a call to {@link style style} or {@link\n\t     * keyframes keyframes}.\n\t     * If left empty then the styles from the destination state will be collected and used (this is\n\t     * useful when\n\t     * describing an animation step that will complete an animation by {@link\n\t     * transition#the-final-animate-call animating to the final state}).\n\t     *\n\t     * ```typescript\n\t     * // various functions for specifying timing data\n\t     * animate(500, style(...))\n\t     * animate(\"1s\", style(...))\n\t     * animate(\"100ms 0.5s\", style(...))\n\t     * animate(\"5s ease\", style(...))\n\t     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n\t     *\n\t     * // either style() of keyframes() can be used\n\t     * animate(500, style({ background: \"red\" }))\n\t     * animate(500, keyframes([\n\t     *   style({ background: \"blue\" })),\n\t     *   style({ background: \"red\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function animate(timing, styles) {\n\t        if (styles === void 0) { styles = null; }\n\t        var stylesEntry = styles;\n\t        if (!isPresent(stylesEntry)) {\n\t            var EMPTY_STYLE = {};\n\t            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n\t        }\n\t        return new AnimationAnimateMetadata(timing, stylesEntry);\n\t    }\n\t    /**\n\t     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n\t     * are useful when a series of styles must be animated/closed off\n\t     * at different statrting/ending times.\n\t     *\n\t     * The `group` function can either be used within a {@link sequence sequence} or a {@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once all of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `group` animation function can either consist\n\t     * of {@link style style} or {@link animate animate} function calls. Each call to `style()` or\n\t     * `animate()`\n\t     * within a group will be executed instantly (use {@link keyframes keyframes} or a\n\t     * {@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n\t     * time).\n\t     *\n\t     * ```typescript\n\t     * group([\n\t     *   animate(\"1s\", { background: \"black\" }))\n\t     *   animate(\"2s\", { color: \"white\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function group(steps) {\n\t        return new AnimationGroupMetadata(steps);\n\t    }\n\t    /**\n\t     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n\t     * by default when an array is passed as animation data into {@link transition transition}.)\n\t     *\n\t     * The `sequence` function can either be used within a {@link group group} or a {@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once each of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * To perform animation styling in parallel with other animation steps then\n\t     * have a look at the {@link group group} animation function.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `sequence` animation function can either consist\n\t     * of {@link style style} or {@link animate animate} function calls. A call to `style()` will apply\n\t     * the\n\t     * provided styling data immediately while a call to `animate()` will apply its styling\n\t     * data over a given time depending on its timing data.\n\t     *\n\t     * ```typescript\n\t     * sequence([\n\t     *   style({ opacity: 0 })),\n\t     *   animate(\"1s\", { opacity: 1 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function sequence(steps) {\n\t        return new AnimationSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `style` declares a key/value object containing CSS properties/styles that can then\n\t     * be used for {@link state animation states}, within an {@link sequence animation sequence}, or as\n\t     * styling data for both {@link animate animate} and {@link keyframes keyframes}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n\t     * pairs to be defined.\n\t     *\n\t     * ```typescript\n\t     * // string values are used for css properties\n\t     * style({ background: \"red\", color: \"blue\" })\n\t     *\n\t     * // numerical (pixel) values are also supported\n\t     * style({ width: 100, height: 0 })\n\t     * ```\n\t     *\n\t     * #### Auto-styles (using `*`)\n\t     *\n\t     * When an asterix (`*`) character is used as a value then it will be detected from the element\n\t     * being animated\n\t     * and applied as animation data when the animation starts.\n\t     *\n\t     * This feature proves useful for a state depending on layout and/or environment factors; in such\n\t     * cases\n\t     * the styles are calculated just before the animation starts.\n\t     *\n\t     * ```typescript\n\t     * // the steps below will animate from 0 to the\n\t     * // actual height of the element\n\t     * style({ height: 0 }),\n\t     * animate(\"1s\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function style(tokens) {\n\t        var input;\n\t        var offset = null;\n\t        if (isString(tokens)) {\n\t            input = [tokens];\n\t        }\n\t        else {\n\t            if (isArray(tokens)) {\n\t                input = tokens;\n\t            }\n\t            else {\n\t                input = [tokens];\n\t            }\n\t            input.forEach(function (entry) {\n\t                var entryOffset = entry['offset'];\n\t                if (isPresent(entryOffset)) {\n\t                    offset = offset == null ? parseFloat(entryOffset) : offset;\n\t                }\n\t            });\n\t        }\n\t        return new AnimationStyleMetadata(input, offset);\n\t    }\n\t    /**\n\t     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `state` declares an animation state within the given trigger. When a state is\n\t     * active within a component then its associated styles will persist on\n\t     * the element that the trigger is attached to (even when the animation ends).\n\t     *\n\t     * To animate between states, have a look at the animation {@link transition transition}\n\t     * DSL function. To register states to an animation trigger please have a look\n\t     * at the {@link trigger trigger} function.\n\t     *\n\t     * #### The `void` state\n\t     *\n\t     * The `void` state value is a reserved word that angular uses to determine when the element is not\n\t     * apart\n\t     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n\t     * associated element\n\t     * is void).\n\t     *\n\t     * #### The `*` (default) state\n\t     *\n\t     * The `*` state (when styled) is a fallback state that will be used if\n\t     * the state that is being animated is not declared within the trigger.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `state` will declare an animation state with its associated styles\n\t     * within the given trigger.\n\t     *\n\t     * - `stateNameExpr` can be one or more state names separated by commas.\n\t     * - `styles` refers to the {@link style styling data} that will be persisted on the element once\n\t     * the state\n\t     * has been reached.\n\t     *\n\t     * ```typescript\n\t     * // \"void\" is a reserved name for a state and is used to represent\n\t     * // the state in which an element is detached from from the application.\n\t     * state(\"void\", style({ height: 0 }))\n\t     *\n\t     * // user-defined states\n\t     * state(\"closed\", style({ height: 0 }))\n\t     * state(\"open, visible\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function state(stateNameExpr, styles) {\n\t        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n\t    }\n\t    /**\n\t     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `keyframes` specifies a collection of {@link style style} entries each optionally characterized\n\t     * by an `offset` value.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `keyframes` animation function is designed to be used alongside the {@link animate animate}\n\t     * animation function. Instead of applying animations from where they are\n\t     * currently to their destination, keyframes can describe how each style entry is applied\n\t     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n\t     *\n\t     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n\t     * what percentage of the animate time the styles will be applied.\n\t     *\n\t     * ```typescript\n\t     * // the provided offset values describe when each backgroundColor value is applied.\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\", offset: 0 }),\n\t     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n\t     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n\t     *   style({ backgroundColor: \"black\", offset: 1 })\n\t     * ]))\n\t     * ```\n\t     *\n\t     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n\t     * will\n\t     * be calculated automatically.\n\t     *\n\t     * ```typescript\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\" }) // offset = 0\n\t     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n\t     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n\t     *   style({ backgroundColor: \"black\" }) // offset = 1\n\t     * ]))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function keyframes(steps) {\n\t        return new AnimationKeyframesSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `transition` declares the {@link sequence sequence of animation steps} that will be run when the\n\t     * provided\n\t     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n\t     * which consists\n\t     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n\t     *\n\t     * Animation transitions are placed within an {@link trigger animation trigger}. For an transition\n\t     * to animate to\n\t     * a state value and persist its styles then one or more {@link state animation states} is expected\n\t     * to be defined.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n\t     * what the\n\t     * previous state is and what the current state has become. In other words, if a transition is\n\t     * defined that\n\t     * matches the old/current state criteria then the associated animation will be triggered.\n\t     *\n\t     * ```typescript\n\t     * // all transition/state changes are defined within an animation trigger\n\t     * trigger(\"myAnimationTrigger\", [\n\t     *   // if a state is defined then its styles will be persisted when the\n\t     *   // animation has fully completed itself\n\t     *   state(\"on\", style({ background: \"green\" })),\n\t     *   state(\"off\", style({ background: \"grey\" })),\n\t     *\n\t     *   // a transition animation that will be kicked off when the state value\n\t     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n\t     *   transition(\"on => off\", animate(500)),\n\t     *\n\t     *   // it is also possible to do run the same animation for both directions\n\t     *   transition(\"on <=> off\", animate(500)),\n\t     *\n\t     *   // or to define multiple states pairs separated by commas\n\t     *   transition(\"on => off, off => void\", animate(500)),\n\t     *\n\t     *   // this is a catch-all state change for when an element is inserted into\n\t     *   // the page and the destination state is unknown\n\t     *   transition(\"void => *\", [\n\t     *     style({ opacity: 0 }),\n\t     *     animate(500)\n\t     *   ]),\n\t     *\n\t     *   // this will capture a state change between any states\n\t     *   transition(\"* => *\", animate(\"1s 0s\")),\n\t     * ])\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * #### The final `animate` call\n\t     *\n\t     * If the final step within the transition steps is a call to `animate()` that **only**\n\t     * uses a timing value with **no style data** then it will be automatically used as the final\n\t     * animation\n\t     * arc for the element to animate itself to the final state. This involves an automatic mix of\n\t     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n\t     * applied state to be presented correctly.\n\t     *\n\t     * ```\n\t     * // start off by hiding the element, but make sure that it animates properly to whatever state\n\t     * // is currently active for \"myAnimationTrigger\"\n\t     * transition(\"void => *\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500)\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function transition(stateChangeExpr, steps) {\n\t        var animationData = isArray(steps) ? new AnimationSequenceMetadata(steps) :\n\t            steps;\n\t        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n\t    }\n\t    /**\n\t     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `trigger` Creates an animation trigger which will a list of {@link state state} and {@link\n\t     * transition transition}\n\t     * entries that will be evaluated when the expression bound to the trigger changes.\n\t     *\n\t     * Triggers are registered within the component annotation data under the\n\t     * {@link Component#animations-anchor animations section}. An animation trigger can\n\t     * be placed on an element within a template by referencing the name of the\n\t     * trigger followed by the expression value that the trigger is bound to\n\t     * (in the form of `[@triggerName]=\"expression\"`.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `trigger` will create an animation trigger reference based on the provided `name` value.\n\t     * The provided `animation` value is expected to be an array consisting of {@link state state} and\n\t     * {@link transition transition}\n\t     * declarations.\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   selector: 'my-component',\n\t     *   templateUrl: 'my-component-tpl.html',\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *       state(...),\n\t     *       state(...),\n\t     *       transition(...),\n\t     *       transition(...)\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   myStatusExp = \"something\";\n\t     * }\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function trigger(name, animation) {\n\t        return new AnimationEntryMetadata(name, animation);\n\t    }\n\t\n\t    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n\t        if (nullValue === void 0) { nullValue = null; }\n\t        var finalStyles = {};\n\t        StringMapWrapper.forEach(newStyles, function (value, prop) {\n\t            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n\t        });\n\t        StringMapWrapper.forEach(previousStyles, function (value, prop) {\n\t            if (!isPresent(finalStyles[prop])) {\n\t                finalStyles[prop] = nullValue;\n\t            }\n\t        });\n\t        return finalStyles;\n\t    }\n\t    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n\t        var limit = keyframes.length - 1;\n\t        var firstKeyframe = keyframes[0];\n\t        // phase 1: copy all the styles from the first keyframe into the lookup map\n\t        var flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n\t        var extraFirstKeyframeStyles = {};\n\t        var hasExtraFirstStyles = false;\n\t        StringMapWrapper.forEach(collectedStyles, function (value, prop) {\n\t            // if the style is already defined in the first keyframe then\n\t            // we do not replace it.\n\t            if (!flatenedFirstKeyframeStyles[prop]) {\n\t                flatenedFirstKeyframeStyles[prop] = value;\n\t                extraFirstKeyframeStyles[prop] = value;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        var keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n\t        // phase 2: normalize the final keyframe\n\t        var finalKeyframe = keyframes[limit];\n\t        ListWrapper.insert(finalKeyframe.styles.styles, 0, finalStateStyles);\n\t        var flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n\t        var extraFinalKeyframeStyles = {};\n\t        var hasExtraFinalStyles = false;\n\t        StringMapWrapper.forEach(keyframeCollectedStyles, function (value, prop) {\n\t            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n\t                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFinalStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFinalStyles) {\n\t            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n\t        }\n\t        StringMapWrapper.forEach(flatenedFinalKeyframeStyles, function (value, prop) {\n\t            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n\t                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFirstStyles) {\n\t            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n\t        }\n\t        return keyframes;\n\t    }\n\t    function clearStyles(styles) {\n\t        var finalStyles = {};\n\t        StringMapWrapper.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n\t        return finalStyles;\n\t    }\n\t    function collectAndResolveStyles(collection, styles) {\n\t        return styles.map(function (entry) {\n\t            var stylesObj = {};\n\t            StringMapWrapper.forEach(entry, function (value, prop) {\n\t                if (value == FILL_STYLE_FLAG) {\n\t                    value = collection[prop];\n\t                    if (!isPresent(value)) {\n\t                        value = AUTO_STYLE;\n\t                    }\n\t                }\n\t                collection[prop] = value;\n\t                stylesObj[prop] = value;\n\t            });\n\t            return stylesObj;\n\t        });\n\t    }\n\t    function renderStyles(element, renderer, styles) {\n\t        StringMapWrapper.forEach(styles, function (value, prop) { renderer.setElementStyle(element, prop, value); });\n\t    }\n\t    function flattenStyles(styles) {\n\t        var finalStyles = {};\n\t        styles.forEach(function (entry) {\n\t            StringMapWrapper.forEach(entry, function (value, prop) { finalStyles[prop] = value; });\n\t        });\n\t        return finalStyles;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var AnimationStyles = (function () {\n\t        function AnimationStyles(styles) {\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStyles;\n\t    }());\n\t\n\t    var DebugDomRootRenderer = (function () {\n\t        function DebugDomRootRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n\t            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n\t        };\n\t        return DebugDomRootRenderer;\n\t    }());\n\t    var DebugDomRenderer = (function () {\n\t        function DebugDomRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n\t            var nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n\t            var debugEl = new DebugElement(nativeEl, null, debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n\t            var nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n\t            var debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n\t            debugEl.name = name;\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n\t        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n\t            var comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n\t            var debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return comment;\n\t        };\n\t        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n\t            var text = this._delegate.createText(parentElement, value, debugInfo);\n\t            var debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return text;\n\t        };\n\t        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n\t            var debugParent = getDebugNode(parentElement);\n\t            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n\t                var debugElement_1 = debugParent;\n\t                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n\t            }\n\t            this._delegate.projectNodes(parentElement, nodes);\n\t        };\n\t        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n\t            var debugNode = getDebugNode(node);\n\t            if (isPresent(debugNode)) {\n\t                var debugParent = debugNode.parent;\n\t                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n\t                    var debugViewRootNodes = [];\n\t                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes.push(getDebugNode(rootNode)); });\n\t                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes);\n\t                }\n\t            }\n\t            this._delegate.attachViewAfter(node, viewRootNodes);\n\t        };\n\t        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n\t            viewRootNodes.forEach(function (node) {\n\t                var debugNode = getDebugNode(node);\n\t                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n\t                    debugNode.parent.removeChild(debugNode);\n\t                }\n\t            });\n\t            this._delegate.detachView(viewRootNodes);\n\t        };\n\t        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n\t            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n\t            this._delegate.destroyView(hostElement, viewAllNodes);\n\t        };\n\t        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl)) {\n\t                debugEl.listeners.push(new EventListener(name, callback));\n\t            }\n\t            return this._delegate.listen(renderElement, name, callback);\n\t        };\n\t        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n\t            return this._delegate.listenGlobal(target, name, callback);\n\t        };\n\t        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.properties[propertyName] = propertyValue;\n\t            }\n\t            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n\t        };\n\t        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.attributes[attributeName] = attributeValue;\n\t            }\n\t            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n\t        };\n\t        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n\t            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n\t        };\n\t        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.classes[className] = isAdd;\n\t            }\n\t            this._delegate.setElementClass(renderElement, className, isAdd);\n\t        };\n\t        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.styles[styleName] = styleValue;\n\t            }\n\t            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n\t        };\n\t        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n\t            this._delegate.invokeElementMethod(renderElement, methodName, args);\n\t        };\n\t        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n\t        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n\t            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing);\n\t        };\n\t        return DebugDomRenderer;\n\t    }());\n\t\n\t    var StaticNodeDebugInfo = (function () {\n\t        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n\t            this.providerTokens = providerTokens;\n\t            this.componentToken = componentToken;\n\t            this.refTokens = refTokens;\n\t        }\n\t        return StaticNodeDebugInfo;\n\t    }());\n\t    var DebugContext = (function () {\n\t        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t            this._tplRow = _tplRow;\n\t            this._tplCol = _tplCol;\n\t        }\n\t        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n\t            get: function () {\n\t                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"context\", {\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"component\", {\n\t            get: function () {\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n\t                    return this.injector.get(staticNodeInfo.componentToken);\n\t                }\n\t                return null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n\t            get: function () {\n\t                var componentView = this._view;\n\t                while (isPresent(componentView.declarationAppElement) &&\n\t                    componentView.type !== ViewType.COMPONENT) {\n\t                    componentView = componentView.declarationAppElement.parentView;\n\t                }\n\t                return isPresent(componentView.declarationAppElement) ?\n\t                    componentView.declarationAppElement.nativeElement :\n\t                    null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"injector\", {\n\t            get: function () { return this._view.injector(this._nodeIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n\t            get: function () {\n\t                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n\t                    return this._view.allNodes[this._nodeIndex];\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n\t            get: function () {\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"source\", {\n\t            get: function () {\n\t                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"references\", {\n\t            get: function () {\n\t                var _this = this;\n\t                var varValues = {};\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo)) {\n\t                    var refs = staticNodeInfo.refTokens;\n\t                    StringMapWrapper.forEach(refs, function (refToken, refName) {\n\t                        var varValue;\n\t                        if (isBlank(refToken)) {\n\t                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n\t                        }\n\t                        else {\n\t                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n\t                        }\n\t                        varValues[refName] = varValue;\n\t                    });\n\t                }\n\t                return varValues;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugContext;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * An instance of this class is returned as an event parameter when an animation\n\t     * callback is captured for an animation either during the start or done phase.\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   host: {\n\t     *     '[@myAnimationTrigger]': 'someExpression',\n\t     *     '(@myAnimationTrigger.start)': 'captureStartEvent($event)',\n\t     *     '(@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n\t     *   },\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *        // ...\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   someExpression: any = false;\n\t     *   captureStartEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     *\n\t     *   captureDoneEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationTransitionEvent = (function () {\n\t        function AnimationTransitionEvent(_a) {\n\t            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime;\n\t            this.fromState = fromState;\n\t            this.toState = toState;\n\t            this.totalTime = totalTime;\n\t        }\n\t        return AnimationTransitionEvent;\n\t    }());\n\t\n\t    var ViewAnimationMap = (function () {\n\t        function ViewAnimationMap() {\n\t            this._map = new Map$1();\n\t            this._allPlayers = [];\n\t        }\n\t        Object.defineProperty(ViewAnimationMap.prototype, \"length\", {\n\t            get: function () { return this.getAllPlayers().length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ViewAnimationMap.prototype.find = function (element, animationName) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (isPresent(playersByAnimation)) {\n\t                return playersByAnimation[animationName];\n\t            }\n\t        };\n\t        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n\t            var el = this._map.get(element);\n\t            return el ? StringMapWrapper.values(el) : [];\n\t        };\n\t        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (!isPresent(playersByAnimation)) {\n\t                playersByAnimation = {};\n\t            }\n\t            var existingEntry = playersByAnimation[animationName];\n\t            if (isPresent(existingEntry)) {\n\t                this.remove(element, animationName);\n\t            }\n\t            playersByAnimation[animationName] = player;\n\t            this._allPlayers.push(player);\n\t            this._map.set(element, playersByAnimation);\n\t        };\n\t        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n\t        ViewAnimationMap.prototype.remove = function (element, animationName) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (isPresent(playersByAnimation)) {\n\t                var player = playersByAnimation[animationName];\n\t                delete playersByAnimation[animationName];\n\t                var index = this._allPlayers.indexOf(player);\n\t                ListWrapper.removeAt(this._allPlayers, index);\n\t                if (StringMapWrapper.isEmpty(playersByAnimation)) {\n\t                    this._map.delete(element);\n\t                }\n\t            }\n\t        };\n\t        return ViewAnimationMap;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$15 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _UNDEFINED$1 = new Object();\n\t    var ElementInjector = (function (_super) {\n\t        __extends$15(ElementInjector, _super);\n\t        function ElementInjector(_view, _nodeIndex) {\n\t            _super.call(this);\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t        }\n\t        ElementInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            var result = _UNDEFINED$1;\n\t            if (result === _UNDEFINED$1) {\n\t                result = this._view.injectorGet(token, this._nodeIndex, _UNDEFINED$1);\n\t            }\n\t            if (result === _UNDEFINED$1) {\n\t                result = this._view.parentInjector.get(token, notFoundValue);\n\t            }\n\t            return result;\n\t        };\n\t        return ElementInjector;\n\t    }(Injector));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$14 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n\t    /**\n\t     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n\t     *\n\t     */\n\t    var AppView = (function () {\n\t        function AppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode) {\n\t            this.clazz = clazz;\n\t            this.componentType = componentType;\n\t            this.type = type;\n\t            this.viewUtils = viewUtils;\n\t            this.parentInjector = parentInjector;\n\t            this.declarationAppElement = declarationAppElement;\n\t            this.cdMode = cdMode;\n\t            this.contentChildren = [];\n\t            this.viewChildren = [];\n\t            this.viewContainerElement = null;\n\t            this.numberOfChecks = 0;\n\t            this.animationPlayers = new ViewAnimationMap();\n\t            this._animationListeners = new Map();\n\t            this.ref = new ViewRef_(this);\n\t            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n\t                this.renderer = viewUtils.renderComponent(componentType);\n\t            }\n\t            else {\n\t                this.renderer = declarationAppElement.parentView.renderer;\n\t            }\n\t        }\n\t        Object.defineProperty(AppView.prototype, \"destroyed\", {\n\t            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AppView.prototype.cancelActiveAnimation = function (element, animationName, removeAllAnimations) {\n\t            if (removeAllAnimations === void 0) { removeAllAnimations = false; }\n\t            if (removeAllAnimations) {\n\t                this.animationPlayers.findAllPlayersByElement(element).forEach(function (player) { return player.destroy(); });\n\t            }\n\t            else {\n\t                var player = this.animationPlayers.find(element, animationName);\n\t                if (isPresent(player)) {\n\t                    player.destroy();\n\t                }\n\t            }\n\t        };\n\t        AppView.prototype.queueAnimation = function (element, animationName, player, totalTime, fromState, toState) {\n\t            var _this = this;\n\t            queueAnimation(player);\n\t            var event = new AnimationTransitionEvent({ 'fromState': fromState, 'toState': toState, 'totalTime': totalTime });\n\t            this.animationPlayers.set(element, animationName, player);\n\t            player.onDone(function () {\n\t                // TODO: make this into a datastructure for done|start\n\t                _this.triggerAnimationOutput(element, animationName, 'done', event);\n\t                _this.animationPlayers.remove(element, animationName);\n\t            });\n\t            player.onStart(function () { _this.triggerAnimationOutput(element, animationName, 'start', event); });\n\t        };\n\t        AppView.prototype.triggerAnimationOutput = function (element, animationName, phase, event) {\n\t            var listeners = this._animationListeners.get(element);\n\t            if (isPresent(listeners) && listeners.length) {\n\t                for (var i = 0; i < listeners.length; i++) {\n\t                    var listener = listeners[i];\n\t                    // we check for both the name in addition to the phase in the event\n\t                    // that there may be more than one @trigger on the same element\n\t                    if (listener.output.name == animationName && listener.output.phase == phase) {\n\t                        listener.handler(event);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        AppView.prototype.registerAnimationOutput = function (element, outputEvent, eventHandler) {\n\t            var entry = new _AnimationOutputWithHandler(outputEvent, eventHandler);\n\t            var animations = this._animationListeners.get(element);\n\t            if (!isPresent(animations)) {\n\t                this._animationListeners.set(element, animations = []);\n\t            }\n\t            animations.push(entry);\n\t        };\n\t        AppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {\n\t            this.context = context;\n\t            var projectableNodes;\n\t            switch (this.type) {\n\t                case ViewType.COMPONENT:\n\t                    projectableNodes = ensureSlotCount(givenProjectableNodes, this.componentType.slotCount);\n\t                    break;\n\t                case ViewType.EMBEDDED:\n\t                    projectableNodes = this.declarationAppElement.parentView.projectableNodes;\n\t                    break;\n\t                case ViewType.HOST:\n\t                    // Note: Don't ensure the slot count for the projectableNodes as we store\n\t                    // them only for the contained component view (which will later check the slot count...)\n\t                    projectableNodes = givenProjectableNodes;\n\t                    break;\n\t            }\n\t            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n\t            this.projectableNodes = projectableNodes;\n\t            return this.createInternal(rootSelectorOrNode);\n\t        };\n\t        /**\n\t         * Overwritten by implementations.\n\t         * Returns the AppElement for the host element for ViewType.HOST.\n\t         */\n\t        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n\t        AppView.prototype.init = function (rootNodesOrAppElements, allNodes, disposables, subscriptions) {\n\t            this.rootNodesOrAppElements = rootNodesOrAppElements;\n\t            this.allNodes = allNodes;\n\t            this.disposables = disposables;\n\t            this.subscriptions = subscriptions;\n\t            if (this.type === ViewType.COMPONENT) {\n\t                // Note: the render nodes have been attached to their host element\n\t                // in the ViewFactory already.\n\t                this.declarationAppElement.parentView.viewChildren.push(this);\n\t                this.dirtyParentQueriesInternal();\n\t            }\n\t        };\n\t        AppView.prototype.selectOrCreateHostElement = function (elementName, rootSelectorOrNode, debugInfo) {\n\t            var hostElement;\n\t            if (isPresent(rootSelectorOrNode)) {\n\t                hostElement = this.renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n\t            }\n\t            else {\n\t                hostElement = this.renderer.createElement(null, elementName, debugInfo);\n\t            }\n\t            return hostElement;\n\t        };\n\t        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n\t            return this.injectorGetInternal(token, nodeIndex, notFoundResult);\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n\t            return notFoundResult;\n\t        };\n\t        AppView.prototype.injector = function (nodeIndex) {\n\t            if (isPresent(nodeIndex)) {\n\t                return new ElementInjector(this, nodeIndex);\n\t            }\n\t            else {\n\t                return this.parentInjector;\n\t            }\n\t        };\n\t        AppView.prototype.destroy = function () {\n\t            if (this._hasExternalHostElement) {\n\t                this.renderer.detachView(this.flatRootNodes);\n\t            }\n\t            else if (isPresent(this.viewContainerElement)) {\n\t                this.viewContainerElement.detachView(this.viewContainerElement.nestedViews.indexOf(this));\n\t            }\n\t            this._destroyRecurse();\n\t        };\n\t        AppView.prototype._destroyRecurse = function () {\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                return;\n\t            }\n\t            var children = this.contentChildren;\n\t            for (var i = 0; i < children.length; i++) {\n\t                children[i]._destroyRecurse();\n\t            }\n\t            children = this.viewChildren;\n\t            for (var i = 0; i < children.length; i++) {\n\t                children[i]._destroyRecurse();\n\t            }\n\t            this.destroyLocal();\n\t            this.cdMode = ChangeDetectorStatus.Destroyed;\n\t        };\n\t        AppView.prototype.destroyLocal = function () {\n\t            var _this = this;\n\t            var hostElement = this.type === ViewType.COMPONENT ? this.declarationAppElement.nativeElement : null;\n\t            for (var i = 0; i < this.disposables.length; i++) {\n\t                this.disposables[i]();\n\t            }\n\t            for (var i = 0; i < this.subscriptions.length; i++) {\n\t                this.subscriptions[i].unsubscribe();\n\t            }\n\t            this.destroyInternal();\n\t            this.dirtyParentQueriesInternal();\n\t            if (this.animationPlayers.length == 0) {\n\t                this.renderer.destroyView(hostElement, this.allNodes);\n\t            }\n\t            else {\n\t                var player = new AnimationGroupPlayer(this.animationPlayers.getAllPlayers());\n\t                player.onDone(function () { _this.renderer.destroyView(hostElement, _this.allNodes); });\n\t            }\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.destroyInternal = function () { };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.detachInternal = function () { };\n\t        AppView.prototype.detach = function () {\n\t            var _this = this;\n\t            this.detachInternal();\n\t            if (this.animationPlayers.length == 0) {\n\t                this.renderer.detachView(this.flatRootNodes);\n\t            }\n\t            else {\n\t                var player = new AnimationGroupPlayer(this.animationPlayers.getAllPlayers());\n\t                player.onDone(function () { _this.renderer.detachView(_this.flatRootNodes); });\n\t            }\n\t        };\n\t        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n\t            get: function () { return this.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"parent\", {\n\t            get: function () {\n\t                return isPresent(this.declarationAppElement) ? this.declarationAppElement.parentView : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n\t            get: function () { return flattenNestedViewRenderNodes(this.rootNodesOrAppElements); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"lastRootNode\", {\n\t            get: function () {\n\t                var lastNode = this.rootNodesOrAppElements.length > 0 ?\n\t                    this.rootNodesOrAppElements[this.rootNodesOrAppElements.length - 1] :\n\t                    null;\n\t                return _findLastRenderNode(lastNode);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.dirtyParentQueriesInternal = function () { };\n\t        AppView.prototype.detectChanges = function (throwOnChange) {\n\t            var s = _scope_check(this.clazz);\n\t            if (this.cdMode === ChangeDetectorStatus.Checked ||\n\t                this.cdMode === ChangeDetectorStatus.Errored)\n\t                return;\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                this.throwDestroyedError('detectChanges');\n\t            }\n\t            this.detectChangesInternal(throwOnChange);\n\t            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n\t                this.cdMode = ChangeDetectorStatus.Checked;\n\t            this.numberOfChecks++;\n\t            wtfLeave(s);\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.detectChangesInternal = function (throwOnChange) {\n\t            this.detectContentChildrenChanges(throwOnChange);\n\t            this.detectViewChildrenChanges(throwOnChange);\n\t        };\n\t        AppView.prototype.detectContentChildrenChanges = function (throwOnChange) {\n\t            for (var i = 0; i < this.contentChildren.length; ++i) {\n\t                var child = this.contentChildren[i];\n\t                if (child.cdMode === ChangeDetectorStatus.Detached)\n\t                    continue;\n\t                child.detectChanges(throwOnChange);\n\t            }\n\t        };\n\t        AppView.prototype.detectViewChildrenChanges = function (throwOnChange) {\n\t            for (var i = 0; i < this.viewChildren.length; ++i) {\n\t                var child = this.viewChildren[i];\n\t                if (child.cdMode === ChangeDetectorStatus.Detached)\n\t                    continue;\n\t                child.detectChanges(throwOnChange);\n\t            }\n\t        };\n\t        AppView.prototype.markContentChildAsMoved = function (renderAppElement) { this.dirtyParentQueriesInternal(); };\n\t        AppView.prototype.addToContentChildren = function (renderAppElement) {\n\t            renderAppElement.parentView.contentChildren.push(this);\n\t            this.viewContainerElement = renderAppElement;\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        AppView.prototype.removeFromContentChildren = function (renderAppElement) {\n\t            ListWrapper.remove(renderAppElement.parentView.contentChildren, this);\n\t            this.dirtyParentQueriesInternal();\n\t            this.viewContainerElement = null;\n\t        };\n\t        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n\t        AppView.prototype.markPathToRootAsCheckOnce = function () {\n\t            var c = this;\n\t            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n\t                if (c.cdMode === ChangeDetectorStatus.Checked) {\n\t                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n\t                }\n\t                var parentEl = c.type === ViewType.COMPONENT ? c.declarationAppElement : c.viewContainerElement;\n\t                c = isPresent(parentEl) ? parentEl.parentView : null;\n\t            }\n\t        };\n\t        AppView.prototype.eventHandler = function (cb) { return cb; };\n\t        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n\t        return AppView;\n\t    }());\n\t    var DebugAppView = (function (_super) {\n\t        __extends$14(DebugAppView, _super);\n\t        function DebugAppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode, staticNodeDebugInfos) {\n\t            _super.call(this, clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode);\n\t            this.staticNodeDebugInfos = staticNodeDebugInfos;\n\t            this._currentDebugContext = null;\n\t        }\n\t        DebugAppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.create.call(this, context, givenProjectableNodes, rootSelectorOrNode);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.detach = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detach.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.destroyLocal = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.destroyLocal.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detectChanges.call(this, throwOnChange);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n\t        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n\t            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n\t        };\n\t        DebugAppView.prototype._rethrowWithContext = function (e) {\n\t            if (!(e instanceof ViewWrappedError)) {\n\t                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n\t                    this.cdMode = ChangeDetectorStatus.Errored;\n\t                }\n\t                if (isPresent(this._currentDebugContext)) {\n\t                    throw new ViewWrappedError(e, this._currentDebugContext);\n\t                }\n\t            }\n\t        };\n\t        DebugAppView.prototype.eventHandler = function (cb) {\n\t            var _this = this;\n\t            var superHandler = _super.prototype.eventHandler.call(this, cb);\n\t            return function (event) {\n\t                _this._resetDebug();\n\t                try {\n\t                    return superHandler(event);\n\t                }\n\t                catch (e) {\n\t                    _this._rethrowWithContext(e);\n\t                    throw e;\n\t                }\n\t            };\n\t        };\n\t        return DebugAppView;\n\t    }(AppView));\n\t    function _findLastRenderNode(node) {\n\t        var lastNode;\n\t        if (node instanceof AppElement) {\n\t            var appEl = node;\n\t            lastNode = appEl.nativeElement;\n\t            if (isPresent(appEl.nestedViews)) {\n\t                // Note: Views might have no root nodes at all!\n\t                for (var i = appEl.nestedViews.length - 1; i >= 0; i--) {\n\t                    var nestedView = appEl.nestedViews[i];\n\t                    if (nestedView.rootNodesOrAppElements.length > 0) {\n\t                        lastNode = _findLastRenderNode(nestedView.rootNodesOrAppElements[nestedView.rootNodesOrAppElements.length - 1]);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            lastNode = node;\n\t        }\n\t        return lastNode;\n\t    }\n\t    var _AnimationOutputWithHandler = (function () {\n\t        function _AnimationOutputWithHandler(output, handler) {\n\t            this.output = output;\n\t            this.handler = handler;\n\t        }\n\t        return _AnimationOutputWithHandler;\n\t    }());\n\t\n\t    var __core_private__ = {\n\t        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n\t        ChangeDetectorStatus: ChangeDetectorStatus,\n\t        CHANGE_DETECTION_STRATEGY_VALUES: CHANGE_DETECTION_STRATEGY_VALUES,\n\t        constructDependencies: constructDependencies,\n\t        LifecycleHooks: LifecycleHooks,\n\t        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n\t        ReflectorReader: ReflectorReader,\n\t        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n\t        AppElement: AppElement,\n\t        AppView: AppView,\n\t        DebugAppView: DebugAppView,\n\t        NgModuleInjector: NgModuleInjector,\n\t        registerModuleFactory: registerModuleFactory,\n\t        ViewType: ViewType,\n\t        MAX_INTERPOLATION_VALUES: MAX_INTERPOLATION_VALUES,\n\t        checkBinding: checkBinding,\n\t        flattenNestedViewRenderNodes: flattenNestedViewRenderNodes,\n\t        interpolate: interpolate,\n\t        ViewUtils: ViewUtils,\n\t        VIEW_ENCAPSULATION_VALUES: VIEW_ENCAPSULATION_VALUES,\n\t        ViewMetadata: ViewMetadata,\n\t        DebugContext: DebugContext,\n\t        StaticNodeDebugInfo: StaticNodeDebugInfo,\n\t        devModeEqual: devModeEqual,\n\t        UNINITIALIZED: UNINITIALIZED,\n\t        ValueUnwrapper: ValueUnwrapper,\n\t        RenderDebugInfo: RenderDebugInfo,\n\t        TemplateRef_: TemplateRef_,\n\t        ReflectionCapabilities: ReflectionCapabilities,\n\t        makeDecorator: makeDecorator,\n\t        DebugDomRootRenderer: DebugDomRootRenderer,\n\t        EMPTY_ARRAY: EMPTY_ARRAY,\n\t        EMPTY_MAP: EMPTY_MAP,\n\t        pureProxy1: pureProxy1,\n\t        pureProxy2: pureProxy2,\n\t        pureProxy3: pureProxy3,\n\t        pureProxy4: pureProxy4,\n\t        pureProxy5: pureProxy5,\n\t        pureProxy6: pureProxy6,\n\t        pureProxy7: pureProxy7,\n\t        pureProxy8: pureProxy8,\n\t        pureProxy9: pureProxy9,\n\t        pureProxy10: pureProxy10,\n\t        castByValue: castByValue,\n\t        Console: Console,\n\t        reflector: reflector,\n\t        Reflector: Reflector,\n\t        NoOpAnimationPlayer: NoOpAnimationPlayer,\n\t        AnimationPlayer: AnimationPlayer,\n\t        AnimationSequencePlayer: AnimationSequencePlayer,\n\t        AnimationGroupPlayer: AnimationGroupPlayer,\n\t        AnimationKeyframe: AnimationKeyframe,\n\t        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n\t        balanceAnimationKeyframes: balanceAnimationKeyframes,\n\t        flattenStyles: flattenStyles,\n\t        clearStyles: clearStyles,\n\t        renderStyles: renderStyles,\n\t        collectAndResolveStyles: collectAndResolveStyles,\n\t        AnimationStyles: AnimationStyles,\n\t        AnimationOutput: AnimationOutput,\n\t        ANY_STATE: ANY_STATE,\n\t        DEFAULT_STATE: DEFAULT_STATE,\n\t        EMPTY_STATE: EMPTY_STATE,\n\t        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n\t        ComponentStillLoadingError: ComponentStillLoadingError\n\t    };\n\t\n\t    exports.createPlatform = createPlatform;\n\t    exports.assertPlatform = assertPlatform;\n\t    exports.destroyPlatform = destroyPlatform;\n\t    exports.getPlatform = getPlatform;\n\t    exports.PlatformRef = PlatformRef;\n\t    exports.ApplicationRef = ApplicationRef;\n\t    exports.enableProdMode = enableProdMode;\n\t    exports.isDevMode = isDevMode;\n\t    exports.createPlatformFactory = createPlatformFactory;\n\t    exports.APP_ID = APP_ID;\n\t    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n\t    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n\t    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n\t    exports.APP_INITIALIZER = APP_INITIALIZER;\n\t    exports.ApplicationInitStatus = ApplicationInitStatus;\n\t    exports.DebugElement = DebugElement;\n\t    exports.DebugNode = DebugNode;\n\t    exports.asNativeElements = asNativeElements;\n\t    exports.getDebugNode = getDebugNode;\n\t    exports.Testability = Testability;\n\t    exports.TestabilityRegistry = TestabilityRegistry;\n\t    exports.setTestabilityGetter = setTestabilityGetter;\n\t    exports.TRANSLATIONS = TRANSLATIONS;\n\t    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n\t    exports.LOCALE_ID = LOCALE_ID;\n\t    exports.ApplicationModule = ApplicationModule;\n\t    exports.wtfCreateScope = wtfCreateScope;\n\t    exports.wtfLeave = wtfLeave;\n\t    exports.wtfStartTimeRange = wtfStartTimeRange;\n\t    exports.wtfEndTimeRange = wtfEndTimeRange;\n\t    exports.Type = Type;\n\t    exports.EventEmitter = EventEmitter;\n\t    exports.ErrorHandler = ErrorHandler;\n\t    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n\t    exports.AnimationPlayer = AnimationPlayer;\n\t    exports.Sanitizer = Sanitizer;\n\t    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n\t    exports.Attribute = Attribute;\n\t    exports.ContentChild = ContentChild;\n\t    exports.ContentChildren = ContentChildren;\n\t    exports.Query = Query;\n\t    exports.ViewChild = ViewChild;\n\t    exports.ViewChildren = ViewChildren;\n\t    exports.Component = Component;\n\t    exports.Directive = Directive;\n\t    exports.HostBinding = HostBinding;\n\t    exports.HostListener = HostListener;\n\t    exports.Input = Input;\n\t    exports.Output = Output;\n\t    exports.Pipe = Pipe;\n\t    exports.AfterContentChecked = AfterContentChecked;\n\t    exports.AfterContentInit = AfterContentInit;\n\t    exports.AfterViewChecked = AfterViewChecked;\n\t    exports.AfterViewInit = AfterViewInit;\n\t    exports.DoCheck = DoCheck;\n\t    exports.OnChanges = OnChanges;\n\t    exports.OnDestroy = OnDestroy;\n\t    exports.OnInit = OnInit;\n\t    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n\t    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n\t    exports.NgModule = NgModule;\n\t    exports.Class = Class;\n\t    exports.forwardRef = forwardRef;\n\t    exports.resolveForwardRef = resolveForwardRef;\n\t    exports.Injector = Injector;\n\t    exports.ReflectiveInjector = ReflectiveInjector;\n\t    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n\t    exports.ReflectiveKey = ReflectiveKey;\n\t    exports.OpaqueToken = OpaqueToken;\n\t    exports.Inject = Inject;\n\t    exports.Optional = Optional;\n\t    exports.Injectable = Injectable;\n\t    exports.Self = Self;\n\t    exports.SkipSelf = SkipSelf;\n\t    exports.Host = Host;\n\t    exports.NgZone = NgZone;\n\t    exports.RenderComponentType = RenderComponentType;\n\t    exports.Renderer = Renderer;\n\t    exports.RootRenderer = RootRenderer;\n\t    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n\t    exports.Compiler = Compiler;\n\t    exports.CompilerFactory = CompilerFactory;\n\t    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n\t    exports.ComponentFactory = ComponentFactory;\n\t    exports.ComponentRef = ComponentRef;\n\t    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n\t    exports.ElementRef = ElementRef;\n\t    exports.NgModuleFactory = NgModuleFactory;\n\t    exports.NgModuleRef = NgModuleRef;\n\t    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n\t    exports.getModuleFactory = getModuleFactory;\n\t    exports.QueryList = QueryList;\n\t    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n\t    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n\t    exports.TemplateRef = TemplateRef;\n\t    exports.ViewContainerRef = ViewContainerRef;\n\t    exports.EmbeddedViewRef = EmbeddedViewRef;\n\t    exports.ViewRef = ViewRef;\n\t    exports.ChangeDetectorRef = ChangeDetectorRef;\n\t    exports.CollectionChangeRecord = CollectionChangeRecord;\n\t    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n\t    exports.IterableDiffers = IterableDiffers;\n\t    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n\t    exports.KeyValueDiffers = KeyValueDiffers;\n\t    exports.SimpleChange = SimpleChange;\n\t    exports.WrappedValue = WrappedValue;\n\t    exports.platformCore = platformCore;\n\t    exports.__core_private__ = __core_private__;\n\t    exports.AUTO_STYLE = AUTO_STYLE;\n\t    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n\t    exports.AnimationStateMetadata = AnimationStateMetadata;\n\t    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n\t    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n\t    exports.AnimationMetadata = AnimationMetadata;\n\t    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n\t    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n\t    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n\t    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n\t    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n\t    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n\t    exports.animate = animate;\n\t    exports.group = group;\n\t    exports.sequence = sequence;\n\t    exports.style = style;\n\t    exports.state = state;\n\t    exports.keyframes = keyframes;\n\t    exports.transition = transition;\n\t    exports.trigger = trigger;\n\t\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(4);\n\tvar Subscriber_1 = __webpack_require__(7);\n\tvar Subscription_1 = __webpack_require__(9);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(18);\n\tvar SubjectSubscription_1 = __webpack_require__(19);\n\tvar rxSubscriber_1 = __webpack_require__(16);\n\t/**\n\t * @class SubjectSubscriber<T>\n\t */\n\tvar SubjectSubscriber = (function (_super) {\n\t    __extends(SubjectSubscriber, _super);\n\t    function SubjectSubscriber(destination) {\n\t        _super.call(this, destination);\n\t        this.destination = destination;\n\t    }\n\t    return SubjectSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.SubjectSubscriber = SubjectSubscriber;\n\t/**\n\t * @class Subject<T>\n\t */\n\tvar Subject = (function (_super) {\n\t    __extends(Subject, _super);\n\t    function Subject() {\n\t        _super.call(this);\n\t        this.observers = [];\n\t        this.closed = false;\n\t        this.isStopped = false;\n\t        this.hasError = false;\n\t        this.thrownError = null;\n\t    }\n\t    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n\t        return new SubjectSubscriber(this);\n\t    };\n\t    Subject.prototype.lift = function (operator) {\n\t        var subject = new AnonymousSubject(this, this);\n\t        subject.operator = operator;\n\t        return subject;\n\t    };\n\t    Subject.prototype.next = function (value) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        if (!this.isStopped) {\n\t            var observers = this.observers;\n\t            var len = observers.length;\n\t            var copy = observers.slice();\n\t            for (var i = 0; i < len; i++) {\n\t                copy[i].next(value);\n\t            }\n\t        }\n\t    };\n\t    Subject.prototype.error = function (err) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.hasError = true;\n\t        this.thrownError = err;\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].error(err);\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.complete = function () {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].complete();\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.unsubscribe = function () {\n\t        this.isStopped = true;\n\t        this.closed = true;\n\t        this.observers = null;\n\t    };\n\t    Subject.prototype._subscribe = function (subscriber) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else if (this.hasError) {\n\t            subscriber.error(this.thrownError);\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else if (this.isStopped) {\n\t            subscriber.complete();\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else {\n\t            this.observers.push(subscriber);\n\t            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n\t        }\n\t    };\n\t    Subject.prototype.asObservable = function () {\n\t        var observable = new Observable_1.Observable();\n\t        observable.source = this;\n\t        return observable;\n\t    };\n\t    Subject.create = function (destination, source) {\n\t        return new AnonymousSubject(destination, source);\n\t    };\n\t    return Subject;\n\t}(Observable_1.Observable));\n\texports.Subject = Subject;\n\t/**\n\t * @class AnonymousSubject<T>\n\t */\n\tvar AnonymousSubject = (function (_super) {\n\t    __extends(AnonymousSubject, _super);\n\t    function AnonymousSubject(destination, source) {\n\t        _super.call(this);\n\t        this.destination = destination;\n\t        this.source = source;\n\t    }\n\t    AnonymousSubject.prototype.next = function (value) {\n\t        var destination = this.destination;\n\t        if (destination && destination.next) {\n\t            destination.next(value);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.error = function (err) {\n\t        var destination = this.destination;\n\t        if (destination && destination.error) {\n\t            this.destination.error(err);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.complete = function () {\n\t        var destination = this.destination;\n\t        if (destination && destination.complete) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    AnonymousSubject.prototype._subscribe = function (subscriber) {\n\t        var source = this.source;\n\t        if (source) {\n\t            return this.source.subscribe(subscriber);\n\t        }\n\t        else {\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t    };\n\t    return AnonymousSubject;\n\t}(Subject));\n\texports.AnonymousSubject = AnonymousSubject;\n\t//# sourceMappingURL=Subject.js.map\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tvar toSubscriber_1 = __webpack_require__(6);\n\tvar observable_1 = __webpack_require__(17);\n\t/**\n\t * A representation of any set of values over any amount of time. This the most basic building block\n\t * of RxJS.\n\t *\n\t * @class Observable<T>\n\t */\n\tvar Observable = (function () {\n\t    /**\n\t     * @constructor\n\t     * @param {Function} subscribe the function that is  called when the Observable is\n\t     * initially subscribed to. This function is given a Subscriber, to which new values\n\t     * can be `next`ed, or an `error` method can be called to raise an error, or\n\t     * `complete` can be called to notify of a successful completion.\n\t     */\n\t    function Observable(subscribe) {\n\t        this._isScalar = false;\n\t        if (subscribe) {\n\t            this._subscribe = subscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Creates a new Observable, with this Observable as the source, and the passed\n\t     * operator defined as the new observable's operator.\n\t     * @method lift\n\t     * @param {Operator} operator the operator defining the operation to take on the observable\n\t     * @return {Observable} a new observable with the Operator applied\n\t     */\n\t    Observable.prototype.lift = function (operator) {\n\t        var observable = new Observable();\n\t        observable.source = this;\n\t        observable.operator = operator;\n\t        return observable;\n\t    };\n\t    /**\n\t     * Registers handlers for handling emitted values, error and completions from the observable, and\n\t     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n\t     * @method subscribe\n\t     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n\t     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n\t     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n\t     *  the error will be thrown as unhandled\n\t     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n\t     * @return {ISubscription} a subscription reference to the registered handlers\n\t     */\n\t    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n\t        var operator = this.operator;\n\t        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n\t        if (operator) {\n\t            operator.call(sink, this);\n\t        }\n\t        else {\n\t            sink.add(this._subscribe(sink));\n\t        }\n\t        if (sink.syncErrorThrowable) {\n\t            sink.syncErrorThrowable = false;\n\t            if (sink.syncErrorThrown) {\n\t                throw sink.syncErrorValue;\n\t            }\n\t        }\n\t        return sink;\n\t    };\n\t    /**\n\t     * @method forEach\n\t     * @param {Function} next a handler for each value emitted by the observable\n\t     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n\t     * @return {Promise} a promise that either resolves on observable completion or\n\t     *  rejects with the handled error\n\t     */\n\t    Observable.prototype.forEach = function (next, PromiseCtor) {\n\t        var _this = this;\n\t        if (!PromiseCtor) {\n\t            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n\t                PromiseCtor = root_1.root.Rx.config.Promise;\n\t            }\n\t            else if (root_1.root.Promise) {\n\t                PromiseCtor = root_1.root.Promise;\n\t            }\n\t        }\n\t        if (!PromiseCtor) {\n\t            throw new Error('no Promise impl found');\n\t        }\n\t        return new PromiseCtor(function (resolve, reject) {\n\t            var subscription = _this.subscribe(function (value) {\n\t                if (subscription) {\n\t                    // if there is a subscription, then we can surmise\n\t                    // the next handling is asynchronous. Any errors thrown\n\t                    // need to be rejected explicitly and unsubscribe must be\n\t                    // called manually\n\t                    try {\n\t                        next(value);\n\t                    }\n\t                    catch (err) {\n\t                        reject(err);\n\t                        subscription.unsubscribe();\n\t                    }\n\t                }\n\t                else {\n\t                    // if there is NO subscription, then we're getting a nexted\n\t                    // value synchronously during subscription. We can just call it.\n\t                    // If it errors, Observable's `subscribe` will ensure the\n\t                    // unsubscription logic is called, then synchronously rethrow the error.\n\t                    // After that, Promise will trap the error and send it\n\t                    // down the rejection path.\n\t                    next(value);\n\t                }\n\t            }, reject, resolve);\n\t        });\n\t    };\n\t    Observable.prototype._subscribe = function (subscriber) {\n\t        return this.source.subscribe(subscriber);\n\t    };\n\t    /**\n\t     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n\t     * @method Symbol.observable\n\t     * @return {Observable} this instance of the observable\n\t     */\n\t    Observable.prototype[observable_1.$$observable] = function () {\n\t        return this;\n\t    };\n\t    // HACK: Since TypeScript inherits static properties too, we have to\n\t    // fight against TypeScript here so Subject can have a different static create signature\n\t    /**\n\t     * Creates a new cold Observable by calling the Observable constructor\n\t     * @static true\n\t     * @owner Observable\n\t     * @method create\n\t     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n\t     * @return {Observable} a new cold observable\n\t     */\n\t    Observable.create = function (subscribe) {\n\t        return new Observable(subscribe);\n\t    };\n\t    return Observable;\n\t}());\n\texports.Observable = Observable;\n\t//# sourceMappingURL=Observable.js.map\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\tvar objectTypes = {\n\t    'boolean': false,\n\t    'function': true,\n\t    'object': true,\n\t    'number': false,\n\t    'string': false,\n\t    'undefined': false\n\t};\n\texports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\n\tvar freeGlobal = objectTypes[typeof global] && global;\n\tif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n\t    exports.root = freeGlobal;\n\t}\n\t//# sourceMappingURL=root.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Subscriber_1 = __webpack_require__(7);\n\tvar rxSubscriber_1 = __webpack_require__(16);\n\tfunction toSubscriber(nextOrObserver, error, complete) {\n\t    if (nextOrObserver) {\n\t        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n\t            return nextOrObserver;\n\t        }\n\t        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n\t            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n\t        }\n\t    }\n\t    if (!nextOrObserver && !error && !complete) {\n\t        return new Subscriber_1.Subscriber();\n\t    }\n\t    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n\t}\n\texports.toSubscriber = toSubscriber;\n\t//# sourceMappingURL=toSubscriber.js.map\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar isFunction_1 = __webpack_require__(8);\n\tvar Subscription_1 = __webpack_require__(9);\n\tvar Observer_1 = __webpack_require__(15);\n\tvar rxSubscriber_1 = __webpack_require__(16);\n\t/**\n\t * Implements the {@link Observer} interface and extends the\n\t * {@link Subscription} class. While the {@link Observer} is the public API for\n\t * consuming the values of an {@link Observable}, all Observers get converted to\n\t * a Subscriber, in order to provide Subscription-like capabilities such as\n\t * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n\t * implementing operators, but it is rarely used as a public API.\n\t *\n\t * @class Subscriber<T>\n\t */\n\tvar Subscriber = (function (_super) {\n\t    __extends(Subscriber, _super);\n\t    /**\n\t     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n\t     * defined Observer or a `next` callback function.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     */\n\t    function Subscriber(destinationOrNext, error, complete) {\n\t        _super.call(this);\n\t        this.syncErrorValue = null;\n\t        this.syncErrorThrown = false;\n\t        this.syncErrorThrowable = false;\n\t        this.isStopped = false;\n\t        switch (arguments.length) {\n\t            case 0:\n\t                this.destination = Observer_1.empty;\n\t                break;\n\t            case 1:\n\t                if (!destinationOrNext) {\n\t                    this.destination = Observer_1.empty;\n\t                    break;\n\t                }\n\t                if (typeof destinationOrNext === 'object') {\n\t                    if (destinationOrNext instanceof Subscriber) {\n\t                        this.destination = destinationOrNext;\n\t                        this.destination.add(this);\n\t                    }\n\t                    else {\n\t                        this.syncErrorThrowable = true;\n\t                        this.destination = new SafeSubscriber(this, destinationOrNext);\n\t                    }\n\t                    break;\n\t                }\n\t            default:\n\t                this.syncErrorThrowable = true;\n\t                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n\t                break;\n\t        }\n\t    }\n\t    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n\t    /**\n\t     * A static factory for a Subscriber, given a (potentially partial) definition\n\t     * of an Observer.\n\t     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n\t     * Observer represented by the given arguments.\n\t     */\n\t    Subscriber.create = function (next, error, complete) {\n\t        var subscriber = new Subscriber(next, error, complete);\n\t        subscriber.syncErrorThrowable = false;\n\t        return subscriber;\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `next` from\n\t     * the Observable, with a value. The Observable may call this method 0 or more\n\t     * times.\n\t     * @param {T} [value] The `next` value.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.next = function (value) {\n\t        if (!this.isStopped) {\n\t            this._next(value);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `error` from\n\t     * the Observable, with an attached {@link Error}. Notifies the Observer that\n\t     * the Observable has experienced an error condition.\n\t     * @param {any} [err] The `error` exception.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._error(err);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive a valueless notification of type\n\t     * `complete` from the Observable. Notifies the Observer that the Observable\n\t     * has finished sending push-based notifications.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._complete();\n\t        }\n\t    };\n\t    Subscriber.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.isStopped = true;\n\t        _super.prototype.unsubscribe.call(this);\n\t    };\n\t    Subscriber.prototype._next = function (value) {\n\t        this.destination.next(value);\n\t    };\n\t    Subscriber.prototype._error = function (err) {\n\t        this.destination.error(err);\n\t        this.unsubscribe();\n\t    };\n\t    Subscriber.prototype._complete = function () {\n\t        this.destination.complete();\n\t        this.unsubscribe();\n\t    };\n\t    return Subscriber;\n\t}(Subscription_1.Subscription));\n\texports.Subscriber = Subscriber;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SafeSubscriber = (function (_super) {\n\t    __extends(SafeSubscriber, _super);\n\t    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n\t        _super.call(this);\n\t        this._parent = _parent;\n\t        var next;\n\t        var context = this;\n\t        if (isFunction_1.isFunction(observerOrNext)) {\n\t            next = observerOrNext;\n\t        }\n\t        else if (observerOrNext) {\n\t            context = observerOrNext;\n\t            next = observerOrNext.next;\n\t            error = observerOrNext.error;\n\t            complete = observerOrNext.complete;\n\t            if (isFunction_1.isFunction(context.unsubscribe)) {\n\t                this.add(context.unsubscribe.bind(context));\n\t            }\n\t            context.unsubscribe = this.unsubscribe.bind(this);\n\t        }\n\t        this._context = context;\n\t        this._next = next;\n\t        this._error = error;\n\t        this._complete = complete;\n\t    }\n\t    SafeSubscriber.prototype.next = function (value) {\n\t        if (!this.isStopped && this._next) {\n\t            var _parent = this._parent;\n\t            if (!_parent.syncErrorThrowable) {\n\t                this.__tryOrUnsub(this._next, value);\n\t            }\n\t            else if (this.__tryOrSetError(_parent, this._next, value)) {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            var _parent = this._parent;\n\t            if (this._error) {\n\t                if (!_parent.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parent, this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else if (!_parent.syncErrorThrowable) {\n\t                this.unsubscribe();\n\t                throw err;\n\t            }\n\t            else {\n\t                _parent.syncErrorValue = err;\n\t                _parent.syncErrorThrown = true;\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            var _parent = this._parent;\n\t            if (this._complete) {\n\t                if (!_parent.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._complete);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parent, this._complete);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            this.unsubscribe();\n\t            throw err;\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            parent.syncErrorValue = err;\n\t            parent.syncErrorThrown = true;\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    SafeSubscriber.prototype._unsubscribe = function () {\n\t        var _parent = this._parent;\n\t        this._context = null;\n\t        this._parent = null;\n\t        _parent.unsubscribe();\n\t    };\n\t    return SafeSubscriber;\n\t}(Subscriber));\n\t//# sourceMappingURL=Subscriber.js.map\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isFunction(x) {\n\t    return typeof x === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t//# sourceMappingURL=isFunction.js.map\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar isArray_1 = __webpack_require__(10);\n\tvar isObject_1 = __webpack_require__(11);\n\tvar isFunction_1 = __webpack_require__(8);\n\tvar tryCatch_1 = __webpack_require__(12);\n\tvar errorObject_1 = __webpack_require__(13);\n\tvar UnsubscriptionError_1 = __webpack_require__(14);\n\t/**\n\t * Represents a disposable resource, such as the execution of an Observable. A\n\t * Subscription has one important method, `unsubscribe`, that takes no argument\n\t * and just disposes the resource held by the subscription.\n\t *\n\t * Additionally, subscriptions may be grouped together through the `add()`\n\t * method, which will attach a child Subscription to the current Subscription.\n\t * When a Subscription is unsubscribed, all its children (and its grandchildren)\n\t * will be unsubscribed as well.\n\t *\n\t * @class Subscription\n\t */\n\tvar Subscription = (function () {\n\t    /**\n\t     * @param {function(): void} [unsubscribe] A function describing how to\n\t     * perform the disposal of resources when the `unsubscribe` method is called.\n\t     */\n\t    function Subscription(unsubscribe) {\n\t        /**\n\t         * A flag to indicate whether this Subscription has already been unsubscribed.\n\t         * @type {boolean}\n\t         */\n\t        this.closed = false;\n\t        if (unsubscribe) {\n\t            this._unsubscribe = unsubscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Disposes the resources held by the subscription. May, for instance, cancel\n\t     * an ongoing Observable execution or cancel any other type of work that\n\t     * started when the Subscription was created.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.unsubscribe = function () {\n\t        var hasErrors = false;\n\t        var errors;\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n\t        this._subscriptions = null;\n\t        if (isFunction_1.isFunction(_unsubscribe)) {\n\t            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n\t            if (trial === errorObject_1.errorObject) {\n\t                hasErrors = true;\n\t                (errors = errors || []).push(errorObject_1.errorObject.e);\n\t            }\n\t        }\n\t        if (isArray_1.isArray(_subscriptions)) {\n\t            var index = -1;\n\t            var len = _subscriptions.length;\n\t            while (++index < len) {\n\t                var sub = _subscriptions[index];\n\t                if (isObject_1.isObject(sub)) {\n\t                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n\t                    if (trial === errorObject_1.errorObject) {\n\t                        hasErrors = true;\n\t                        errors = errors || [];\n\t                        var err = errorObject_1.errorObject.e;\n\t                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n\t                            errors = errors.concat(err.errors);\n\t                        }\n\t                        else {\n\t                            errors.push(err);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (hasErrors) {\n\t            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n\t        }\n\t    };\n\t    /**\n\t     * Adds a tear down to be called during the unsubscribe() of this\n\t     * Subscription.\n\t     *\n\t     * If the tear down being added is a subscription that is already\n\t     * unsubscribed, is the same reference `add` is being called on, or is\n\t     * `Subscription.EMPTY`, it will not be added.\n\t     *\n\t     * If this subscription is already in an `closed` state, the passed\n\t     * tear down logic will be executed immediately.\n\t     *\n\t     * @param {TeardownLogic} teardown The additional logic to execute on\n\t     * teardown.\n\t     * @return {Subscription} Returns the Subscription used or created to be\n\t     * added to the inner subscriptions list. This Subscription can be used with\n\t     * `remove()` to remove the passed teardown logic from the inner subscriptions\n\t     * list.\n\t     */\n\t    Subscription.prototype.add = function (teardown) {\n\t        if (!teardown || (teardown === Subscription.EMPTY)) {\n\t            return Subscription.EMPTY;\n\t        }\n\t        if (teardown === this) {\n\t            return this;\n\t        }\n\t        var sub = teardown;\n\t        switch (typeof teardown) {\n\t            case 'function':\n\t                sub = new Subscription(teardown);\n\t            case 'object':\n\t                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n\t                    break;\n\t                }\n\t                else if (this.closed) {\n\t                    sub.unsubscribe();\n\t                }\n\t                else {\n\t                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n\t                }\n\t                break;\n\t            default:\n\t                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n\t        }\n\t        return sub;\n\t    };\n\t    /**\n\t     * Removes a Subscription from the internal list of subscriptions that will\n\t     * unsubscribe during the unsubscribe process of this Subscription.\n\t     * @param {Subscription} subscription The subscription to remove.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.remove = function (subscription) {\n\t        // HACK: This might be redundant because of the logic in `add()`\n\t        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n\t            return;\n\t        }\n\t        var subscriptions = this._subscriptions;\n\t        if (subscriptions) {\n\t            var subscriptionIndex = subscriptions.indexOf(subscription);\n\t            if (subscriptionIndex !== -1) {\n\t                subscriptions.splice(subscriptionIndex, 1);\n\t            }\n\t        }\n\t    };\n\t    Subscription.EMPTY = (function (empty) {\n\t        empty.closed = true;\n\t        return empty;\n\t    }(new Subscription()));\n\t    return Subscription;\n\t}());\n\texports.Subscription = Subscription;\n\t//# sourceMappingURL=Subscription.js.map\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\t//# sourceMappingURL=isArray.js.map\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isObject(x) {\n\t    return x != null && typeof x === 'object';\n\t}\n\texports.isObject = isObject;\n\t//# sourceMappingURL=isObject.js.map\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar errorObject_1 = __webpack_require__(13);\n\tvar tryCatchTarget;\n\tfunction tryCatcher() {\n\t    try {\n\t        return tryCatchTarget.apply(this, arguments);\n\t    }\n\t    catch (e) {\n\t        errorObject_1.errorObject.e = e;\n\t        return errorObject_1.errorObject;\n\t    }\n\t}\n\tfunction tryCatch(fn) {\n\t    tryCatchTarget = fn;\n\t    return tryCatcher;\n\t}\n\texports.tryCatch = tryCatch;\n\t;\n\t//# sourceMappingURL=tryCatch.js.map\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// typeof any so that it we don't have to cast when comparing a result to the error object\n\texports.errorObject = { e: {} };\n\t//# sourceMappingURL=errorObject.js.map\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when one or more errors have occurred during the\n\t * `unsubscribe` of a {@link Subscription}.\n\t */\n\tvar UnsubscriptionError = (function (_super) {\n\t    __extends(UnsubscriptionError, _super);\n\t    function UnsubscriptionError(errors) {\n\t        _super.call(this);\n\t        this.errors = errors;\n\t        var err = Error.call(this, errors ?\n\t            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n\t        this.name = err.name = 'UnsubscriptionError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return UnsubscriptionError;\n\t}(Error));\n\texports.UnsubscriptionError = UnsubscriptionError;\n\t//# sourceMappingURL=UnsubscriptionError.js.map\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.empty = {\n\t    closed: true,\n\t    next: function (value) { },\n\t    error: function (err) { throw err; },\n\t    complete: function () { }\n\t};\n\t//# sourceMappingURL=Observer.js.map\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tvar Symbol = root_1.root.Symbol;\n\texports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n\t    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\t//# sourceMappingURL=rxSubscriber.js.map\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tfunction getSymbolObservable(context) {\n\t    var $$observable;\n\t    var Symbol = context.Symbol;\n\t    if (typeof Symbol === 'function') {\n\t        if (Symbol.observable) {\n\t            $$observable = Symbol.observable;\n\t        }\n\t        else {\n\t            $$observable = Symbol('observable');\n\t            Symbol.observable = $$observable;\n\t        }\n\t    }\n\t    else {\n\t        $$observable = '@@observable';\n\t    }\n\t    return $$observable;\n\t}\n\texports.getSymbolObservable = getSymbolObservable;\n\texports.$$observable = getSymbolObservable(root_1.root);\n\t//# sourceMappingURL=observable.js.map\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when an action is invalid because the object has been\n\t * unsubscribed.\n\t *\n\t * @see {@link Subject}\n\t * @see {@link BehaviorSubject}\n\t *\n\t * @class ObjectUnsubscribedError\n\t */\n\tvar ObjectUnsubscribedError = (function (_super) {\n\t    __extends(ObjectUnsubscribedError, _super);\n\t    function ObjectUnsubscribedError() {\n\t        var err = _super.call(this, 'object unsubscribed');\n\t        this.name = err.name = 'ObjectUnsubscribedError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return ObjectUnsubscribedError;\n\t}(Error));\n\texports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n\t//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscription_1 = __webpack_require__(9);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SubjectSubscription = (function (_super) {\n\t    __extends(SubjectSubscription, _super);\n\t    function SubjectSubscription(subject, subscriber) {\n\t        _super.call(this);\n\t        this.subject = subject;\n\t        this.subscriber = subscriber;\n\t        this.closed = false;\n\t    }\n\t    SubjectSubscription.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var subject = this.subject;\n\t        var observers = subject.observers;\n\t        this.subject = null;\n\t        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n\t            return;\n\t        }\n\t        var subscriberIndex = observers.indexOf(this.subscriber);\n\t        if (subscriberIndex !== -1) {\n\t            observers.splice(subscriberIndex, 1);\n\t        }\n\t    };\n\t    return SubjectSubscription;\n\t}(Subscription_1.Subscription));\n\texports.SubjectSubscription = SubjectSubscription;\n\t//# sourceMappingURL=SubjectSubscription.js.map\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/// <reference path=\"../../node_modules/retyped-extjs-tsd-ambient/ExtJS.d.ts\" />\n\tvar core_1 = __webpack_require__(2);\n\tvar extbase = (function () {\n\t    function extbase(myElement, componentFactoryResolver, viewContainerRef, metaData) {\n\t        var _this = this;\n\t        this.myElement = myElement;\n\t        this.componentFactoryResolver = componentFactoryResolver;\n\t        this.viewContainerRef = viewContainerRef;\n\t        this.metaData = metaData;\n\t        this.listeners = {};\n\t        this.xtype = metaData.XTYPE;\n\t        this.inputs = metaData.INPUTNAMES;\n\t        this.rootElement = myElement.nativeElement;\n\t        var me = this;\n\t        this['ready'] = new core_1.EventEmitter();\n\t        metaData.OUTPUTS.forEach(function (event, n) {\n\t            _this[event.name] = new core_1.EventEmitter();\n\t        });\n\t    }\n\t    extbase.prototype.AfterContentInit = function (ExtJSBaseRef) {\n\t        var extJSRootComponentRef = ExtJSBaseRef.first;\n\t        var firstExtJS = extJSRootComponentRef['_element'].component.extjsObject;\n\t        firstExtJS.setRenderTo(this.myElement.nativeElement);\n\t        var ExtJSComponentRefArray = ExtJSBaseRef.toArray();\n\t        var arrayLength = ExtJSComponentRefArray.length;\n\t        for (var i = 1; i < arrayLength; i++) {\n\t            var obj = ExtJSComponentRefArray[i]['_element'].component.extjsObject;\n\t            firstExtJS.add(obj);\n\t        }\n\t    };\n\t    extbase.prototype.OnInit = function (dynamicTarget, metadata) {\n\t        var me = this;\n\t        var o = {};\n\t        o.listeners = {};\n\t        var eventtasks = this.myElement.nativeElement.__zone_symbol__eventTasks;\n\t        if (eventtasks != undefined) {\n\t            eventtasks.forEach(function (eventtask, index, array) {\n\t                var eventIndex = metadata.OUTPUTNAMES.indexOf(eventtask.data.eventName);\n\t                if (eventIndex != -1) {\n\t                    var eventname = eventtask.data.eventName;\n\t                    var eventparameters = metadata.OUTPUTS[eventIndex].parameters;\n\t                    o.listeners[eventname] = function () {\n\t                        var parameters = eventparameters;\n\t                        var parms = parameters.split(',');\n\t                        var args = Array.prototype.slice.call(arguments);\n\t                        var o = {};\n\t                        for (var i_1 = 0, j = parms.length; i_1 < j; i_1++) {\n\t                            o[parms[i_1]] = args[i_1];\n\t                        }\n\t                        me[eventname].next(o);\n\t                    };\n\t                }\n\t            });\n\t        }\n\t        o.xtype = me.xtype;\n\t        if (me.xtype != '') {\n\t            o.xtype = me.xtype;\n\t        }\n\t        for (var i = 0; i < me.metaData.INPUTNAMES.length; i++) {\n\t            var prop = me.metaData.INPUTNAMES[i];\n\t            //need to handle listeners coming in here\n\t            if (me[prop] != undefined &&\n\t                prop != 'listeners' &&\n\t                prop != 'config' &&\n\t                prop != 'nofit') {\n\t                o[prop] = me[prop];\n\t            }\n\t            ;\n\t        }\n\t        if ('true' == me.fit) {\n\t            o.top = 0,\n\t                o.left = 0,\n\t                o.width = '100%',\n\t                o.height = '100%';\n\t        }\n\t        if (me.config !== {}) {\n\t            Ext.apply(o, me.config);\n\t        }\n\t        ;\n\t        me.extjsObject = Ext.create(o);\n\t        var componentFactory;\n\t        var type;\n\t        if (me.component != undefined) {\n\t            type = me.component;\n\t            componentFactory = me.componentFactoryResolver.resolveComponentFactory(type);\n\t            me.componentRef = dynamicTarget.createComponent(componentFactory);\n\t            //me.componentRef.instance['buttontext'] = 'testing';\n\t            var node = me.extjsObject.innerElement.dom;\n\t            node.appendChild(me.componentRef['_hostElement'].nativeElement);\n\t        }\n\t        if (me.parent != undefined) {\n\t            me.parent.insert(0, me.extjsObject);\n\t        }\n\t        me.ready.next(me);\n\t    };\n\t    return extbase;\n\t}());\n\texports.extbase = extbase;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar ext_base_1 = __webpack_require__(20);\n\t// Ext Class - Ext.grid.Grid\n\tvar extgridMetaData = (function () {\n\t    function extgridMetaData() {\n\t    }\n\t    extgridMetaData.XTYPE = 'grid';\n\t    extgridMetaData.INPUTNAMES = [\n\t        'activeItem',\n\t        'allowDeselect',\n\t        'alwaysOnTop',\n\t        'autoDestroy',\n\t        'axisLock',\n\t        'baseCls',\n\t        'bind',\n\t        'border',\n\t        'bottom',\n\t        'bufferSize',\n\t        'cardSwitchAnimation',\n\t        'centered',\n\t        'cls',\n\t        'columns',\n\t        'container',\n\t        'contentEl',\n\t        'control',\n\t        'controller',\n\t        'data',\n\t        'defaultListenerScope',\n\t        'defaults',\n\t        'defaultType',\n\t        'deferEmptyText',\n\t        'deselectOnContainerClick',\n\t        'disabled',\n\t        'disableSelection',\n\t        'disclosureProperty',\n\t        'docked',\n\t        'draggable',\n\t        'emptyText',\n\t        'enterAnimation',\n\t        'exitAnimation',\n\t        'flex',\n\t        'floated',\n\t        'fullscreen',\n\t        'grouped',\n\t        'height',\n\t        'hidden',\n\t        'hideAnimation',\n\t        'hideHeaders',\n\t        'hideOnMaskTap',\n\t        'html',\n\t        'id',\n\t        'indexBar',\n\t        'infinite',\n\t        'inline',\n\t        'itemCls',\n\t        'itemConfig',\n\t        'itemHeight',\n\t        'itemId',\n\t        'itemMap',\n\t        'items',\n\t        'itemTpl',\n\t        'keyMap',\n\t        'keyMapEnabled',\n\t        'keyMapTarget',\n\t        'lastFocused',\n\t        'lastSelected',\n\t        'layout',\n\t        'left',\n\t        'listeners',\n\t        'loadingText',\n\t        'locked',\n\t        'manageBorders',\n\t        'margin',\n\t        'masked',\n\t        'maxHeight',\n\t        'maxItemCache',\n\t        'maxWidth',\n\t        'minHeight',\n\t        'minWidth',\n\t        'modal',\n\t        'mode',\n\t        'onItemDisclosure',\n\t        'padding',\n\t        'pinHeaders',\n\t        'pinnedHeader',\n\t        'plugins',\n\t        'pressedDelay',\n\t        'preventSelectionOnDisclose',\n\t        'publishes',\n\t        'record',\n\t        'reference',\n\t        'referenceHolder',\n\t        'refreshHeightOnUpdate',\n\t        'relative',\n\t        'renderTo',\n\t        'right',\n\t        'rowLines',\n\t        'scrollable',\n\t        'scrollDock',\n\t        'scrollToTopOnRefresh',\n\t        'selection',\n\t        'session',\n\t        'shadow',\n\t        'shim',\n\t        'showAnimation',\n\t        'store',\n\t        'striped',\n\t        'style',\n\t        'styleHtmlCls',\n\t        'styleHtmlContent',\n\t        'title',\n\t        'toFrontOnShow',\n\t        'tooltip',\n\t        'top',\n\t        'totalColumnWidth',\n\t        'touchAction',\n\t        'tpl',\n\t        'tplWriteMode',\n\t        'translatable',\n\t        'triggerCtEvent',\n\t        'triggerEvent',\n\t        'twoWayBindable',\n\t        'ui',\n\t        'useBodyElement',\n\t        'useComponents',\n\t        'userCls',\n\t        'useSimpleItems',\n\t        'variableHeights',\n\t        'viewModel',\n\t        'width',\n\t        'x',\n\t        'xtype',\n\t        'y',\n\t        'zIndex',\n\t        'fit',\n\t        'config'\n\t    ];\n\t    extgridMetaData.OUTPUTS = [\n\t        { name: 'activate', parameters: 'newActiveItem,grid,oldActiveItem' },\n\t        { name: 'add', parameters: '' },\n\t        { name: 'added', parameters: 'grid,container,index' },\n\t        { name: 'beforehide', parameters: 'grid' },\n\t        { name: 'beforeorientationchange', parameters: '' },\n\t        { name: 'beforeselectionchange', parameters: 'grid' },\n\t        { name: 'beforeshow', parameters: 'grid' },\n\t        { name: 'beforetofront', parameters: 'grid' },\n\t        { name: 'columnadd', parameters: 'grid,column,index' },\n\t        { name: 'columnhide', parameters: 'grid,column' },\n\t        { name: 'columnmove', parameters: 'grid,column,fromIndex,toIndex' },\n\t        { name: 'columnremove', parameters: 'grid,column' },\n\t        { name: 'columnresize', parameters: 'grid,column,width' },\n\t        { name: 'columnshow', parameters: 'grid,column' },\n\t        { name: 'columnsort', parameters: 'grid,column,direction' },\n\t        { name: 'containertap', parameters: '' },\n\t        { name: 'deactivate', parameters: 'oldActiveItem,grid,newActiveItem' },\n\t        { name: 'deselect', parameters: 'grid,record,supressed' },\n\t        { name: 'destroy', parameters: '' },\n\t        { name: 'disclose', parameters: 'grid,record,target,index,e' },\n\t        { name: 'erased', parameters: 'grid' },\n\t        { name: 'floatingchange', parameters: 'grid,positioned' },\n\t        { name: 'fullscreen', parameters: 'grid' },\n\t        { name: 'hide', parameters: 'grid' },\n\t        { name: 'initialize', parameters: 'grid' },\n\t        { name: 'itemdoubletap', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemmouseenter', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemmouseleave', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemsingletap', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemswipe', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemtap', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemtaphold', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemtouchend', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemtouchmove', parameters: 'grid,index,target,record,e' },\n\t        { name: 'itemtouchstart', parameters: 'grid,index,target,record,e' },\n\t        { name: 'move', parameters: '' },\n\t        { name: 'moved', parameters: 'grid,container,toIndex,fromIndex' },\n\t        { name: 'orientationchange', parameters: '' },\n\t        { name: 'painted', parameters: 'element' },\n\t        { name: 'positionedchange', parameters: 'grid,positioned' },\n\t        { name: 'refresh', parameters: 'grid' },\n\t        { name: 'remove', parameters: '' },\n\t        { name: 'removed', parameters: 'grid,container,index' },\n\t        { name: 'renderedchange', parameters: 'grid,item,rendered' },\n\t        { name: 'resize', parameters: 'element' },\n\t        { name: 'select', parameters: 'grid,record' },\n\t        { name: 'selectionchange', parameters: 'grid,records' },\n\t        { name: 'show', parameters: 'grid' },\n\t        { name: 'tofront', parameters: 'grid' },\n\t        { name: 'updatedata', parameters: 'grid,newData' },\n\t        { name: 'ready', parameters: '' }\n\t    ];\n\t    extgridMetaData.OUTPUTNAMES = [\n\t        'activate',\n\t        'add',\n\t        'added',\n\t        'beforehide',\n\t        'beforeorientationchange',\n\t        'beforeselectionchange',\n\t        'beforeshow',\n\t        'beforetofront',\n\t        'columnadd',\n\t        'columnhide',\n\t        'columnmove',\n\t        'columnremove',\n\t        'columnresize',\n\t        'columnshow',\n\t        'columnsort',\n\t        'containertap',\n\t        'deactivate',\n\t        'deselect',\n\t        'destroy',\n\t        'disclose',\n\t        'erased',\n\t        'floatingchange',\n\t        'fullscreen',\n\t        'hide',\n\t        'initialize',\n\t        'itemdoubletap',\n\t        'itemmouseenter',\n\t        'itemmouseleave',\n\t        'itemsingletap',\n\t        'itemswipe',\n\t        'itemtap',\n\t        'itemtaphold',\n\t        'itemtouchend',\n\t        'itemtouchmove',\n\t        'itemtouchstart',\n\t        'move',\n\t        'moved',\n\t        'orientationchange',\n\t        'painted',\n\t        'positionedchange',\n\t        'refresh',\n\t        'remove',\n\t        'removed',\n\t        'renderedchange',\n\t        'resize',\n\t        'select',\n\t        'selectionchange',\n\t        'show',\n\t        'tofront',\n\t        'updatedata',\n\t        'ready'\n\t    ];\n\t    return extgridMetaData;\n\t}());\n\tvar extgrid = (function (_super) {\n\t    __extends(extgrid, _super);\n\t    function extgrid(eRef, resolver, vcRef) {\n\t        _super.call(this, eRef, resolver, vcRef, extgridMetaData);\n\t    }\n\t    extgrid.prototype.ngAfterContentInit = function () { this.AfterContentInit(this.extbaseRef); };\n\t    extgrid.prototype.ngOnInit = function () { this.OnInit(this.dynamicRef, extgridMetaData); };\n\t    __decorate([\n\t        core_1.ContentChildren(ext_base_1.extbase, { read: core_1.ViewContainerRef }), \n\t        __metadata('design:type', core_1.QueryList)\n\t    ], extgrid.prototype, \"extbaseRef\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('dynamic', { read: core_1.ViewContainerRef }), \n\t        __metadata('design:type', core_1.ViewContainerRef)\n\t    ], extgrid.prototype, \"dynamicRef\", void 0);\n\t    extgrid = __decorate([\n\t        core_1.Component({\n\t            selector: 'ext-' + extgridMetaData.XTYPE,\n\t            inputs: extgridMetaData.INPUTNAMES,\n\t            outputs: extgridMetaData.OUTPUTNAMES,\n\t            providers: [{ provide: ext_base_1.extbase, useExisting: core_1.forwardRef(function () { return extgrid; }) }],\n\t            template: '<template #dynamic></template>'\n\t        }), \n\t        __metadata('design:paramtypes', [core_1.ElementRef, core_1.ComponentFactoryResolver, core_1.ViewContainerRef])\n\t    ], extgrid);\n\t    return extgrid;\n\t}(ext_base_1.extbase));\n\texports.extgrid = extgrid;\n\n\n/***/ }\n/******/ ])));\n\n\n/** WEBPACK FOOTER **\n ** angular2-extjs.3fa5c7271edb8fe4ca71.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tvar _m = moreModules[moduleId];\n\n \t\t\t// Check if module is deduplicated\n \t\t\tswitch(typeof _m) {\n \t\t\tcase \"object\":\n \t\t\t\t// Module can be created from a template\n \t\t\t\tmodules[moduleId] = (function(_m) {\n \t\t\t\t\tvar args = _m.slice(1), templateId = _m[0];\n \t\t\t\t\treturn function (a,b,c) {\n \t\t\t\t\t\tmodules[templateId].apply(this, [a,b,c].concat(args));\n \t\t\t\t\t};\n \t\t\t\t}(_m));\n \t\t\t\tbreak;\n \t\t\tcase \"function\":\n \t\t\t\t// Normal module\n \t\t\t\tmodules[moduleId] = _m;\n \t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\t// Module is a copy of another module\n \t\t\t\tmodules[moduleId] = modules[_m];\n \t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n \t\tif(moreModules[0]) {\n \t\t\tinstalledModules[0] = 0;\n \t\t\treturn __webpack_require__(0);\n \t\t}\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + \"3fa5c7271edb8fe4ca71\" + \".chunk.js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3fa5c7271edb8fe4ca71\n **/","import '../angular2-extjs/ext.button';\nimport '../angular2-extjs/ext.grid';\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/webpack/angular2-extjs.ts\n **/","import {Component,ViewChild,ElementRef,ComponentFactoryResolver,ViewContainerRef,forwardRef,ContentChildren,QueryList} from '@angular/core';\nimport { extbase } from './ext.base';\n// Ext Class - Ext.Button\nclass extbuttonMetaData {\n\tpublic static XTYPE: string = 'button';\n\tpublic static INPUTNAMES: string[] = [\n\t\t'allowDepress',\n\t\t'alwaysOnTop',\n\t\t'autoEvent',\n\t\t'axisLock',\n\t\t'badgeCls',\n\t\t'badgeText',\n\t\t'baseCls',\n\t\t'bind',\n\t\t'border',\n\t\t'bottom',\n\t\t'centered',\n\t\t'cls',\n\t\t'contentEl',\n\t\t'controller',\n\t\t'data',\n\t\t'defaultListenerScope',\n\t\t'disabled',\n\t\t'docked',\n\t\t'draggable',\n\t\t'enableToggle',\n\t\t'enterAnimation',\n\t\t'exitAnimation',\n\t\t'flex',\n\t\t'floated',\n\t\t'fullscreen',\n\t\t'handler',\n\t\t'hasBadgeCls',\n\t\t'hasLabelCls',\n\t\t'height',\n\t\t'hidden',\n\t\t'hideAnimation',\n\t\t'hideOnMaskTap',\n\t\t'html',\n\t\t'icon',\n\t\t'iconAlign',\n\t\t'iconCls',\n\t\t'id',\n\t\t'itemId',\n\t\t'keyMap',\n\t\t'keyMapEnabled',\n\t\t'keyMapTarget',\n\t\t'labelCls',\n\t\t'left',\n\t\t'listeners',\n\t\t'margin',\n\t\t'maxHeight',\n\t\t'maxWidth',\n\t\t'minHeight',\n\t\t'minWidth',\n\t\t'modal',\n\t\t'padding',\n\t\t'plugins',\n\t\t'pressed',\n\t\t'pressedDelay',\n\t\t'pressingCls',\n\t\t'pressingCls',\n\t\t'publishes',\n\t\t'record',\n\t\t'reference',\n\t\t'relative',\n\t\t'renderTo',\n\t\t'right',\n\t\t'scope',\n\t\t'scrollable',\n\t\t'session',\n\t\t'shadow',\n\t\t'shim',\n\t\t'showAnimation',\n\t\t'style',\n\t\t'styleHtmlCls',\n\t\t'styleHtmlContent',\n\t\t'text',\n\t\t'textAlign',\n\t\t'toFrontOnShow',\n\t\t'tooltip',\n\t\t'top',\n\t\t'touchAction',\n\t\t'tpl',\n\t\t'tplWriteMode',\n\t\t'translatable',\n\t\t'twoWayBindable',\n\t\t'ui',\n\t\t'useBodyElement',\n\t\t'userCls',\n\t\t'value',\n\t\t'viewModel',\n\t\t'width',\n\t\t'x',\n\t\t'xtype',\n\t\t'y',\n\t\t'zIndex',\n\t\t'fit',\n\t\t'config'\n];\n\tpublic static OUTPUTS: any[] = [\n\t\t{name:'added',parameters:'button,container,index'},\n\t\t{name:'beforehide',parameters:'button'},\n\t\t{name:'beforeorientationchange',parameters:''},\n\t\t{name:'beforeshow',parameters:'button'},\n\t\t{name:'beforetofront',parameters:'button'},\n\t\t{name:'destroy',parameters:''},\n\t\t{name:'erased',parameters:'button'},\n\t\t{name:'floatingchange',parameters:'button,positioned'},\n\t\t{name:'fullscreen',parameters:'button'},\n\t\t{name:'hide',parameters:'button'},\n\t\t{name:'initialize',parameters:'button'},\n\t\t{name:'moved',parameters:'button,container,toIndex,fromIndex'},\n\t\t{name:'orientationchange',parameters:''},\n\t\t{name:'painted',parameters:'element'},\n\t\t{name:'positionedchange',parameters:'button,positioned'},\n\t\t{name:'release',parameters:'button,e'},\n\t\t{name:'removed',parameters:'button,container,index'},\n\t\t{name:'resize',parameters:'element'},\n\t\t{name:'show',parameters:'button'},\n\t\t{name:'tap',parameters:'button,e'},\n\t\t{name:'tofront',parameters:'button'},\n\t\t{name:'updatedata',parameters:'button,newData'},\n\t\t{name:'ready',parameters:''}\n];\n\tpublic static OUTPUTNAMES: string[] = [\n\t\t'added',\n\t\t'beforehide',\n\t\t'beforeorientationchange',\n\t\t'beforeshow',\n\t\t'beforetofront',\n\t\t'destroy',\n\t\t'erased',\n\t\t'floatingchange',\n\t\t'fullscreen',\n\t\t'hide',\n\t\t'initialize',\n\t\t'moved',\n\t\t'orientationchange',\n\t\t'painted',\n\t\t'positionedchange',\n\t\t'release',\n\t\t'removed',\n\t\t'resize',\n\t\t'show',\n\t\t'tap',\n\t\t'tofront',\n\t\t'updatedata',\n\t\t'ready'\n];\n}\n@Component({\n  selector: 'ext-' + extbuttonMetaData.XTYPE,\n\tinputs: extbuttonMetaData.INPUTNAMES,\n\toutputs: extbuttonMetaData.OUTPUTNAMES,\n\tproviders: [{provide: extbase, useExisting: forwardRef(() => extbutton)}],\n\ttemplate: '<template #dynamic></template>'\n})\nexport class extbutton extends extbase {\n\tconstructor(eRef:ElementRef,resolver:ComponentFactoryResolver,vcRef:ViewContainerRef) {\n\t\tsuper(eRef,resolver,vcRef,extbuttonMetaData);\n\t}\n\t@ContentChildren(extbase,{read:ViewContainerRef}) extbaseRef:QueryList<ViewContainerRef>;\n\t@ViewChild('dynamic',{read:ViewContainerRef}) dynamicRef:ViewContainerRef;\n\tngAfterContentInit() {this.AfterContentInit(this.extbaseRef);}\n\tngOnInit() {this.OnInit(this.dynamicRef,extbuttonMetaData);}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/angular2-extjs/ext.button.ts\n **/","/**\n * @license Angular v2.0.0\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Subject'), require('rxjs/Observable')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.Rx,global.Rx));\n}(this, function (exports,rxjs_Subject,rxjs_Observable) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    function scheduleMicroTask(fn) {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var global$1 = globalScope;\n    function getTypeNameForDebugging(type) {\n        if (type['name']) {\n            return type['name'];\n        }\n        return typeof type;\n    }\n    var Math = global$1.Math;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj !== undefined && obj !== null;\n    }\n    function isBlank(obj) {\n        return obj === undefined || obj === null;\n    }\n    function isString(obj) {\n        return typeof obj === 'string';\n    }\n    function isFunction(obj) {\n        return typeof obj === 'function';\n    }\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return isPresent(obj) && isFunction(obj.then);\n    }\n    function isArray(obj) {\n        return Array.isArray(obj);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token === undefined || token === null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return (newLineIndex === -1) ? res : res.substring(0, newLineIndex);\n    }\n    var StringWrapper = (function () {\n        function StringWrapper() {\n        }\n        StringWrapper.fromCharCode = function (code) { return String.fromCharCode(code); };\n        StringWrapper.charCodeAt = function (s, index) { return s.charCodeAt(index); };\n        StringWrapper.split = function (s, regExp) { return s.split(regExp); };\n        StringWrapper.equals = function (s, s2) { return s === s2; };\n        StringWrapper.stripLeft = function (s, charVal) {\n            if (s && s.length) {\n                var pos = 0;\n                for (var i = 0; i < s.length; i++) {\n                    if (s[i] != charVal)\n                        break;\n                    pos++;\n                }\n                s = s.substring(pos);\n            }\n            return s;\n        };\n        StringWrapper.stripRight = function (s, charVal) {\n            if (s && s.length) {\n                var pos = s.length;\n                for (var i = s.length - 1; i >= 0; i--) {\n                    if (s[i] != charVal)\n                        break;\n                    pos--;\n                }\n                s = s.substring(0, pos);\n            }\n            return s;\n        };\n        StringWrapper.replace = function (s, from, replace) {\n            return s.replace(from, replace);\n        };\n        StringWrapper.replaceAll = function (s, from, replace) {\n            return s.replace(from, replace);\n        };\n        StringWrapper.slice = function (s, from, to) {\n            if (from === void 0) { from = 0; }\n            if (to === void 0) { to = null; }\n            return s.slice(from, to === null ? undefined : to);\n        };\n        StringWrapper.replaceAllMapped = function (s, from, cb) {\n            return s.replace(from, function () {\n                var matches = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    matches[_i - 0] = arguments[_i];\n                }\n                // Remove offset & string from the result array\n                matches.splice(-2, 2);\n                // The callback receives match, p1, ..., pn\n                return cb(matches);\n            });\n        };\n        StringWrapper.contains = function (s, substr) { return s.indexOf(substr) != -1; };\n        StringWrapper.compare = function (a, b) {\n            if (a < b) {\n                return -1;\n            }\n            else if (a > b) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        };\n        return StringWrapper;\n    }());\n    var NumberWrapper = (function () {\n        function NumberWrapper() {\n        }\n        NumberWrapper.toFixed = function (n, fractionDigits) { return n.toFixed(fractionDigits); };\n        NumberWrapper.equal = function (a, b) { return a === b; };\n        NumberWrapper.parseIntAutoRadix = function (text) {\n            var result = parseInt(text);\n            if (isNaN(result)) {\n                throw new Error('Invalid integer literal when parsing ' + text);\n            }\n            return result;\n        };\n        NumberWrapper.parseInt = function (text, radix) {\n            if (radix == 10) {\n                if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n                    return parseInt(text, radix);\n                }\n            }\n            else if (radix == 16) {\n                if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n                    return parseInt(text, radix);\n                }\n            }\n            else {\n                var result = parseInt(text, radix);\n                if (!isNaN(result)) {\n                    return result;\n                }\n            }\n            throw new Error('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n        };\n        Object.defineProperty(NumberWrapper, \"NaN\", {\n            get: function () { return NaN; },\n            enumerable: true,\n            configurable: true\n        });\n        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n        NumberWrapper.isNaN = function (value) { return isNaN(value); };\n        NumberWrapper.isInteger = function (value) { return Number.isInteger(value); };\n        return NumberWrapper;\n    }());\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n    function getMapKey(value) {\n        return value;\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function print(obj) {\n        console.log(obj);\n    }\n    function warn(obj) {\n        console.warn(obj);\n    }\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (isBlank(_symbolIterator)) {\n            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    var _nextClassId = 0;\n    function extractAnnotation(annotation) {\n        if (isFunction(annotation) && annotation.hasOwnProperty('annotation')) {\n            // it is a decorator, extract annotation\n            annotation = annotation.annotation;\n        }\n        return annotation;\n    }\n    function applyParams(fnOrArray, key) {\n        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n            fnOrArray === Number || fnOrArray === Array) {\n            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n        }\n        if (isFunction(fnOrArray)) {\n            return fnOrArray;\n        }\n        else if (fnOrArray instanceof Array) {\n            var annotations = fnOrArray;\n            var annoLength = annotations.length - 1;\n            var fn = fnOrArray[annoLength];\n            if (!isFunction(fn)) {\n                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n            }\n            if (annoLength != fn.length) {\n                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n            }\n            var paramsAnnotations = [];\n            for (var i = 0, ii = annotations.length - 1; i < ii; i++) {\n                var paramAnnotations = [];\n                paramsAnnotations.push(paramAnnotations);\n                var annotation = annotations[i];\n                if (annotation instanceof Array) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        paramAnnotations.push(extractAnnotation(annotation[j]));\n                    }\n                }\n                else if (isFunction(annotation)) {\n                    paramAnnotations.push(extractAnnotation(annotation));\n                }\n                else {\n                    paramAnnotations.push(annotation);\n                }\n            }\n            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n            return fn;\n        }\n        else {\n            throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n        }\n    }\n    /**\n     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n     *\n     * ## Basic Example\n     *\n     * ```\n     * var Greeter = ng.Class({\n     *   constructor: function(name) {\n     *     this.name = name;\n     *   },\n     *\n     *   greet: function() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class Greeter {\n     *   constructor(name) {\n     *     this.name = name;\n     *   }\n     *\n     *   greet() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * }\n     * ```\n     *\n     * or equivalent to ES5:\n     *\n     * ```\n     * var Greeter = function (name) {\n     *   this.name = name;\n     * }\n     *\n     * Greeter.prototype.greet = function () {\n     *   alert('Hello ' + this.name + '!');\n     * }\n     * ```\n     *\n     * ### Example with parameter annotations\n     *\n     * ```\n     * var MyService = ng.Class({\n     *   constructor: [String, [new Query(), QueryList], function(name, queryList) {\n     *     ...\n     *   }]\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class MyService {\n     *   constructor(name: string, @Query() queryList: QueryList) {\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * ### Example with inheritance\n     *\n     * ```\n     * var Shape = ng.Class({\n     *   constructor: (color) {\n     *     this.color = color;\n     *   }\n     * });\n     *\n     * var Square = ng.Class({\n     *   extends: Shape,\n     *   constructor: function(color, size) {\n     *     Shape.call(this, color);\n     *     this.size = size;\n     *   }\n     * });\n     * ```\n     * @stable\n     */\n    function Class(clsDef) {\n        var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n        var proto = constructor.prototype;\n        if (clsDef.hasOwnProperty('extends')) {\n            if (isFunction(clsDef.extends)) {\n                constructor.prototype = proto =\n                    Object.create(clsDef.extends.prototype);\n            }\n            else {\n                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n            }\n        }\n        for (var key in clsDef) {\n            if (key != 'extends' && key != 'prototype' && clsDef.hasOwnProperty(key)) {\n                proto[key] = applyParams(clsDef[key], key);\n            }\n        }\n        if (this && this.annotations instanceof Array) {\n            Reflect.defineMetadata('annotations', this.annotations, constructor);\n        }\n        var constructorName = constructor['name'];\n        if (!constructorName || constructorName === 'constructor') {\n            constructor['overriddenName'] = \"class\" + _nextClassId++;\n        }\n        return constructor;\n    }\n    var Reflect = global$1.Reflect;\n    function makeDecorator(name, props, parentClass, chainFn) {\n        if (chainFn === void 0) { chainFn = null; }\n        var metaCtor = makeMetadataCtor([props]);\n        function DecoratorFactory(objOrType) {\n            if (!(Reflect && Reflect.getMetadata)) {\n                throw 'reflect-metadata shim is required when using class decorators';\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call(this, objOrType);\n                return this;\n            }\n            else {\n                var annotationInstance_1 = new DecoratorFactory(objOrType);\n                var chainAnnotation = isFunction(this) && this.annotations instanceof Array ? this.annotations : [];\n                chainAnnotation.push(annotationInstance_1);\n                var TypeDecorator = function TypeDecorator(cls) {\n                    var annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n                    annotations.push(annotationInstance_1);\n                    Reflect.defineMetadata('annotations', annotations, cls);\n                    return cls;\n                };\n                TypeDecorator.annotations = chainAnnotation;\n                TypeDecorator.Class = Class;\n                if (chainFn)\n                    chainFn(TypeDecorator);\n                return TypeDecorator;\n            }\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        function ctor() {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            props.forEach(function (prop, i) {\n                var argVal = args[i];\n                if (Array.isArray(prop)) {\n                    // plain parameter\n                    var val = !argVal || argVal === undefined ? prop[1] : argVal;\n                    _this[prop[0]] = val;\n                }\n                else {\n                    for (var propName in prop) {\n                        var val = !argVal || argVal[propName] === undefined ? prop[propName] : argVal[propName];\n                        _this[propName] = val;\n                    }\n                }\n            });\n        }\n        return ctor;\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                var parameters = Reflect.getMetadata('parameters', cls) || [];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                parameters[index] = parameters[index] || [];\n                var annotationsForParam = parameters[index];\n                annotationsForParam.push(annotationInstance);\n                Reflect.defineMetadata('parameters', parameters, cls);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            else {\n                var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n                return function PropDecorator(target, name) {\n                    var meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n                    meta[name] = meta[name] || [];\n                    meta[name].unshift(decoratorInstance);\n                    Reflect.defineMetadata('propMetadata', meta, target.constructor);\n                };\n            }\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * Inject decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', [['token', undefined]]);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional', []);\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Injectable = makeParamDecorator('Injectable', []);\n    /**\n     * Self decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self', []);\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf', []);\n    /**\n     * Host decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host', []);\n\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n     *\n     * ```typescript\n     * var t = new OpaqueToken(\"value\");\n     *\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: t, useValue: \"bindingValue\"}\n     * ]);\n     *\n     * expect(injector.get(t)).toEqual(\"bindingValue\");\n     * ```\n     *\n     * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n     * caused by multiple providers using the same string as two different tokens.\n     *\n     * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n     * error messages.\n     * @stable\n     */\n    // so that metadata is gathered for this class\n    var OpaqueToken = (function () {\n        function OpaqueToken(_desc) {\n            this._desc = _desc;\n        }\n        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n        OpaqueToken.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        OpaqueToken.ctorParameters = [\n            null,\n        ];\n        return OpaqueToken;\n    }());\n\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n    /**\n     * Base class for query metadata.\n     *\n     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n     * more information.\n     *\n     * @stable\n     */\n    var Query = (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *  @stable\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', [\n        ['selector', undefined],\n        { first: false, isViewQuery: false, descendants: false, read: undefined }\n    ], Query);\n    /**\n     * @whatItDoes Configures a content query.\n     *\n     * @howToUse\n     *\n     * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n     *\n     * @description\n     *\n     * You can use ContentChild to get the first element or the directive matching the selector from the\n     * content DOM. If the content DOM changes, and a new child matches the selector,\n     * the property will be updated.\n     *\n     * Content queries are set before the `ngAfterContentInit` callback is called.\n     *\n     * **Metadata Properties**:\n     *\n     * * **selector** - the directive type or the name used for querying.\n     * * **read** - read a different token from the queried element.\n     *\n     * Let's look at an example:\n     *\n     * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/core`\n     *\n     * @stable\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: false,\n            descendants: false,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * @whatItDoes Configures a view query.\n     *\n     * @howToUse\n     *\n     * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n     *\n     * @description\n     *\n     * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n     * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n     * and the changes observable of the query list will emit a new value.\n     *\n     * View queries are set before the `ngAfterViewInit` callback is called.\n     *\n     * **Metadata Properties**:\n     *\n     * * **selector** - the directive type or the name used for querying.\n     * * **read** - read a different token from the queried elements.\n     *\n     * Let's look at an example:\n     *\n     * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/core`\n     *\n     * @stable\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n\n    /**\n     * Describes within the change detector which strategy will be used the next time change\n     * detection is triggered.\n     * @stable\n     */\n    exports.ChangeDetectionStrategy;\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    /**\n     * Describes the status of the detector.\n     */\n    var ChangeDetectorStatus;\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckedOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n    /**\n     * List of possible {@link ChangeDetectionStrategy} values.\n     */\n    var CHANGE_DETECTION_STRATEGY_VALUES = [\n        exports.ChangeDetectionStrategy.OnPush,\n        exports.ChangeDetectionStrategy.Default,\n    ];\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return isBlank(changeDetectionStrategy) ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * Directive decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Directive = makeDecorator('Directive', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        providers: undefined,\n        exportAs: undefined,\n        queries: undefined\n    });\n    /**\n     * Component decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        exportAs: undefined,\n        moduleId: undefined,\n        providers: undefined,\n        viewProviders: undefined,\n        changeDetection: exports.ChangeDetectionStrategy.Default,\n        queries: undefined,\n        templateUrl: undefined,\n        template: undefined,\n        styleUrls: undefined,\n        styles: undefined,\n        animations: undefined,\n        encapsulation: undefined,\n        interpolation: undefined,\n        entryComponents: undefined\n    }, Directive);\n    /**\n     * Pipe decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', {\n        name: undefined,\n        pure: true,\n    });\n    /**\n     * Input decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n    /**\n     * Output decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @stable\n     */\n    var LifecycleHooks;\n    (function (LifecycleHooks) {\n        LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n        LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n        LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n        LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n    })(LifecycleHooks || (LifecycleHooks = {}));\n    var LIFECYCLE_HOOKS_VALUES = [\n        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n        LifecycleHooks.AfterViewChecked\n    ];\n    /**\n     * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n     *\n     * @description\n     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n     * and content children are checked if at least one of them has changed.\n     * The `changes` parameter contains the changed properties.\n     *\n     * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnChanges = (function () {\n        function OnChanges() {\n        }\n        return OnChanges;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n     *\n     * @description\n     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n     * first time, and before any of its children have been checked. It is invoked only once when the\n     * directive is instantiated.\n     *\n     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnInit = (function () {\n        function OnInit() {\n        }\n        return OnInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n     *\n     * @description\n     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n     * algorithm. The default change detection algorithm looks for differences by comparing\n     * bound-property values by reference across change detection runs.\n     *\n     * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n     * detector detects changes.\n     *\n     * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n     * for collections.\n     *\n     * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var DoCheck = (function () {\n        function DoCheck() {\n        }\n        return DoCheck;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called when a directive or pipe is destroyed.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n     *\n     * @description\n     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n     * instance is destroyed.\n     *\n     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnDestroy = (function () {\n        function OnDestroy() {\n        }\n        return OnDestroy;\n    }());\n    /**\n     *\n     * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterContentInit = (function () {\n        function AfterContentInit() {\n        }\n        return AfterContentInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterContentChecked = (function () {\n        function AfterContentChecked() {\n        }\n        return AfterContentChecked;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterViewInit = (function () {\n        function AfterViewInit() {\n        }\n        return AfterViewInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterViewChecked = (function () {\n        function AfterViewChecked() {\n        }\n        return AfterViewChecked;\n    }());\n\n    /**\n     * Defines a schema that will allow:\n     * - any non-angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     * @stable\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * NgModule decorator and metadata\n     *\n     * @stable\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', {\n        providers: undefined,\n        declarations: undefined,\n        imports: undefined,\n        exports: undefined,\n        entryComponents: undefined,\n        bootstrap: undefined,\n        schemas: undefined,\n        id: undefined,\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines template and style encapsulation options available for Component's {@link Component}.\n     *\n     * See {@link ViewMetadata#encapsulation}.\n     * @stable\n     */\n    exports.ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via\n         * {@link ViewMetadata#styles} or {@link ViewMetadata#stylesUrls}, and adding the new Host Element\n         * attribute to all selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n    var VIEW_ENCAPSULATION_VALUES = [exports.ViewEncapsulation.Emulated, exports.ViewEncapsulation.Native, exports.ViewEncapsulation.None];\n    /**\n     * Metadata properties available for configuring Views.\n     *\n     * Each Angular component requires a single `@Component` and at least one `@View` annotation. The\n     * `@View` annotation specifies the HTML template to use, and lists the directives that are active\n     * within the template.\n     *\n     * When a component is instantiated, the template is loaded into the component's shadow root, and\n     * the expressions and statements in the template are evaluated against the component.\n     *\n     * For details on the `@Component` annotation, see {@link Component}.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   selector: 'greet',\n     *   template: 'Hello {{name}}!',\n     *   directives: [GreetUser, Bold]\n     * })\n     * class Greet {\n     *   name: string;\n     *\n     *   constructor() {\n     *     this.name = 'World';\n     *   }\n     * }\n     * ```\n     *\n     * @deprecated Use Component instead.\n     */\n    var ViewMetadata = (function () {\n        function ViewMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n            this.templateUrl = templateUrl;\n            this.template = template;\n            this.styleUrls = styleUrls;\n            this.styles = styles;\n            this.encapsulation = encapsulation;\n            this.animations = animations;\n            this.interpolation = interpolation;\n        }\n        return ViewMetadata;\n    }());\n\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared,\n     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n     * yet defined.\n     *\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * See: {@link forwardRef}\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (isFunction(type) && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * @stable\n     */\n    var BaseError = (function (_super) {\n        __extends(BaseError, _super);\n        function BaseError(message) {\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            var nativeError = _super.call(this, message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            get: function () { return this._nativeError.message; },\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            get: function () { return this._nativeError.stack; },\n            set: function (value) { this._nativeError.stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * @stable\n     */\n    var WrappedError = (function (_super) {\n        __extends(WrappedError, _super);\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            get: function () {\n                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var _NullInjector = (function () {\n        function _NullInjector() {\n        }\n        _NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return _NullInjector;\n    }());\n    /**\n     * @whatItDoes Injector interface\n     * @howToUse\n     * ```\n     * const injector: Injector = ...;\n     * injector.get(...);\n     * ```\n     *\n     * @description\n     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @stable\n     */\n    var Injector = (function () {\n        function Injector() {\n        }\n        /**\n         * Retrieves an instance from the injector based on the provided token.\n         * If not found:\n         * - Throws {@link NoProviderError} if no `notFoundValue` that is not equal to\n         * Injector.THROW_IF_NOT_FOUND is given\n         * - Returns the `notFoundValue` otherwise\n         * ```\n         */\n        Injector.prototype.get = function (token, notFoundValue) { return unimplemented(); };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new _NullInjector();\n        return Injector;\n    }());\n\n    var Map$1 = global$1.Map;\n    var Set = global$1.Set;\n    // Safari and Internet Explorer do not support the iterable parameter to the\n    // Map constructor.  We work around that by manually adding the items.\n    var createMapFromPairs = (function () {\n        try {\n            if (new Map$1([[1, 2]]).size === 1) {\n                return function createMapFromPairs(pairs) { return new Map$1(pairs); };\n            }\n        }\n        catch (e) {\n        }\n        return function createMapAndPopulateFromPairs(pairs) {\n            var map = new Map$1();\n            for (var i = 0; i < pairs.length; i++) {\n                var pair = pairs[i];\n                map.set(pair[0], pair[1]);\n            }\n            return map;\n        };\n    })();\n    var createMapFromMap = (function () {\n        try {\n            if (new Map$1(new Map$1())) {\n                return function createMapFromMap(m) { return new Map$1(m); };\n            }\n        }\n        catch (e) {\n        }\n        return function createMapAndPopulateFromMap(m) {\n            var map = new Map$1();\n            m.forEach(function (v, k) { map.set(k, v); });\n            return map;\n        };\n    })();\n    var _clearValues = (function () {\n        if ((new Map$1()).keys().next) {\n            return function _clearValues(m) {\n                var keyIterator = m.keys();\n                var k;\n                while (!((k = keyIterator.next()).done)) {\n                    m.set(k.value, null);\n                }\n            };\n        }\n        else {\n            return function _clearValuesWithForeEach(m) {\n                m.forEach(function (v, k) { m.set(k, null); });\n            };\n        }\n    })();\n    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n    var _arrayFromMap = (function () {\n        try {\n            if ((new Map$1()).values().next) {\n                return function createArrayFromMap(m, getValues) {\n                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n                };\n            }\n        }\n        catch (e) {\n        }\n        return function createArrayFromMapWithForeach(m, getValues) {\n            var res = ListWrapper.createFixedSize(m.size), i = 0;\n            m.forEach(function (v, k) {\n                res[i] = getValues ? v : k;\n                i++;\n            });\n            return res;\n        };\n    })();\n    var MapWrapper = (function () {\n        function MapWrapper() {\n        }\n        MapWrapper.clone = function (m) { return createMapFromMap(m); };\n        MapWrapper.createFromStringMap = function (stringMap) {\n            var result = new Map$1();\n            for (var prop in stringMap) {\n                result.set(prop, stringMap[prop]);\n            }\n            return result;\n        };\n        MapWrapper.toStringMap = function (m) {\n            var r = {};\n            m.forEach(function (v, k) { return r[k] = v; });\n            return r;\n        };\n        MapWrapper.createFromPairs = function (pairs) { return createMapFromPairs(pairs); };\n        MapWrapper.clearValues = function (m) { _clearValues(m); };\n        MapWrapper.iterable = function (m) { return m; };\n        MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n        MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n        return MapWrapper;\n    }());\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.create = function () {\n            // Note: We are not using Object.create(null) here due to\n            // performance!\n            // http://jsperf.com/ng2-object-create-null\n            return {};\n        };\n        StringMapWrapper.contains = function (map, key) {\n            return map.hasOwnProperty(key);\n        };\n        StringMapWrapper.get = function (map, key) {\n            return map.hasOwnProperty(key) ? map[key] : undefined;\n        };\n        StringMapWrapper.set = function (map, key, value) { map[key] = value; };\n        StringMapWrapper.keys = function (map) { return Object.keys(map); };\n        StringMapWrapper.values = function (map) {\n            return Object.keys(map).map(function (k) { return map[k]; });\n        };\n        StringMapWrapper.isEmpty = function (map) {\n            for (var prop in map) {\n                return false;\n            }\n            return true;\n        };\n        StringMapWrapper.delete = function (map, key) { delete map[key]; };\n        StringMapWrapper.forEach = function (map, callback) {\n            for (var _i = 0, _a = Object.keys(map); _i < _a.length; _i++) {\n                var k = _a[_i];\n                callback(map[k], k);\n            }\n        };\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        // JS has no way to express a statically fixed size list, but dart does so we\n        // keep both methods.\n        ListWrapper.createFixedSize = function (size) { return new Array(size); };\n        ListWrapper.createGrowableSize = function (size) { return new Array(size); };\n        ListWrapper.clone = function (array) { return array.slice(0); };\n        ListWrapper.forEachWithIndex = function (array, fn) {\n            for (var i = 0; i < array.length; i++) {\n                fn(array[i], i);\n            }\n        };\n        ListWrapper.first = function (array) {\n            if (!array)\n                return null;\n            return array[0];\n        };\n        ListWrapper.last = function (array) {\n            if (!array || array.length == 0)\n                return null;\n            return array[array.length - 1];\n        };\n        ListWrapper.indexOf = function (array, value, startIndex) {\n            if (startIndex === void 0) { startIndex = 0; }\n            return array.indexOf(value, startIndex);\n        };\n        ListWrapper.contains = function (list, el) { return list.indexOf(el) !== -1; };\n        ListWrapper.reversed = function (array) {\n            var a = ListWrapper.clone(array);\n            return a.reverse();\n        };\n        ListWrapper.concat = function (a, b) { return a.concat(b); };\n        ListWrapper.insert = function (list, index, value) { list.splice(index, 0, value); };\n        ListWrapper.removeAt = function (list, index) {\n            var res = list[index];\n            list.splice(index, 1);\n            return res;\n        };\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                list.splice(index, 1);\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.clear = function (list) { list.length = 0; };\n        ListWrapper.isEmpty = function (list) { return list.length == 0; };\n        ListWrapper.fill = function (list, value, start, end) {\n            if (start === void 0) { start = 0; }\n            if (end === void 0) { end = null; }\n            list.fill(value, start, end === null ? list.length : end);\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.slice = function (l, from, to) {\n            if (from === void 0) { from = 0; }\n            if (to === void 0) { to = null; }\n            return l.slice(from, to === null ? undefined : to);\n        };\n        ListWrapper.splice = function (l, from, length) { return l.splice(from, length); };\n        ListWrapper.sort = function (l, compareFn) {\n            if (isPresent(compareFn)) {\n                l.sort(compareFn);\n            }\n            else {\n                l.sort();\n            }\n        };\n        ListWrapper.toString = function (l) { return l.toString(); };\n        ListWrapper.toJSON = function (l) { return JSON.stringify(l); };\n        ListWrapper.maximum = function (list, predicate) {\n            if (list.length == 0) {\n                return null;\n            }\n            var solution = null;\n            var maxValue = -Infinity;\n            for (var index = 0; index < list.length; index++) {\n                var candidate = list[index];\n                if (isBlank(candidate)) {\n                    continue;\n                }\n                var candidateValue = predicate(candidate);\n                if (candidateValue > maxValue) {\n                    solution = candidate;\n                    maxValue = candidateValue;\n                }\n            }\n            return solution;\n        };\n        ListWrapper.flatten = function (list) {\n            var target = [];\n            _flattenArray(list, target);\n            return target;\n        };\n        ListWrapper.addAll = function (list, source) {\n            for (var i = 0; i < source.length; i++) {\n                list.push(source[i]);\n            }\n        };\n        return ListWrapper;\n    }());\n    function _flattenArray(source, target) {\n        if (isPresent(source)) {\n            for (var i = 0; i < source.length; i++) {\n                var item = source[i];\n                if (isArray(item)) {\n                    _flattenArray(item, target);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n        }\n        return target;\n    }\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return isArray(obj) ||\n            (!(obj instanceof Map$1) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    // Safari and Internet Explorer do not support the iterable parameter to the\n    // Set constructor.  We work around that by manually adding the items.\n    var createSetFromList = (function () {\n        var test = new Set([1, 2, 3]);\n        if (test.size === 3) {\n            return function createSetFromList(lst) { return new Set(lst); };\n        }\n        else {\n            return function createSetAndPopulateFromList(lst) {\n                var res = new Set(lst);\n                if (res.size !== lst.length) {\n                    for (var i = 0; i < lst.length; i++) {\n                        res.add(lst[i]);\n                    }\n                }\n                return res;\n            };\n        }\n    })();\n    var SetWrapper = (function () {\n        function SetWrapper() {\n        }\n        SetWrapper.createFromList = function (lst) { return createSetFromList(lst); };\n        SetWrapper.has = function (s, key) { return s.has(key); };\n        SetWrapper.delete = function (m, k) { m.delete(k); };\n        return SetWrapper;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (ListWrapper.contains(res, keys[i])) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(ListWrapper.reversed(keys));\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    /**\n     * Base class for all errors arising from misconfigured providers.\n     * @stable\n     */\n    var AbstractProviderError = (function (_super) {\n        __extends$1(AbstractProviderError, _super);\n        function AbstractProviderError(injector, key, constructResolvingMessage) {\n            _super.call(this, 'DI Error');\n            this.keys = [key];\n            this.injectors = [injector];\n            this.constructResolvingMessage = constructResolvingMessage;\n            this.message = this.constructResolvingMessage(this.keys);\n        }\n        AbstractProviderError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n            this.message = this.constructResolvingMessage(this.keys);\n        };\n        return AbstractProviderError;\n    }(BaseError));\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     * @stable\n     */\n    var NoProviderError = (function (_super) {\n        __extends$1(NoProviderError, _super);\n        function NoProviderError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                var first = stringify(ListWrapper.first(keys).token);\n                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n            });\n        }\n        return NoProviderError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     * @stable\n     */\n    var CyclicDependencyError = (function (_super) {\n        __extends$1(CyclicDependencyError, _super);\n        function CyclicDependencyError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n            });\n        }\n        return CyclicDependencyError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     * @stable\n     */\n    var InstantiationError = (function (_super) {\n        __extends$1(InstantiationError, _super);\n        function InstantiationError(injector, originalException, originalStack, key) {\n            _super.call(this, 'DI Error', originalException);\n            this.keys = [key];\n            this.injectors = [injector];\n        }\n        InstantiationError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n        };\n        Object.defineProperty(InstantiationError.prototype, \"message\", {\n            get: function () {\n                var first = stringify(ListWrapper.first(this.keys).token);\n                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n            get: function () { return this.keys[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return InstantiationError;\n    }(WrappedError));\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     * @stable\n     */\n    var InvalidProviderError = (function (_super) {\n        __extends$1(InvalidProviderError, _super);\n        function InvalidProviderError(provider) {\n            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n        }\n        return InvalidProviderError;\n    }(BaseError));\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     * @stable\n     */\n    var NoAnnotationError = (function (_super) {\n        __extends$1(NoAnnotationError, _super);\n        function NoAnnotationError(typeOrFunc, params) {\n            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n        }\n        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n            var signature = [];\n            for (var i = 0, ii = params.length; i < ii; i++) {\n                var parameter = params[i];\n                if (isBlank(parameter) || parameter.length == 0) {\n                    signature.push('?');\n                }\n                else {\n                    signature.push(parameter.map(stringify).join(' '));\n                }\n            }\n            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n                signature.join(', ') + '). ' +\n                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n        };\n        return NoAnnotationError;\n    }(BaseError));\n    /**\n     * Thrown when getting an object by index.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     * @stable\n     */\n    var OutOfBoundsError = (function (_super) {\n        __extends$1(OutOfBoundsError, _super);\n        function OutOfBoundsError(index) {\n            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n        }\n        return OutOfBoundsError;\n    }(BaseError));\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n        __extends$1(MixingMultiProvidersWithRegularProvidersError, _super);\n        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n                provider2.toString());\n        }\n        return MixingMultiProvidersWithRegularProvidersError;\n    }(BaseError));\n\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @experimental\n     */\n    var ReflectiveKey = (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (isBlank(token)) {\n                throw new Error('Token must be defined!');\n            }\n        }\n        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n            /**\n             * Returns a stringified token.\n             */\n            get: function () { return stringify(this.token); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    /**\n     * @internal\n     */\n    var KeyRegistry = (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Represents a type that a Component or other object is instances of.\n     *\n     * @description\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @stable\n     */\n    var Type = Function;\n\n    var ReflectionCapabilities = (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || global$1.Reflect;\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) {\n            var prototype = t.prototype;\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var instance = Object.create(prototype);\n                t.apply(instance, args);\n                return instance;\n            };\n        };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes /** TODO #9100 */, paramAnnotations /** TODO #9100 */) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (isPresent(paramAnnotations) && isPresent(paramAnnotations[i])) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype.parameters = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (isPresent(typeOrFunc.parameters)) {\n                return typeOrFunc.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (isPresent(typeOrFunc.ctorParameters)) {\n                var ctorParameters = typeOrFunc.ctorParameters;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam /** TODO #9100 */) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam /** TODO #9100 */) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n                var paramAnnotations = this._reflect.getMetadata('parameters', typeOrFunc);\n                var paramTypes = this._reflect.getMetadata('design:paramtypes', typeOrFunc);\n                if (isPresent(paramTypes) || isPresent(paramAnnotations)) {\n                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n                }\n            }\n            // The array has to be filled with `undefined` because holes would be skipped by `some`\n            var parameters = new Array(typeOrFunc.length);\n            parameters.fill(undefined);\n            return parameters;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (isPresent(typeOrFunc.annotations)) {\n                var annotations = typeOrFunc.annotations;\n                if (isFunction(annotations) && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (isPresent(typeOrFunc.decorators)) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n                var annotations = this._reflect.getMetadata('annotations', typeOrFunc);\n                if (isPresent(annotations))\n                    return annotations;\n            }\n            return [];\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (isPresent(typeOrFunc.propMetadata)) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (isFunction(propMetadata) && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (isPresent(typeOrFunc.propDecorators)) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n                var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);\n                if (isPresent(propMetadata))\n                    return propMetadata;\n            }\n            return {};\n        };\n        // Note: JavaScript does not support to query for interfaces during runtime.\n        // However, we can't throw here as the reflector will always call this method\n        // when asked for a lifecycle interface as this is what we check in Dart.\n        ReflectionCapabilities.prototype.interfaces = function (type) { return []; };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcInterface, lcProperty) {\n            if (!(type instanceof Type))\n                return false;\n            var proto = type.prototype;\n            return !!proto[lcProperty];\n        };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides read-only access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var ReflectorReader = (function () {\n        function ReflectorReader() {\n        }\n        return ReflectorReader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = (function (_super) {\n        __extends$2(Reflector, _super);\n        function Reflector(reflectionCapabilities) {\n            _super.call(this);\n            /** @internal */\n            this._injectableInfo = new Map$1();\n            /** @internal */\n            this._getters = new Map$1();\n            /** @internal */\n            this._setters = new Map$1();\n            /** @internal */\n            this._methods = new Map$1();\n            this._usedKeys = null;\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.isReflectionEnabled = function () { return this.reflectionCapabilities.isReflectionEnabled(); };\n        /**\n         * Causes `this` reflector to track keys used to access\n         * {@link ReflectionInfo} objects.\n         */\n        Reflector.prototype.trackUsage = function () { this._usedKeys = new Set(); };\n        /**\n         * Lists types for which reflection information was not requested since\n         * {@link #trackUsage} was called. This list could later be audited as\n         * potential dead code.\n         */\n        Reflector.prototype.listUnusedKeys = function () {\n            var _this = this;\n            if (this._usedKeys == null) {\n                throw new Error('Usage tracking is disabled');\n            }\n            var allTypes = MapWrapper.keys(this._injectableInfo);\n            return allTypes.filter(function (key) { return !SetWrapper.has(_this._usedKeys, key); });\n        };\n        Reflector.prototype.registerFunction = function (func, funcInfo) {\n            this._injectableInfo.set(func, funcInfo);\n        };\n        Reflector.prototype.registerType = function (type, typeInfo) {\n            this._injectableInfo.set(type, typeInfo);\n        };\n        Reflector.prototype.registerGetters = function (getters) { _mergeMaps(this._getters, getters); };\n        Reflector.prototype.registerSetters = function (setters) { _mergeMaps(this._setters, setters); };\n        Reflector.prototype.registerMethods = function (methods) { _mergeMaps(this._methods, methods); };\n        Reflector.prototype.factory = function (type) {\n            if (this._containsReflectionInfo(type)) {\n                var res = this._getReflectionInfo(type).factory;\n                return isPresent(res) ? res : null;\n            }\n            else {\n                return this.reflectionCapabilities.factory(type);\n            }\n        };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            if (this._injectableInfo.has(typeOrFunc)) {\n                var res = this._getReflectionInfo(typeOrFunc).parameters;\n                return isPresent(res) ? res : [];\n            }\n            else {\n                return this.reflectionCapabilities.parameters(typeOrFunc);\n            }\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            if (this._injectableInfo.has(typeOrFunc)) {\n                var res = this._getReflectionInfo(typeOrFunc).annotations;\n                return isPresent(res) ? res : [];\n            }\n            else {\n                return this.reflectionCapabilities.annotations(typeOrFunc);\n            }\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            if (this._injectableInfo.has(typeOrFunc)) {\n                var res = this._getReflectionInfo(typeOrFunc).propMetadata;\n                return isPresent(res) ? res : {};\n            }\n            else {\n                return this.reflectionCapabilities.propMetadata(typeOrFunc);\n            }\n        };\n        Reflector.prototype.interfaces = function (type) {\n            if (this._injectableInfo.has(type)) {\n                var res = this._getReflectionInfo(type).interfaces;\n                return isPresent(res) ? res : [];\n            }\n            else {\n                return this.reflectionCapabilities.interfaces(type);\n            }\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcInterface, lcProperty) {\n            var interfaces = this.interfaces(type);\n            if (interfaces.indexOf(lcInterface) !== -1) {\n                return true;\n            }\n            else {\n                return this.reflectionCapabilities.hasLifecycleHook(type, lcInterface, lcProperty);\n            }\n        };\n        Reflector.prototype.getter = function (name) {\n            if (this._getters.has(name)) {\n                return this._getters.get(name);\n            }\n            else {\n                return this.reflectionCapabilities.getter(name);\n            }\n        };\n        Reflector.prototype.setter = function (name) {\n            if (this._setters.has(name)) {\n                return this._setters.get(name);\n            }\n            else {\n                return this.reflectionCapabilities.setter(name);\n            }\n        };\n        Reflector.prototype.method = function (name) {\n            if (this._methods.has(name)) {\n                return this._methods.get(name);\n            }\n            else {\n                return this.reflectionCapabilities.method(name);\n            }\n        };\n        /** @internal */\n        Reflector.prototype._getReflectionInfo = function (typeOrFunc) {\n            if (isPresent(this._usedKeys)) {\n                this._usedKeys.add(typeOrFunc);\n            }\n            return this._injectableInfo.get(typeOrFunc);\n        };\n        /** @internal */\n        Reflector.prototype._containsReflectionInfo = function (typeOrFunc) { return this._injectableInfo.has(typeOrFunc); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }(ReflectorReader));\n    function _mergeMaps(target, config) {\n        StringMapWrapper.forEach(config, function (v, k) { return target.set(k, v); });\n    }\n\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = (function () {\n        function ReflectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {\n            this.key = key;\n            this.optional = optional;\n            this.lowerBoundVisibility = lowerBoundVisibility;\n            this.upperBoundVisibility = upperBoundVisibility;\n            this.properties = properties;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null, null, []);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n        }\n        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n            get: function () { return this.resolvedFactories[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving {@link\n     * Provider}.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = (function () {\n        function ResolvedReflectiveFactory(\n            /**\n             * Factory function which can return an instance of an object represented by a key.\n             */\n            factory,\n            /**\n             * Arguments (dependencies) to the `factory` function.\n             */\n            dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (isPresent(provider.useClass)) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (isPresent(provider.useExisting)) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (isPresent(provider.useFactory)) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the {@link Provider} into {@link ResolvedProvider}.\n     *\n     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n     * convenience provider syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        return MapWrapper.values(mergeResolvedReflectiveProviders(resolved, new Map()));\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where\n     * each key is contained exactly once and multi providers\n     * have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (isPresent(existing)) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, ListWrapper.clone(provider.resolvedFactories), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw new InvalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (isBlank(dependencies)) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (isBlank(params))\n            return [];\n        if (params.some(isBlank)) {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc /** TODO #9100 */, metadata /** TODO #9100 */ /*any[] | any*/, params) {\n        var depProps = [];\n        var token = null;\n        var optional = false;\n        if (!isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null, null, depProps);\n            }\n            else {\n                return _createDependency(metadata, optional, null, null, depProps);\n            }\n        }\n        var lowerBoundVisibility = null;\n        var upperBoundVisibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self) {\n                upperBoundVisibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof Host) {\n                upperBoundVisibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof SkipSelf) {\n                lowerBoundVisibility = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (isPresent(token)) {\n            return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n        }\n        else {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token /** TODO #9100 */, optional /** TODO #9100 */, lowerBoundVisibility /** TODO #9100 */, upperBoundVisibility /** TODO #9100 */, depProps /** TODO #9100 */) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n    }\n\n    // avoid unused import when Type union types are erased\n    // Threshold for the dynamic version\n    var _MAX_CONSTRUCTION_COUNTER = 10;\n    var UNDEFINED = new Object();\n    var ReflectiveProtoInjectorInlineStrategy = (function () {\n        function ReflectiveProtoInjectorInlineStrategy(protoEI, providers) {\n            this.provider0 = null;\n            this.provider1 = null;\n            this.provider2 = null;\n            this.provider3 = null;\n            this.provider4 = null;\n            this.provider5 = null;\n            this.provider6 = null;\n            this.provider7 = null;\n            this.provider8 = null;\n            this.provider9 = null;\n            this.keyId0 = null;\n            this.keyId1 = null;\n            this.keyId2 = null;\n            this.keyId3 = null;\n            this.keyId4 = null;\n            this.keyId5 = null;\n            this.keyId6 = null;\n            this.keyId7 = null;\n            this.keyId8 = null;\n            this.keyId9 = null;\n            var length = providers.length;\n            if (length > 0) {\n                this.provider0 = providers[0];\n                this.keyId0 = providers[0].key.id;\n            }\n            if (length > 1) {\n                this.provider1 = providers[1];\n                this.keyId1 = providers[1].key.id;\n            }\n            if (length > 2) {\n                this.provider2 = providers[2];\n                this.keyId2 = providers[2].key.id;\n            }\n            if (length > 3) {\n                this.provider3 = providers[3];\n                this.keyId3 = providers[3].key.id;\n            }\n            if (length > 4) {\n                this.provider4 = providers[4];\n                this.keyId4 = providers[4].key.id;\n            }\n            if (length > 5) {\n                this.provider5 = providers[5];\n                this.keyId5 = providers[5].key.id;\n            }\n            if (length > 6) {\n                this.provider6 = providers[6];\n                this.keyId6 = providers[6].key.id;\n            }\n            if (length > 7) {\n                this.provider7 = providers[7];\n                this.keyId7 = providers[7].key.id;\n            }\n            if (length > 8) {\n                this.provider8 = providers[8];\n                this.keyId8 = providers[8].key.id;\n            }\n            if (length > 9) {\n                this.provider9 = providers[9];\n                this.keyId9 = providers[9].key.id;\n            }\n        }\n        ReflectiveProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function (index) {\n            if (index == 0)\n                return this.provider0;\n            if (index == 1)\n                return this.provider1;\n            if (index == 2)\n                return this.provider2;\n            if (index == 3)\n                return this.provider3;\n            if (index == 4)\n                return this.provider4;\n            if (index == 5)\n                return this.provider5;\n            if (index == 6)\n                return this.provider6;\n            if (index == 7)\n                return this.provider7;\n            if (index == 8)\n                return this.provider8;\n            if (index == 9)\n                return this.provider9;\n            throw new OutOfBoundsError(index);\n        };\n        ReflectiveProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function (injector) {\n            return new ReflectiveInjectorInlineStrategy(injector, this);\n        };\n        return ReflectiveProtoInjectorInlineStrategy;\n    }());\n    var ReflectiveProtoInjectorDynamicStrategy = (function () {\n        function ReflectiveProtoInjectorDynamicStrategy(protoInj, providers) {\n            this.providers = providers;\n            var len = providers.length;\n            this.keyIds = ListWrapper.createFixedSize(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = providers[i].key.id;\n            }\n        }\n        ReflectiveProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this.providers.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this.providers[index];\n        };\n        ReflectiveProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function (ei) {\n            return new ReflectiveInjectorDynamicStrategy(this, ei);\n        };\n        return ReflectiveProtoInjectorDynamicStrategy;\n    }());\n    var ReflectiveProtoInjector = (function () {\n        function ReflectiveProtoInjector(providers) {\n            this.numberOfProviders = providers.length;\n            this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ?\n                new ReflectiveProtoInjectorDynamicStrategy(this, providers) :\n                new ReflectiveProtoInjectorInlineStrategy(this, providers);\n        }\n        ReflectiveProtoInjector.fromResolvedProviders = function (providers) {\n            return new ReflectiveProtoInjector(providers);\n        };\n        ReflectiveProtoInjector.prototype.getProviderAtIndex = function (index) {\n            return this._strategy.getProviderAtIndex(index);\n        };\n        return ReflectiveProtoInjector;\n    }());\n    var ReflectiveInjectorInlineStrategy = (function () {\n        function ReflectiveInjectorInlineStrategy(injector, protoStrategy) {\n            this.injector = injector;\n            this.protoStrategy = protoStrategy;\n            this.obj0 = UNDEFINED;\n            this.obj1 = UNDEFINED;\n            this.obj2 = UNDEFINED;\n            this.obj3 = UNDEFINED;\n            this.obj4 = UNDEFINED;\n            this.obj5 = UNDEFINED;\n            this.obj6 = UNDEFINED;\n            this.obj7 = UNDEFINED;\n            this.obj8 = UNDEFINED;\n            this.obj9 = UNDEFINED;\n        }\n        ReflectiveInjectorInlineStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n        ReflectiveInjectorInlineStrategy.prototype.instantiateProvider = function (provider) {\n            return this.injector._new(provider);\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getObjByKeyId = function (keyId) {\n            var p = this.protoStrategy;\n            var inj = this.injector;\n            if (p.keyId0 === keyId) {\n                if (this.obj0 === UNDEFINED) {\n                    this.obj0 = inj._new(p.provider0);\n                }\n                return this.obj0;\n            }\n            if (p.keyId1 === keyId) {\n                if (this.obj1 === UNDEFINED) {\n                    this.obj1 = inj._new(p.provider1);\n                }\n                return this.obj1;\n            }\n            if (p.keyId2 === keyId) {\n                if (this.obj2 === UNDEFINED) {\n                    this.obj2 = inj._new(p.provider2);\n                }\n                return this.obj2;\n            }\n            if (p.keyId3 === keyId) {\n                if (this.obj3 === UNDEFINED) {\n                    this.obj3 = inj._new(p.provider3);\n                }\n                return this.obj3;\n            }\n            if (p.keyId4 === keyId) {\n                if (this.obj4 === UNDEFINED) {\n                    this.obj4 = inj._new(p.provider4);\n                }\n                return this.obj4;\n            }\n            if (p.keyId5 === keyId) {\n                if (this.obj5 === UNDEFINED) {\n                    this.obj5 = inj._new(p.provider5);\n                }\n                return this.obj5;\n            }\n            if (p.keyId6 === keyId) {\n                if (this.obj6 === UNDEFINED) {\n                    this.obj6 = inj._new(p.provider6);\n                }\n                return this.obj6;\n            }\n            if (p.keyId7 === keyId) {\n                if (this.obj7 === UNDEFINED) {\n                    this.obj7 = inj._new(p.provider7);\n                }\n                return this.obj7;\n            }\n            if (p.keyId8 === keyId) {\n                if (this.obj8 === UNDEFINED) {\n                    this.obj8 = inj._new(p.provider8);\n                }\n                return this.obj8;\n            }\n            if (p.keyId9 === keyId) {\n                if (this.obj9 === UNDEFINED) {\n                    this.obj9 = inj._new(p.provider9);\n                }\n                return this.obj9;\n            }\n            return UNDEFINED;\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getObjAtIndex = function (index) {\n            if (index == 0)\n                return this.obj0;\n            if (index == 1)\n                return this.obj1;\n            if (index == 2)\n                return this.obj2;\n            if (index == 3)\n                return this.obj3;\n            if (index == 4)\n                return this.obj4;\n            if (index == 5)\n                return this.obj5;\n            if (index == 6)\n                return this.obj6;\n            if (index == 7)\n                return this.obj7;\n            if (index == 8)\n                return this.obj8;\n            if (index == 9)\n                return this.obj9;\n            throw new OutOfBoundsError(index);\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getMaxNumberOfObjects = function () { return _MAX_CONSTRUCTION_COUNTER; };\n        return ReflectiveInjectorInlineStrategy;\n    }());\n    var ReflectiveInjectorDynamicStrategy = (function () {\n        function ReflectiveInjectorDynamicStrategy(protoStrategy, injector) {\n            this.protoStrategy = protoStrategy;\n            this.injector = injector;\n            this.objs = ListWrapper.createFixedSize(protoStrategy.providers.length);\n            ListWrapper.fill(this.objs, UNDEFINED);\n        }\n        ReflectiveInjectorDynamicStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n        ReflectiveInjectorDynamicStrategy.prototype.instantiateProvider = function (provider) {\n            return this.injector._new(provider);\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getObjByKeyId = function (keyId) {\n            var p = this.protoStrategy;\n            for (var i = 0; i < p.keyIds.length; i++) {\n                if (p.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this.injector._new(p.providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getObjAtIndex = function (index) {\n            if (index < 0 || index >= this.objs.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this.objs[index];\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function () { return this.objs.length; };\n        return ReflectiveInjectorDynamicStrategy;\n    }());\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @stable\n     */\n    var ReflectiveInjector = (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of {@link ResolvedReflectiveProvider}s.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         *\n         * This function is slower than the corresponding `fromResolvedProviders`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link Injector#resolve} and {@link Injector#fromResolvedProviders}.\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers), parent);\n        };\n        Object.defineProperty(ReflectiveInjector.prototype, \"parent\", {\n            /**\n             * Parent of this injector.\n             *\n             * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n             * -->\n             *\n             * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n             *\n             * ```typescript\n             * var parent = ReflectiveInjector.resolveAndCreate([]);\n             * var child = parent.resolveAndCreateChild([]);\n             * expect(child.parent).toBe(parent);\n             * ```\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Resolves an array of providers and creates a child injector from those providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n         * var child = parent.resolveAndCreateChild([ChildProvider]);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         *\n         * This function is slower than the corresponding `createChildFromResolved`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link Injector#resolve} and {@link Injector#createChildFromResolved}.\n         */\n        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { return unimplemented(); };\n        /**\n         * Creates a child injector from previously resolved providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n         *\n         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n         * var child = parent.createChildFromResolved(childProviders);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         */\n        ReflectiveInjector.prototype.createChildFromResolved = function (providers) {\n            return unimplemented();\n        };\n        /**\n         * Resolves a provider and instantiates an object in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         *\n         * var car = injector.resolveAndInstantiate(Car);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n         * ```\n         */\n        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { return unimplemented(); };\n        /**\n         * Instantiates an object using a resolved provider in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n         * var car = injector.instantiateResolved(carProvider);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n         * ```\n         */\n        ReflectiveInjector.prototype.instantiateResolved = function (provider) { return unimplemented(); };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_proto /* ProtoInjector */, _parent) {\n            if (_parent === void 0) { _parent = null; }\n            /** @internal */\n            this._constructionCounter = 0;\n            this._proto = _proto;\n            this._parent = _parent;\n            this._strategy = _proto._strategy.createInjectorStrategy(this);\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.getAt = function (index) { return this._strategy.getObjAtIndex(index); };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ReflectiveInjector_.prototype, \"internalStrategy\", {\n            /**\n             * @internal\n             * Internal. Do not use.\n             * We return `any` not to export the InjectorStrategy type.\n             */\n            get: function () { return this._strategy; },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var proto = new ReflectiveProtoInjector(providers);\n            var inj = new ReflectiveInjector_(proto);\n            inj._parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {\n                throw new CyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = ListWrapper.createFixedSize(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps = ResolvedReflectiveFactory.dependencies;\n            var length = deps.length;\n            var d0;\n            var d1;\n            var d2;\n            var d3;\n            var d4;\n            var d5;\n            var d6;\n            var d7;\n            var d8;\n            var d9;\n            var d10;\n            var d11;\n            var d12;\n            var d13;\n            var d14;\n            var d15;\n            var d16;\n            var d17;\n            var d18;\n            var d19;\n            try {\n                d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;\n                d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;\n                d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;\n                d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;\n                d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;\n                d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;\n                d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;\n                d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;\n                d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;\n                d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;\n                d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;\n                d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;\n                d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;\n                d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;\n                d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;\n                d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;\n                d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;\n                d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;\n                d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;\n                d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;\n            }\n            catch (e) {\n                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                switch (length) {\n                    case 0:\n                        obj = factory();\n                        break;\n                    case 1:\n                        obj = factory(d0);\n                        break;\n                    case 2:\n                        obj = factory(d0, d1);\n                        break;\n                    case 3:\n                        obj = factory(d0, d1, d2);\n                        break;\n                    case 4:\n                        obj = factory(d0, d1, d2, d3);\n                        break;\n                    case 5:\n                        obj = factory(d0, d1, d2, d3, d4);\n                        break;\n                    case 6:\n                        obj = factory(d0, d1, d2, d3, d4, d5);\n                        break;\n                    case 7:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6);\n                        break;\n                    case 8:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);\n                        break;\n                    case 9:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);\n                        break;\n                    case 10:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);\n                        break;\n                    case 11:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);\n                        break;\n                    case 12:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);\n                        break;\n                    case 13:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);\n                        break;\n                    case 14:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);\n                        break;\n                    case 15:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);\n                        break;\n                    case 16:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);\n                        break;\n                    case 17:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);\n                        break;\n                    case 18:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);\n                        break;\n                    case 19:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);\n                        break;\n                    case 20:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);\n                        break;\n                    default:\n                        throw new Error(\"Cannot instantiate '\" + provider.key.displayName + \"' because it has more than 20 dependencies\");\n                }\n            }\n            catch (e) {\n                throw new InstantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (provider, dep) {\n            return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, lowerBoundVisibility, upperBoundVisibility, notFoundValue) {\n            if (key === INJECTOR_KEY) {\n                return this;\n            }\n            if (upperBoundVisibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw new NoProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._strategy.getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, lowerBoundVisibility) {\n            var inj;\n            if (lowerBoundVisibility instanceof SkipSelf) {\n                inj = this._parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._strategy.getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_._parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        return ReflectiveInjector_;\n    }());\n    var INJECTOR_KEY = ReflectiveKey.get(Injector);\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._proto.numberOfProviders);\n        for (var i = 0; i < injector._proto.numberOfProviders; ++i) {\n            res[i] = fn(injector._proto.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `Console`. To\n     * intercept error handling,\n     * write a custom exception handler that replaces this default as appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```javascript\n     *\n     * class MyErrorHandler implements ErrorHandler {\n     *   call(error, stackTrace = null, reason = null) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     * @stable\n     */\n    var ErrorHandler = (function () {\n        function ErrorHandler(rethrowError) {\n            if (rethrowError === void 0) { rethrowError = true; }\n            /**\n             * @internal\n             */\n            this._console = console;\n            this.rethrowError = rethrowError;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var originalStack = this._findOriginalStack(error);\n            var context = this._findContext(error);\n            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n            if (originalError) {\n                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n            }\n            if (originalStack) {\n                this._console.error('ORIGINAL STACKTRACE:');\n                this._console.error(originalStack);\n            }\n            if (context) {\n                this._console.error('ERROR CONTEXT:');\n                this._console.error(context);\n            }\n            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n            if (this.rethrowError)\n                throw error;\n        };\n        /** @internal */\n        ErrorHandler.prototype._extractMessage = function (error) {\n            return error instanceof Error ? error.message : error.toString();\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return error.context ? error.context :\n                    this._findContext(error.originalError);\n            }\n            else {\n                return null;\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = error.originalError;\n            while (e && e.originalError) {\n                e = e.originalError;\n            }\n            return e;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalStack = function (error) {\n            if (!(error instanceof Error))\n                return null;\n            var e = error;\n            var stack = e.stack;\n            while (e instanceof Error && e.originalError) {\n                e = e.originalError;\n                if (e instanceof Error && e.stack) {\n                    stack = e.stack;\n                }\n            }\n            return stack;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new OpaqueToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this._done = false;\n            var asyncInitPromises = [];\n            if (appInits) {\n                for (var i = 0; i < appInits.length; i++) {\n                    var initResult = appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n            if (asyncInitPromises.length === 0) {\n                this._done = true;\n            }\n        }\n        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n            get: function () { return this._done; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n            get: function () { return this._donePromise; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationInitStatus.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n        ];\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new OpaqueToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: []\n    };\n    function _randomChar() {\n        return StringWrapper.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\n    var Console = (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) { print(message); };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) { warn(message); };\n        Console.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Console.ctorParameters = [];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a component is still being loaded in a synchronous compile.\n     *\n     * @stable\n     */\n    var ComponentStillLoadingError = (function (_super) {\n        __extends$4(ComponentStillLoadingError, _super);\n        function ComponentStillLoadingError(compType) {\n            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n            this.compType = compType;\n        }\n        return ComponentStillLoadingError;\n    }(BaseError));\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     * @stable\n     */\n    var Compiler = (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents`\n         * have to be inlined. Otherwise throws a {@link ComponentStillLoadingError}.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    var DefaultIterableDifferFactory = (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @stable\n     */\n    var DefaultIterableDiffer = (function () {\n        function DefaultIterableDiffer(_trackByFn) {\n            this._trackByFn = _trackByFn;\n            this._length = null;\n            this._collection = null;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = isPresent(this._trackByFn) ? this._trackByFn : trackByIdentity;\n        }\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n            get: function () { return this._collection; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n            get: function () { return this._length; },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (isBlank(collection))\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        // todo(vicb): optim for UnmodifiableListView (frozen arrays)\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (isArray(collection)) {\n                var list = collection;\n                this._length = collection.length;\n                for (index = 0; index < this._length; index++) {\n                    item = list[index];\n                    itemTrackBy = this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item /** TODO #9100 */) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this._length = index;\n            }\n            this._truncate(record);\n            this._collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record;\n                var nextRecord;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link CollectionChangeRecord}s from the previous collection\n         *\n         * - `record` The first excess {@link CollectionChangeRecord}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // todo(vicb)\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // todo(vicb)\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // todo(vicb)\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // todo(vicb)\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // todo(vicb)\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // todo(vicb)\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // todo(vicb)\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype.toString = function () {\n            var list = [];\n            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n            var previous = [];\n            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n            var additions = [];\n            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n            var moves = [];\n            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n            var removals = [];\n            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n            var identityChanges = [];\n            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n            return 'collection: ' + list.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'moves: ' + moves.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n' +\n                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n        };\n        return DefaultIterableDiffer;\n    }());\n    /**\n     * @stable\n     */\n    var CollectionChangeRecord = (function () {\n        function CollectionChangeRecord(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        CollectionChangeRecord.prototype.toString = function () {\n            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                stringify(this.item) + '[' +\n                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n        };\n        return CollectionChangeRecord;\n    }());\n    // A linked list of CollectionChangeRecords with the same CollectionChangeRecord.item\n    var _DuplicateItemRecordList = (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a CollectionChangeRecord having CollectionChangeRecord.trackById == trackById and\n        // CollectionChangeRecord.currentIndex >= afterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // todo(vicb)\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            // todo(vicb) handle corner cases\n            var key = getMapKey(record.trackById);\n            var duplicates = this.map.get(key);\n            if (!isPresent(duplicates)) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n         * have already iterated over, we use the afterIndex to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the last `a` not the first or second.\n         */\n        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n            if (afterIndex === void 0) { afterIndex = null; }\n            var key = getMapKey(trackById);\n            var recordList = this.map.get(key);\n            return isBlank(recordList) ? null : recordList.get(trackById, afterIndex);\n        };\n        /**\n         * Removes a {@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = getMapKey(record.trackById);\n            // todo(vicb)\n            // assert(this.map.containsKey(key));\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    var DefaultKeyValueDifferFactory = (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + map + \"'\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var records = this._records;\n            var oldSeqRecord = this._mapHead;\n            var lastOldSeqRecord = null;\n            var lastNewSeqRecord = null;\n            var seqChanged = false;\n            this._forEach(map, function (value, key) {\n                var newSeqRecord;\n                if (oldSeqRecord && key === oldSeqRecord.key) {\n                    newSeqRecord = oldSeqRecord;\n                    _this._maybeAddToChanges(newSeqRecord, value);\n                }\n                else {\n                    seqChanged = true;\n                    if (oldSeqRecord !== null) {\n                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n                        _this._addToRemovals(oldSeqRecord);\n                    }\n                    if (records.has(key)) {\n                        newSeqRecord = records.get(key);\n                        _this._maybeAddToChanges(newSeqRecord, value);\n                    }\n                    else {\n                        newSeqRecord = new KeyValueChangeRecord(key);\n                        records.set(key, newSeqRecord);\n                        newSeqRecord.currentValue = value;\n                        _this._addToAdditions(newSeqRecord);\n                    }\n                }\n                if (seqChanged) {\n                    if (_this._isInRemovals(newSeqRecord)) {\n                        _this._removeFromRemovals(newSeqRecord);\n                    }\n                    if (lastNewSeqRecord == null) {\n                        _this._mapHead = newSeqRecord;\n                    }\n                    else {\n                        lastNewSeqRecord._next = newSeqRecord;\n                    }\n                }\n                lastOldSeqRecord = oldSeqRecord;\n                lastNewSeqRecord = newSeqRecord;\n                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n            });\n            this._truncate(lastOldSeqRecord, oldSeqRecord);\n            return this.isDirty;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // Record the state of the mapping\n                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = this._removalsTail = null;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n            while (record !== null) {\n                if (lastRecord === null) {\n                    this._mapHead = null;\n                }\n                else {\n                    lastRecord._next = null;\n                }\n                var nextRecord = record._next;\n                this._addToRemovals(record);\n                lastRecord = record;\n                record = nextRecord;\n            }\n            for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n                rec.previousValue = rec.currentValue;\n                rec.currentValue = null;\n                this._records.delete(rec.key);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n            return record === this._removalsHead || record._nextRemoved !== null ||\n                record._prevRemoved !== null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n            if (this._removalsHead === null) {\n                this._removalsHead = this._removalsTail = record;\n            }\n            else {\n                this._removalsTail._nextRemoved = record;\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n            var next = record._next;\n            if (prev === null) {\n                this._mapHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            record._next = null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            record._prevRemoved = record._nextRemoved = null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype.toString = function () {\n            var items = [];\n            var previous = [];\n            var changes = [];\n            var additions = [];\n            var removals = [];\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                items.push(stringify(record));\n            }\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                previous.push(stringify(record));\n            }\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                changes.push(stringify(record));\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                additions.push(stringify(record));\n            }\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                removals.push(stringify(record));\n            }\n            return 'map: ' + items.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'changes: ' + changes.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n';\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                StringMapWrapper.forEach(obj, fn);\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    /**\n     * @stable\n     */\n    var KeyValueChangeRecord = (function () {\n        function KeyValueChangeRecord(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        KeyValueChangeRecord.prototype.toString = function () {\n            return looseIdentical(this.previousValue, this.currentValue) ?\n                stringify(this.key) :\n                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n                    stringify(this.currentValue) + ']');\n        };\n        return KeyValueChangeRecord;\n    }());\n\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     * @stable\n     */\n    var IterableDiffers = (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var copied = ListWrapper.clone(parent.factories);\n                factories = factories.concat(copied);\n                return new IterableDiffers(factories);\n            }\n            else {\n                return new IterableDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n               * which will only be applied to the injector for this component and its children.\n               * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (isBlank(parent)) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        return IterableDiffers;\n    }());\n\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     * @stable\n     */\n    var KeyValueDiffers = (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var copied = ListWrapper.clone(parent.factories);\n                factories = factories.concat(copied);\n                return new KeyValueDiffers(factories);\n            }\n            else {\n                return new KeyValueDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n               * which will only be applied to the injector for this component and its children.\n               * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (isBlank(parent)) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n            }\n        };\n        return KeyValueDiffers;\n    }());\n\n    var UNINITIALIZED = {\n        toString: function () { return 'CD_INIT_VALUE'; }\n    };\n    function devModeEqual(a, b) {\n        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference\n     * has not changed.\n     *\n     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     * @stable\n     */\n    var WrappedValue = (function () {\n        function WrappedValue(wrapped) {\n            this.wrapped = wrapped;\n        }\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        return WrappedValue;\n    }());\n    /**\n     * Helper class for unwrapping WrappedValue s\n     */\n    var ValueUnwrapper = (function () {\n        function ValueUnwrapper() {\n            this.hasWrappedValue = false;\n        }\n        ValueUnwrapper.prototype.unwrap = function (value) {\n            if (value instanceof WrappedValue) {\n                this.hasWrappedValue = true;\n                return value.wrapped;\n            }\n            return value;\n        };\n        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n        return ValueUnwrapper;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     * @stable\n     */\n    var SimpleChange = (function () {\n        function SimpleChange(previousValue, currentValue) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @stable\n     */\n    var ChangeDetectorRef = (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @experimental\n     */\n    // TODO (matsko): add typing for the animation function\n    var RenderComponentType = (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    var RenderDebugInfo = (function () {\n        function RenderDebugInfo() {\n        }\n        Object.defineProperty(RenderDebugInfo.prototype, \"injector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"component\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"providerTokens\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"references\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"context\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"source\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return RenderDebugInfo;\n    }());\n    /**\n     * @experimental\n     */\n    var Renderer = (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link #setElementProperty} or {@link #setElementAttribute}\n     * respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     * @experimental\n     */\n    var RootRenderer = (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n     * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n     * handled.\n     *\n     * See DomSanitizer for more details on security in Angular applications.\n     *\n     * @stable\n     */\n    exports.SecurityContext;\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @stable\n     */\n    var Sanitizer = (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @stable\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = global$1['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     * @stable\n     */\n    var ViewContainerRef = (function () {\n        function ViewContainerRef() {\n        }\n        Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n            /**\n             * Anchor element that specifies the location of this container in the containing View.\n             * <!-- TODO: rename to anchorElement -->\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            /**\n             * Returns the number of Views currently attached to this container.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return ViewContainerRef;\n    }());\n    var ViewContainerRef_ = (function () {\n        function ViewContainerRef_(_element) {\n            this._element = _element;\n            /** @internal */\n            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n            /** @internal */\n            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n            /** @internal */\n            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n            /** @internal */\n            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n        }\n        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () {\n                var views = this._element.nestedViews;\n                return isPresent(views) ? views.length : 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return this._element.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return this._element.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () { return this._element.parentInjector; },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(rado): profile and decide whether bounds checks should be added\n        // to the methods below.\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            if (context === void 0) { context = null; }\n            if (index === void 0) { index = -1; }\n            var viewRef = templateRef.createEmbeddedView(context);\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n            if (index === void 0) { index = -1; }\n            if (injector === void 0) { injector = null; }\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            var s = this._createComponentInContainerScope();\n            var contextInjector = isPresent(injector) ? injector : this._element.parentInjector;\n            var componentRef = componentFactory.create(contextInjector, projectableNodes);\n            this.insert(componentRef.hostView, index);\n            return wtfLeave(s, componentRef);\n        };\n        // TODO(i): refactor insert+remove into move\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (index === void 0) { index = -1; }\n            var s = this._insertScope();\n            if (index == -1)\n                index = this.length;\n            var viewRef_ = viewRef;\n            this._element.attachView(viewRef_.internalView, index);\n            return wtfLeave(s, viewRef_);\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            var s = this._insertScope();\n            if (currentIndex == -1)\n                return;\n            var viewRef_ = viewRef;\n            this._element.moveView(viewRef_.internalView, currentIndex);\n            return wtfLeave(s, viewRef_);\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return ListWrapper.indexOf(this._element.nestedViews, viewRef.internalView);\n        };\n        // TODO(i): rename to destroy\n        ViewContainerRef_.prototype.remove = function (index) {\n            if (index === void 0) { index = -1; }\n            var s = this._removeScope();\n            if (index == -1)\n                index = this.length - 1;\n            var view = this._element.detachView(index);\n            view.destroy();\n            // view is intentionally not returned to the client.\n            wtfLeave(s);\n        };\n        // TODO(i): refactor insert+remove into move\n        ViewContainerRef_.prototype.detach = function (index) {\n            if (index === void 0) { index = -1; }\n            var s = this._detachScope();\n            if (index == -1)\n                index = this.length - 1;\n            var view = this._element.detachView(index);\n            return wtfLeave(s, view.ref);\n        };\n        ViewContainerRef_.prototype.clear = function () {\n            for (var i = this.length - 1; i >= 0; i--) {\n                this.remove(i);\n            }\n        };\n        return ViewContainerRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewType;\n    (function (ViewType) {\n        // A view that contains the host element with bound component directive.\n        // Contains a COMPONENT view\n        ViewType[ViewType[\"HOST\"] = 0] = \"HOST\";\n        // The view of the component\n        // Can contain 0 to n EMBEDDED views\n        ViewType[ViewType[\"COMPONENT\"] = 1] = \"COMPONENT\";\n        // A view that is embedded into another View via a <template> element\n        // inside of a COMPONENT view\n        ViewType[ViewType[\"EMBEDDED\"] = 2] = \"EMBEDDED\";\n    })(ViewType || (ViewType = {}));\n\n    /**\n     * An AppElement is created for elements that have a ViewContainerRef,\n     * a nested component or a <template> element to keep data around\n     * that is needed for later instantiations.\n     */\n    var AppElement = (function () {\n        function AppElement(index, parentIndex, parentView, nativeElement) {\n            this.index = index;\n            this.parentIndex = parentIndex;\n            this.parentView = parentView;\n            this.nativeElement = nativeElement;\n            this.nestedViews = null;\n            this.componentView = null;\n        }\n        Object.defineProperty(AppElement.prototype, \"elementRef\", {\n            get: function () { return new ElementRef(this.nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppElement.prototype, \"vcRef\", {\n            get: function () { return new ViewContainerRef_(this); },\n            enumerable: true,\n            configurable: true\n        });\n        AppElement.prototype.initComponent = function (component, componentConstructorViewQueries, view) {\n            this.component = component;\n            this.componentConstructorViewQueries = componentConstructorViewQueries;\n            this.componentView = view;\n        };\n        Object.defineProperty(AppElement.prototype, \"parentInjector\", {\n            get: function () { return this.parentView.injector(this.parentIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppElement.prototype, \"injector\", {\n            get: function () { return this.parentView.injector(this.index); },\n            enumerable: true,\n            configurable: true\n        });\n        AppElement.prototype.mapNestedViews = function (nestedViewClass, callback) {\n            var result = [];\n            if (isPresent(this.nestedViews)) {\n                this.nestedViews.forEach(function (nestedView) {\n                    if (nestedView.clazz === nestedViewClass) {\n                        result.push(callback(nestedView));\n                    }\n                });\n            }\n            return result;\n        };\n        AppElement.prototype.moveView = function (view, currentIndex) {\n            var previousIndex = this.nestedViews.indexOf(view);\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            ListWrapper.removeAt(nestedViews, previousIndex);\n            ListWrapper.insert(nestedViews, currentIndex, view);\n            var refRenderNode;\n            if (currentIndex > 0) {\n                var prevView = nestedViews[currentIndex - 1];\n                refRenderNode = prevView.lastRootNode;\n            }\n            else {\n                refRenderNode = this.nativeElement;\n            }\n            if (isPresent(refRenderNode)) {\n                view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n            }\n            view.markContentChildAsMoved(this);\n        };\n        AppElement.prototype.attachView = function (view, viewIndex) {\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            ListWrapper.insert(nestedViews, viewIndex, view);\n            var refRenderNode;\n            if (viewIndex > 0) {\n                var prevView = nestedViews[viewIndex - 1];\n                refRenderNode = prevView.lastRootNode;\n            }\n            else {\n                refRenderNode = this.nativeElement;\n            }\n            if (isPresent(refRenderNode)) {\n                view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n            }\n            view.addToContentChildren(this);\n        };\n        AppElement.prototype.detachView = function (viewIndex) {\n            var view = ListWrapper.removeAt(this.nestedViews, viewIndex);\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            view.detach();\n            view.removeFromContentChildren(this);\n            return view;\n        };\n        return AppElement;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An error thrown if application changes model breaking the top-down data flow.\n     *\n     * This exception is only thrown in dev mode.\n     *\n     * <!-- TODO: Add a link once the dev mode option is configurable -->\n     *\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'parent',\n     *   template: `\n     *     <child [prop]=\"parentProp\"></child>\n     *   `,\n     *   directives: [forwardRef(() => Child)]\n     * })\n     * class Parent {\n     *   parentProp = \"init\";\n     * }\n     *\n     * @Directive({selector: 'child', inputs: ['prop']})\n     * class Child {\n     *   constructor(public parent: Parent) {}\n     *\n     *   set prop(v) {\n     *     // this updates the parent property, which is disallowed during change detection\n     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n     *     this.parent.parentProp = \"updated\";\n     *   }\n     * }\n     * ```\n     * @stable\n     */\n    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n        __extends$6(ExpressionChangedAfterItHasBeenCheckedError, _super);\n        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (oldValue === UNINITIALIZED) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            _super.call(this, msg);\n        }\n        return ExpressionChangedAfterItHasBeenCheckedError;\n    }(BaseError));\n    /**\n     * Thrown when an exception was raised during view creation, change detection or destruction.\n     *\n     * This error wraps the original exception to attach additional contextual information that can\n     * be useful for debugging.\n     * @stable\n     */\n    var ViewWrappedError = (function (_super) {\n        __extends$6(ViewWrappedError, _super);\n        function ViewWrappedError(originalError, context) {\n            _super.call(this, \"Error in \" + context.source, originalError);\n            this.context = context;\n        }\n        return ViewWrappedError;\n    }(WrappedError));\n    /**\n     * Thrown when a destroyed view is used.\n     *\n     * This error indicates a bug in the framework.\n     *\n     * This is an internal Angular error.\n     * @stable\n     */\n    var ViewDestroyedError = (function (_super) {\n        __extends$6(ViewDestroyedError, _super);\n        function ViewDestroyedError(details) {\n            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n        }\n        return ViewDestroyedError;\n    }(BaseError));\n\n    var ViewUtils = (function () {\n        function ViewUtils(_renderer, _appId, sanitizer) {\n            this._renderer = _renderer;\n            this._appId = _appId;\n            this._nextCompTypeId = 0;\n            this.sanitizer = sanitizer;\n        }\n        /**\n         * Used by the generated code\n         */\n        // TODO (matsko): add typing for the animation function\n        ViewUtils.prototype.createRenderComponentType = function (templateUrl, slotCount, encapsulation, styles, animations) {\n            return new RenderComponentType(this._appId + \"-\" + this._nextCompTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n        };\n        /** @internal */\n        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n            return this._renderer.renderComponent(renderComponentType);\n        };\n        ViewUtils.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ViewUtils.ctorParameters = [\n            { type: RootRenderer, },\n            { type: undefined, decorators: [{ type: Inject, args: [APP_ID,] },] },\n            { type: Sanitizer, },\n        ];\n        return ViewUtils;\n    }());\n    function flattenNestedViewRenderNodes(nodes) {\n        return _flattenNestedViewRenderNodes(nodes, []);\n    }\n    function _flattenNestedViewRenderNodes(nodes, renderNodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (node instanceof AppElement) {\n                var appEl = node;\n                renderNodes.push(appEl.nativeElement);\n                if (isPresent(appEl.nestedViews)) {\n                    for (var k = 0; k < appEl.nestedViews.length; k++) {\n                        _flattenNestedViewRenderNodes(appEl.nestedViews[k].rootNodesOrAppElements, renderNodes);\n                    }\n                }\n            }\n            else {\n                renderNodes.push(node);\n            }\n        }\n        return renderNodes;\n    }\n    var EMPTY_ARR = [];\n    function ensureSlotCount(projectableNodes, expectedSlotCount) {\n        var res;\n        if (isBlank(projectableNodes)) {\n            res = EMPTY_ARR;\n        }\n        else if (projectableNodes.length < expectedSlotCount) {\n            var givenSlotCount = projectableNodes.length;\n            res = ListWrapper.createFixedSize(expectedSlotCount);\n            for (var i = 0; i < expectedSlotCount; i++) {\n                res[i] = (i < givenSlotCount) ? projectableNodes[i] : EMPTY_ARR;\n            }\n        }\n        else {\n            res = projectableNodes;\n        }\n        return res;\n    }\n    var MAX_INTERPOLATION_VALUES = 9;\n    function interpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    function checkBinding(throwOnChange, oldValue, newValue) {\n        if (throwOnChange) {\n            if (!devModeEqual(oldValue, newValue)) {\n                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n            }\n            return false;\n        }\n        else {\n            return !looseIdentical(oldValue, newValue);\n        }\n    }\n    function castByValue(input, value) {\n        return input;\n    }\n    var EMPTY_ARRAY = [];\n    var EMPTY_MAP = {};\n    function pureProxy1(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        return function (p0) {\n            if (!looseIdentical(v0, p0)) {\n                v0 = p0;\n                result = fn(p0);\n            }\n            return result;\n        };\n    }\n    function pureProxy2(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        var v1 = UNINITIALIZED;\n        return function (p0, p1) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n                v0 = p0;\n                v1 = p1;\n                result = fn(p0, p1);\n            }\n            return result;\n        };\n    }\n    function pureProxy3(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        var v1 = UNINITIALIZED;\n        var v2 = UNINITIALIZED;\n        return function (p0, p1, p2) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                result = fn(p0, p1, p2);\n            }\n            return result;\n        };\n    }\n    function pureProxy4(fn) {\n        var result;\n        var v0, v1, v2, v3;\n        v0 = v1 = v2 = v3 = UNINITIALIZED;\n        return function (p0, p1, p2, p3) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                result = fn(p0, p1, p2, p3);\n            }\n            return result;\n        };\n    }\n    function pureProxy5(fn) {\n        var result;\n        var v0, v1, v2, v3, v4;\n        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                result = fn(p0, p1, p2, p3, p4);\n            }\n            return result;\n        };\n    }\n    function pureProxy6(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5;\n        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                result = fn(p0, p1, p2, p3, p4, p5);\n            }\n            return result;\n        };\n    }\n    function pureProxy7(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                result = fn(p0, p1, p2, p3, p4, p5, p6);\n            }\n            return result;\n        };\n    }\n    function pureProxy8(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n            }\n            return result;\n        };\n    }\n    function pureProxy9(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7, v8;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n            }\n            return result;\n        };\n    }\n    function pureProxy10(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n                !looseIdentical(v9, p9)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                v9 = p9;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     * @stable\n     */\n    var ComponentRef = (function () {\n        function ComponentRef() {\n        }\n        Object.defineProperty(ComponentRef.prototype, \"location\", {\n            /**\n             * Location of the Host Element of this Component Instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            /**\n             * The injector on which the component instance exists.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"instance\", {\n            /**\n             * The instance of the Component.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef.prototype, \"hostView\", {\n            /**\n             * The {@link ViewRef} of the Host View of this Component instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef.prototype, \"changeDetectorRef\", {\n            /**\n             * The {@link ChangeDetectorRef} of the Component instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"componentType\", {\n            /**\n             * The component type.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return ComponentRef;\n    }());\n    var ComponentRef_ = (function (_super) {\n        __extends$5(ComponentRef_, _super);\n        function ComponentRef_(_hostElement, _componentType) {\n            _super.call(this);\n            this._hostElement = _hostElement;\n            this._componentType = _componentType;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () { return this._hostElement.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return this._hostElement.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n            get: function () { return this._hostElement.component; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n            get: function () { return this._hostElement.parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n            get: function () { return this._hostElement.parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._componentType; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._hostElement.parentView.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    /**\n     * @experimental\n     */\n    var EMPTY_CONTEXT = new Object();\n    /**\n     * @stable\n     */\n    var ComponentFactory = (function () {\n        function ComponentFactory(selector, _viewFactory, _componentType) {\n            this.selector = selector;\n            this._viewFactory = _viewFactory;\n            this._componentType = _componentType;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n            get: function () { return this._componentType; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n            var vu = injector.get(ViewUtils);\n            if (isBlank(projectableNodes)) {\n                projectableNodes = [];\n            }\n            // Note: Host views don't need a declarationAppElement!\n            var hostView = this._viewFactory(vu, injector, null);\n            var hostElement = hostView.create(EMPTY_CONTEXT, projectableNodes, rootSelectorOrNode);\n            return new ComponentRef_(hostElement, this._componentType);\n        };\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var NoComponentFactoryError = (function (_super) {\n        __extends$7(NoComponentFactoryError, _super);\n        function NoComponentFactoryError(component) {\n            _super.call(this, \"No component factory found for \" + stringify(component));\n            this.component = component;\n        }\n        return NoComponentFactoryError;\n    }(BaseError));\n    var _NullComponentFactoryResolver = (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw new NoComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @stable\n     */\n    var ComponentFactoryResolver = (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = (function () {\n        function CodegenComponentFactoryResolver(factories, _parent) {\n            this._parent = _parent;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var result = this._factories.get(component);\n            if (!result) {\n                result = this._parent.resolveComponentFactory(component);\n            }\n            return result;\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$8(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value /** TODO #9100 */) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n                    setTimeout(function () { return generatorOrNext(value); });\n                } : function (value /** TODO #9100 */) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NgZoneImpl = (function () {\n        function NgZoneImpl(_a) {\n            var _this = this;\n            var trace = _a.trace, onEnter = _a.onEnter, onLeave = _a.onLeave, setMicrotask = _a.setMicrotask, setMacrotask = _a.setMacrotask, onError = _a.onError;\n            this.onEnter = onEnter;\n            this.onLeave = onLeave;\n            this.setMicrotask = setMicrotask;\n            this.setMacrotask = setMacrotask;\n            this.onError = onError;\n            if (typeof Zone == 'undefined') {\n                throw new Error('Angular requires Zone.js prolyfill.');\n            }\n            Zone.assertZonePatched();\n            this.outer = this.inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (trace && Zone['longStackTraceZoneSpec']) {\n                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            this.inner = this.inner.fork({\n                name: 'angular',\n                properties: { 'isAngularZone': true },\n                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onHasTask: function (delegate, current, target, hasTaskState) {\n                    delegate.hasTask(target, hasTaskState);\n                    if (current === target) {\n                        // We are only interested in hasTask events which originate from our zone\n                        // (A child hasTask event is not interesting to us)\n                        if (hasTaskState.change == 'microTask') {\n                            _this.setMicrotask(hasTaskState.microTask);\n                        }\n                        else if (hasTaskState.change == 'macroTask') {\n                            _this.setMacrotask(hasTaskState.macroTask);\n                        }\n                    }\n                },\n                onHandleError: function (delegate, current, target, error) {\n                    delegate.handleError(target, error);\n                    _this.onError(error);\n                    return false;\n                }\n            });\n        }\n        NgZoneImpl.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZoneImpl.prototype.runInner = function (fn) { return this.inner.run(fn); };\n        ;\n        NgZoneImpl.prototype.runInnerGuarded = function (fn) { return this.inner.runGuarded(fn); };\n        ;\n        NgZoneImpl.prototype.runOuter = function (fn) { return this.outer.run(fn); };\n        ;\n        return NgZoneImpl;\n    }());\n\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/lY9m8HLy7z06vDoUaSN2?p=preview))\n     * ```\n     * import {Component, View, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo'.\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     *   directives: [NgIf]\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *       // reenter the Angular zone and display done\n     *       this._ngZone.run(() => {console.log('Outside Done!') });\n     *     }}));\n     *   }\n     *\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     * @experimental\n     */\n    var NgZone = (function () {\n        function NgZone(_a) {\n            var _this = this;\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this._hasPendingMicrotasks = false;\n            this._hasPendingMacrotasks = false;\n            /** @internal */\n            this._isStable = true;\n            /** @internal */\n            this._nesting = 0;\n            /** @internal */\n            this._onUnstable = new EventEmitter(false);\n            /** @internal */\n            this._onMicrotaskEmpty = new EventEmitter(false);\n            /** @internal */\n            this._onStable = new EventEmitter(false);\n            /** @internal */\n            this._onErrorEvents = new EventEmitter(false);\n            this._zoneImpl = new NgZoneImpl({\n                trace: enableLongStackTrace,\n                onEnter: function () {\n                    // console.log('ZONE.enter', this._nesting, this._isStable);\n                    _this._nesting++;\n                    if (_this._isStable) {\n                        _this._isStable = false;\n                        _this._onUnstable.emit(null);\n                    }\n                },\n                onLeave: function () {\n                    _this._nesting--;\n                    // console.log('ZONE.leave', this._nesting, this._isStable);\n                    _this._checkStable();\n                },\n                setMicrotask: function (hasMicrotasks) {\n                    _this._hasPendingMicrotasks = hasMicrotasks;\n                    _this._checkStable();\n                },\n                setMacrotask: function (hasMacrotasks) { _this._hasPendingMacrotasks = hasMacrotasks; },\n                onError: function (error) { return _this._onErrorEvents.emit(error); }\n            });\n        }\n        NgZone.isInAngularZone = function () { return NgZoneImpl.isInAngularZone(); };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZoneImpl.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZoneImpl.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        NgZone.prototype._checkStable = function () {\n            var _this = this;\n            if (this._nesting == 0) {\n                if (!this._hasPendingMicrotasks && !this._isStable) {\n                    try {\n                        // console.log('ZONE.microtaskEmpty');\n                        this._nesting++;\n                        this._onMicrotaskEmpty.emit(null);\n                    }\n                    finally {\n                        this._nesting--;\n                        if (!this._hasPendingMicrotasks) {\n                            try {\n                                // console.log('ZONE.stable', this._nesting, this._isStable);\n                                this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n                            }\n                            finally {\n                                this._isStable = true;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        ;\n        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            get: function () { return this._onUnstable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n            /**\n             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            get: function () { return this._onMicrotaskEmpty; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onStable\", {\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            get: function () { return this._onStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onError\", {\n            /**\n             * Notify that an error has been delivered.\n             */\n            get: function () { return this._onErrorEvents; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"isStable\", {\n            /**\n             * Whether there are no outstanding microtasks or microtasks.\n             */\n            get: function () { return this._isStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n            /**\n             * Whether there are any outstanding microtasks.\n             */\n            get: function () { return this._hasPendingMicrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n            /**\n             * Whether there are any outstanding microtasks.\n             */\n            get: function () { return this._hasPendingMacrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn) { return this._zoneImpl.runInner(fn); };\n        /**\n         * Same as #run, except that synchronous errors are caught and forwarded\n         * via `onError` and not rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn) { return this._zoneImpl.runInnerGuarded(fn); };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) { return this._zoneImpl.runOuter(fn); };\n        return NgZone;\n    }());\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = (function () {\n        function Testability(_ngZone) {\n            this._ngZone = _ngZone;\n            /** @internal */\n            this._pendingCount = 0;\n            /** @internal */\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            /** @internal */\n            this._callbacks = [];\n            this._watchAngularEvents();\n        }\n        /** @internal */\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        /** @internal */\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        (_this._callbacks.pop())(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Not Ready\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.whenStable = function (callback) {\n            this._callbacks.push(callback);\n            this._runCallbacksIfReady();\n        };\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = [\n            { type: NgZone, },\n        ];\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map$1();\n            _testabilityGetter.addToWindow(this);\n        }\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return MapWrapper.values(this._applications); };\n        TestabilityRegistry.prototype.getAllRootElements = function () { return MapWrapper.keys(this._applications); };\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = [];\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @stable\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (isPresent(_platform) && !_platform.destroyed) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (isPresent(inits))\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlaformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var marker = new OpaqueToken(\"Platform: \" + name);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            if (!getPlatform()) {\n                if (parentPlaformFactory) {\n                    parentPlaformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform\n     * which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (isBlank(platform)) {\n            throw new Error('No platform exists!');\n        }\n        if (isPresent(platform) && isBlank(platform.injector.get(requiredToken, null))) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (isPresent(_platform) && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return isPresent(_platform) && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n     * explicitly by calling {@link createPlatform}().\n     *\n     * @stable\n     */\n    var PlatformRef = (function () {\n        function PlatformRef() {\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            throw unimplemented();\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         * @stable\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            throw unimplemented();\n        };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return PlatformRef;\n    }());\n    function _callAndReportToErrorHandler(errorHandler, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    errorHandler.handleError(e);\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            else {\n                return result;\n            }\n        }\n        catch (e) {\n            errorHandler.handleError(e);\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    var PlatformRef_ = (function (_super) {\n        __extends$3(PlatformRef_, _super);\n        function PlatformRef_(_injector) {\n            _super.call(this);\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            ListWrapper.clone(this._modules).forEach(function (app) { return app.destroy(); });\n            this._destroyListeners.forEach(function (dispose) { return dispose(); });\n            this._destroyed = true;\n        };\n        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n        };\n        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            if (!ngZone)\n                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n                return _callAndReportToErrorHandler(exceptionHandler, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n        };\n        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var compiler = compilerFactory.createCompiler(compilerOptions instanceof Array ? compilerOptions : [compilerOptions]);\n            // ugly internal api hack: generate host component factories for all declared components and\n            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n            // factories.\n            if (componentFactoryCallback) {\n                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n                    .then(function (_a) {\n                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n                    componentFactoryCallback(componentFactories);\n                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n                });\n            }\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n        };\n        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef.bootstrapFactories.length > 0) {\n                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n                    \"Please define one of these.\");\n            }\n        };\n        PlatformRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        PlatformRef_.ctorParameters = [\n            { type: Injector, },\n        ];\n        return PlatformRef_;\n    }(PlatformRef));\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * For more about Angular applications, see the documentation for {@link bootstrap}.\n     *\n     * @stable\n     */\n    var ApplicationRef = (function () {\n        function ApplicationRef() {\n        }\n        Object.defineProperty(ApplicationRef.prototype, \"componentTypes\", {\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ApplicationRef.prototype, \"components\", {\n            /**\n             * Get a list of components registered to this application.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return ApplicationRef;\n    }());\n    var ApplicationRef_ = (function (_super) {\n        __extends$3(ApplicationRef_, _super);\n        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n            var _this = this;\n            _super.call(this);\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._testabilityRegistry = _testabilityRegistry;\n            this._testability = _testability;\n            this._bootstrapListeners = [];\n            this._rootComponents = [];\n            this._rootComponentTypes = [];\n            this._changeDetectorRefs = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        }\n        ApplicationRef_.prototype.registerChangeDetector = function (changeDetector) {\n            this._changeDetectorRefs.push(changeDetector);\n        };\n        ApplicationRef_.prototype.unregisterChangeDetector = function (changeDetector) {\n            ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n        };\n        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this._rootComponentTypes.push(componentFactory.componentType);\n            var compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (isPresent(testability)) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /** @internal */\n        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n            this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n            this.tick();\n            this._rootComponents.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n                .concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        /** @internal */\n        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n            if (!ListWrapper.contains(this._rootComponents, componentRef)) {\n                return;\n            }\n            this.unregisterChangeDetector(componentRef.changeDetectorRef);\n            ListWrapper.remove(this._rootComponents, componentRef);\n        };\n        ApplicationRef_.prototype.tick = function () {\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var s = ApplicationRef_._tickScope();\n            try {\n                this._runningTick = true;\n                this._changeDetectorRefs.forEach(function (detector) { return detector.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._changeDetectorRefs.forEach(function (detector) { return detector.checkNoChanges(); });\n                }\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(s);\n            }\n        };\n        ApplicationRef_.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            ListWrapper.clone(this._rootComponents).forEach(function (ref) { return ref.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n            get: function () { return this._rootComponentTypes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n            get: function () { return this._rootComponents; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationRef_.ctorParameters = [\n            { type: NgZone, },\n            { type: Console, },\n            { type: Injector, },\n            { type: ErrorHandler, },\n            { type: ComponentFactoryResolver, },\n            { type: ApplicationInitStatus, },\n            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n            { type: Testability, decorators: [{ type: Optional },] },\n        ];\n        return ApplicationRef_;\n    }(ApplicationRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @stable\n     */\n    var NgModuleRef = (function () {\n        function NgModuleRef() {\n        }\n        Object.defineProperty(NgModuleRef.prototype, \"injector\", {\n            /**\n             * The injector that contains all of the providers of the NgModule.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef.prototype, \"componentFactoryResolver\", {\n            /**\n             * The ComponentFactoryResolver to get hold of the ComponentFactories\n             * declared in the `entryComponents` property of the module.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef.prototype, \"instance\", {\n            /**\n             * The NgModule instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = (function () {\n        function NgModuleFactory(_injectorClass, _moduleType) {\n            this._injectorClass = _injectorClass;\n            this._moduleType = _moduleType;\n        }\n        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n            get: function () { return this._moduleType; },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            if (!parentInjector) {\n                parentInjector = Injector.NULL;\n            }\n            var instance = new this._injectorClass(parentInjector);\n            instance.create();\n            return instance;\n        };\n        return NgModuleFactory;\n    }());\n    var _UNDEFINED = new Object();\n    var NgModuleInjector = (function (_super) {\n        __extends$9(NgModuleInjector, _super);\n        function NgModuleInjector(parent, factories, bootstrapFactories) {\n            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n            this.parent = parent;\n            this.bootstrapFactories = bootstrapFactories;\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (token === Injector || token === ComponentFactoryResolver) {\n                return this;\n            }\n            var result = this.getInternal(token, _UNDEFINED);\n            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n        };\n        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleInjector.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            this.destroyInternal();\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleInjector;\n    }(CodegenComponentFactoryResolver));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     * @stable\n     */\n    var NgModuleFactoryLoader = (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link Query} and {@link ViewQueryMetadata} provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     * @stable\n     */\n    var QueryList = (function () {\n        function QueryList() {\n            this._dirty = true;\n            this._results = [];\n            this._emitter = new EventEmitter();\n        }\n        Object.defineProperty(QueryList.prototype, \"changes\", {\n            get: function () { return this._emitter; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"length\", {\n            get: function () { return this._results.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"first\", {\n            get: function () { return this._results[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"last\", {\n            get: function () { return this._results[this.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = ListWrapper.flatten(res);\n            this._dirty = false;\n        };\n        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this._dirty = true; };\n        Object.defineProperty(QueryList.prototype, \"dirty\", {\n            /** internal */\n            get: function () { return this._dirty; },\n            enumerable: true,\n            configurable: true\n        });\n        return QueryList;\n    }());\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            if (exportName === undefined)\n                exportName = 'default';\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = [\n            { type: Compiler, },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n        ];\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n     * `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use\n     * {@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n     * View Container.\n     * @stable\n     */\n    var TemplateRef = (function () {\n        function TemplateRef() {\n        }\n        Object.defineProperty(TemplateRef.prototype, \"elementRef\", {\n            /**\n             * The location in the View where the Embedded View logically belongs to.\n             *\n             * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n             * inherit from the contexts of this location.\n             *\n             * Typically new Embedded Views are attached to the View Container of this location, but in\n             * advanced use-cases, the View can be attached to a different container while keeping the\n             * data-binding and injection context from the original location.\n             *\n             */\n            // TODO(i): rename to anchor or location\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef;\n    }());\n    var TemplateRef_ = (function (_super) {\n        __extends$10(TemplateRef_, _super);\n        function TemplateRef_(_appElement, _viewFactory) {\n            _super.call(this);\n            this._appElement = _appElement;\n            this._viewFactory = _viewFactory;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            var view = this._viewFactory(this._appElement.parentView.viewUtils, this._appElement.parentInjector, this._appElement);\n            view.create(context || {}, null, null);\n            return view.ref;\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () { return this._appElement.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _queuedAnimations = [];\n    /** @internal */\n    function queueAnimation(player) {\n        _queuedAnimations.push(player);\n    }\n    /** @internal */\n    function triggerQueuedAnimations() {\n        for (var i = 0; i < _queuedAnimations.length; i++) {\n            var player = _queuedAnimations[i];\n            player.play();\n        }\n        _queuedAnimations = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var ViewRef = (function () {\n        function ViewRef() {\n        }\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return ViewRef;\n    }());\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {@link TemplateRef}s:\n     *\n     * Outer {@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n     * </ul>\n     * ```\n     *\n     * Inner {@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n     *\n     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <template view-container-ref></template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = (function (_super) {\n        __extends$11(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(EmbeddedViewRef.prototype, \"context\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(EmbeddedViewRef.prototype, \"rootNodes\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return EmbeddedViewRef;\n    }(ViewRef));\n    var ViewRef_ = (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._view = _view;\n            this._originalMode = this._view.cdMode;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n            get: function () { return this._view; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return this._view.flatRootNodes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return this._view.destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n        ViewRef_.prototype.detectChanges = function () {\n            this._view.detectChanges(false);\n            triggerQueuedAnimations();\n        };\n        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n        ViewRef_.prototype.reattach = function () {\n            this._view.cdMode = this._originalMode;\n            this.markForCheck();\n        };\n        ViewRef_.prototype.onDestroy = function (callback) { this._view.disposables.push(callback); };\n        ViewRef_.prototype.destroy = function () { this._view.destroy(); };\n        return ViewRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var EventListener = (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        ;\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = (function () {\n        function DebugNode(nativeNode, parent, _debugInfo) {\n            this._debugInfo = _debugInfo;\n            this.nativeNode = nativeNode;\n            if (isPresent(parent) && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.injector : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () {\n                return isPresent(this._debugInfo) ? this._debugInfo.component : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.context : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () {\n                return isPresent(this._debugInfo) ? this._debugInfo.references : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () {\n                return isPresent(this._debugInfo) ? this._debugInfo.providerTokens : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"source\", {\n            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.source : null; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = (function (_super) {\n        __extends$12(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugInfo) {\n            _super.call(this, nativeNode, parent, _debugInfo);\n            this.properties = {};\n            this.attributes = {};\n            this.classes = {};\n            this.styles = {};\n            this.childNodes = [];\n            this.nativeElement = nativeNode;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (isPresent(child)) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                var previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n                var nextChildren = this.childNodes.slice(siblingIndex + 1);\n                this.childNodes =\n                    ListWrapper.concat(ListWrapper.concat(previousChildren, newChildren), nextChildren);\n                for (var i = 0; i < newChildren.length; ++i) {\n                    var newChild = newChildren[i];\n                    if (isPresent(newChild.parent)) {\n                        newChild.parent.removeChild(newChild);\n                    }\n                    newChild.parent = this;\n                }\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results.length > 0 ? results[0] : null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                var children = [];\n                this.childNodes.forEach(function (node) {\n                    if (node instanceof DebugElement) {\n                        children.push(node);\n                    }\n                });\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode);\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    function _reflector() {\n        return reflector;\n    }\n    var _CORE_PLATFORM_PROVIDERS = [\n        PlatformRef_, { provide: PlatformRef, useExisting: PlatformRef_ },\n        { provide: Reflector, useFactory: _reflector, deps: [] },\n        { provide: ReflectorReader, useExisting: Reflector }, TestabilityRegistry, Console\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new OpaqueToken('LocaleId');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new OpaqueToken('Translations');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = (function () {\n        function ApplicationModule() {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{\n                        providers: [\n                            ApplicationRef_,\n                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                            ApplicationInitStatus,\n                            Compiler,\n                            APP_ID_RANDOM_PROVIDER,\n                            ViewUtils,\n                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                            { provide: LOCALE_ID, useValue: 'en-US' },\n                        ]\n                    },] },\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = [];\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n    var ANY_STATE = '*';\n    var DEFAULT_STATE = '*';\n    var EMPTY_STATE = 'void';\n\n    var Math$1 = global$1.Math;\n\n    var AnimationGroupPlayer = (function () {\n        function AnimationGroupPlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this.parentPlayer = null;\n            var count = 0;\n            var total = this._players.length;\n            if (total == 0) {\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else {\n                this._players.forEach(function (player) {\n                    player.parentPlayer = _this;\n                    player.onDone(function () {\n                        if (++count >= total) {\n                            _this._onFinish();\n                        }\n                    });\n                });\n            }\n        }\n        AnimationGroupPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                if (!isPresent(this.parentPlayer)) {\n                    this.destroy();\n                }\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n        AnimationGroupPlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._players.forEach(function (player) { return player.play(); });\n        };\n        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n        AnimationGroupPlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        AnimationGroupPlayer.prototype.destroy = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.destroy(); });\n        };\n        AnimationGroupPlayer.prototype.reset = function () { this._players.forEach(function (player) { return player.reset(); }); };\n        AnimationGroupPlayer.prototype.setPosition = function (p /** TODO #9100 */) {\n            this._players.forEach(function (player) { player.setPosition(p); });\n        };\n        AnimationGroupPlayer.prototype.getPosition = function () {\n            var min = 0;\n            this._players.forEach(function (player) {\n                var p = player.getPosition();\n                min = Math$1.min(p, min);\n            });\n            return min;\n        };\n        return AnimationGroupPlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationKeyframe = (function () {\n        function AnimationKeyframe(offset, styles) {\n            this.offset = offset;\n            this.styles = styles;\n        }\n        return AnimationKeyframe;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationOutput = (function () {\n        function AnimationOutput(name, phase, fullPropertyName) {\n            this.name = name;\n            this.phase = phase;\n            this.fullPropertyName = fullPropertyName;\n        }\n        return AnimationOutput;\n    }());\n\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationPlayer = (function () {\n        function AnimationPlayer() {\n        }\n        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationPlayer;\n    }());\n    var NoOpAnimationPlayer = (function () {\n        function NoOpAnimationPlayer() {\n            var _this = this;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._started = false;\n            this.parentPlayer = null;\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        /** @internal */\n        NoOpAnimationPlayer.prototype._onFinish = function () {\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        };\n        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n        NoOpAnimationPlayer.prototype.init = function () { };\n        NoOpAnimationPlayer.prototype.play = function () {\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n            }\n            this._started = true;\n        };\n        NoOpAnimationPlayer.prototype.pause = function () { };\n        NoOpAnimationPlayer.prototype.restart = function () { };\n        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n        NoOpAnimationPlayer.prototype.destroy = function () { };\n        NoOpAnimationPlayer.prototype.reset = function () { };\n        NoOpAnimationPlayer.prototype.setPosition = function (p /** TODO #9100 */) { };\n        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n        return NoOpAnimationPlayer;\n    }());\n\n    var AnimationSequencePlayer = (function () {\n        function AnimationSequencePlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._currentIndex = 0;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this.parentPlayer = null;\n            this._players.forEach(function (player) { player.parentPlayer = _this; });\n            this._onNext(false);\n        }\n        AnimationSequencePlayer.prototype._onNext = function (start) {\n            var _this = this;\n            if (this._finished)\n                return;\n            if (this._players.length == 0) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else if (this._currentIndex >= this._players.length) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                this._onFinish();\n            }\n            else {\n                var player = this._players[this._currentIndex++];\n                player.onDone(function () { return _this._onNext(true); });\n                this._activePlayer = player;\n                if (start) {\n                    player.play();\n                }\n            }\n        };\n        AnimationSequencePlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                if (!isPresent(this.parentPlayer)) {\n                    this.destroy();\n                }\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n        AnimationSequencePlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._activePlayer.play();\n        };\n        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n        AnimationSequencePlayer.prototype.restart = function () {\n            if (this._players.length > 0) {\n                this.reset();\n                this._players[0].restart();\n            }\n        };\n        AnimationSequencePlayer.prototype.reset = function () { this._players.forEach(function (player) { return player.reset(); }); };\n        AnimationSequencePlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        AnimationSequencePlayer.prototype.destroy = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.destroy(); });\n        };\n        AnimationSequencePlayer.prototype.setPosition = function (p /** TODO #9100 */) { this._players[0].setPosition(p); };\n        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n        return AnimationSequencePlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$13 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AUTO_STYLE = '*';\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link trigger trigger\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationEntryMetadata = (function () {\n        function AnimationEntryMetadata(name, definitions) {\n            this.name = name;\n            this.definitions = definitions;\n        }\n        return AnimationEntryMetadata;\n    }());\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateMetadata = (function () {\n        function AnimationStateMetadata() {\n        }\n        return AnimationStateMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link state state animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateDeclarationMetadata = (function (_super) {\n        __extends$13(AnimationStateDeclarationMetadata, _super);\n        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n            _super.call(this);\n            this.stateNameExpr = stateNameExpr;\n            this.styles = styles;\n        }\n        return AnimationStateDeclarationMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the\n     * {@link transition transition animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateTransitionMetadata = (function (_super) {\n        __extends$13(AnimationStateTransitionMetadata, _super);\n        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n            _super.call(this);\n            this.stateChangeExpr = stateChangeExpr;\n            this.steps = steps;\n        }\n        return AnimationStateTransitionMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationMetadata = (function () {\n        function AnimationMetadata() {\n        }\n        return AnimationMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link keyframes keyframes\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationKeyframesSequenceMetadata = (function (_super) {\n        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n        function AnimationKeyframesSequenceMetadata(steps) {\n            _super.call(this);\n            this.steps = steps;\n        }\n        return AnimationKeyframesSequenceMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link style style animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStyleMetadata = (function (_super) {\n        __extends$13(AnimationStyleMetadata, _super);\n        function AnimationStyleMetadata(styles, offset) {\n            if (offset === void 0) { offset = null; }\n            _super.call(this);\n            this.styles = styles;\n            this.offset = offset;\n        }\n        return AnimationStyleMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link animate animate\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationAnimateMetadata = (function (_super) {\n        __extends$13(AnimationAnimateMetadata, _super);\n        function AnimationAnimateMetadata(timings, styles) {\n            _super.call(this);\n            this.timings = timings;\n            this.styles = styles;\n        }\n        return AnimationAnimateMetadata;\n    }(AnimationMetadata));\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationWithStepsMetadata = (function (_super) {\n        __extends$13(AnimationWithStepsMetadata, _super);\n        function AnimationWithStepsMetadata() {\n            _super.call(this);\n        }\n        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationWithStepsMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link sequence sequence\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationSequenceMetadata = (function (_super) {\n        __extends$13(AnimationSequenceMetadata, _super);\n        function AnimationSequenceMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequenceMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link group group animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationGroupMetadata = (function (_super) {\n        __extends$13(AnimationGroupMetadata, _super);\n        function AnimationGroupMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n     * amount of\n     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n     * used within {@link sequence an animation sequence}, {@link group group}, or {@link transition\n     * transition}.\n     *\n     * ### Usage\n     *\n     * The `animate` function accepts two input parameters: `timing` and `styles`:\n     *\n     * - `timing` is a string based value that can be a combination of a duration with optional\n     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n     * delay=100, easing=ease-out`.\n     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n     * form.\n     * - `styles` is the style input data which can either be a call to {@link style style} or {@link\n     * keyframes keyframes}.\n     * If left empty then the styles from the destination state will be collected and used (this is\n     * useful when\n     * describing an animation step that will complete an animation by {@link\n     * transition#the-final-animate-call animating to the final state}).\n     *\n     * ```typescript\n     * // various functions for specifying timing data\n     * animate(500, style(...))\n     * animate(\"1s\", style(...))\n     * animate(\"100ms 0.5s\", style(...))\n     * animate(\"5s ease\", style(...))\n     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n     *\n     * // either style() of keyframes() can be used\n     * animate(500, style({ background: \"red\" }))\n     * animate(500, keyframes([\n     *   style({ background: \"blue\" })),\n     *   style({ background: \"red\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function animate(timing, styles) {\n        if (styles === void 0) { styles = null; }\n        var stylesEntry = styles;\n        if (!isPresent(stylesEntry)) {\n            var EMPTY_STYLE = {};\n            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n        }\n        return new AnimationAnimateMetadata(timing, stylesEntry);\n    }\n    /**\n     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n     * are useful when a series of styles must be animated/closed off\n     * at different statrting/ending times.\n     *\n     * The `group` function can either be used within a {@link sequence sequence} or a {@link transition\n     * transition}\n     * and it will only continue to the next instruction once all of the inner animation steps\n     * have completed.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `group` animation function can either consist\n     * of {@link style style} or {@link animate animate} function calls. Each call to `style()` or\n     * `animate()`\n     * within a group will be executed instantly (use {@link keyframes keyframes} or a\n     * {@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n     * time).\n     *\n     * ```typescript\n     * group([\n     *   animate(\"1s\", { background: \"black\" }))\n     *   animate(\"2s\", { color: \"white\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function group(steps) {\n        return new AnimationGroupMetadata(steps);\n    }\n    /**\n     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n     * by default when an array is passed as animation data into {@link transition transition}.)\n     *\n     * The `sequence` function can either be used within a {@link group group} or a {@link transition\n     * transition}\n     * and it will only continue to the next instruction once each of the inner animation steps\n     * have completed.\n     *\n     * To perform animation styling in parallel with other animation steps then\n     * have a look at the {@link group group} animation function.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `sequence` animation function can either consist\n     * of {@link style style} or {@link animate animate} function calls. A call to `style()` will apply\n     * the\n     * provided styling data immediately while a call to `animate()` will apply its styling\n     * data over a given time depending on its timing data.\n     *\n     * ```typescript\n     * sequence([\n     *   style({ opacity: 0 })),\n     *   animate(\"1s\", { opacity: 1 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function sequence(steps) {\n        return new AnimationSequenceMetadata(steps);\n    }\n    /**\n     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `style` declares a key/value object containing CSS properties/styles that can then\n     * be used for {@link state animation states}, within an {@link sequence animation sequence}, or as\n     * styling data for both {@link animate animate} and {@link keyframes keyframes}.\n     *\n     * ### Usage\n     *\n     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n     * pairs to be defined.\n     *\n     * ```typescript\n     * // string values are used for css properties\n     * style({ background: \"red\", color: \"blue\" })\n     *\n     * // numerical (pixel) values are also supported\n     * style({ width: 100, height: 0 })\n     * ```\n     *\n     * #### Auto-styles (using `*`)\n     *\n     * When an asterix (`*`) character is used as a value then it will be detected from the element\n     * being animated\n     * and applied as animation data when the animation starts.\n     *\n     * This feature proves useful for a state depending on layout and/or environment factors; in such\n     * cases\n     * the styles are calculated just before the animation starts.\n     *\n     * ```typescript\n     * // the steps below will animate from 0 to the\n     * // actual height of the element\n     * style({ height: 0 }),\n     * animate(\"1s\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function style(tokens) {\n        var input;\n        var offset = null;\n        if (isString(tokens)) {\n            input = [tokens];\n        }\n        else {\n            if (isArray(tokens)) {\n                input = tokens;\n            }\n            else {\n                input = [tokens];\n            }\n            input.forEach(function (entry) {\n                var entryOffset = entry['offset'];\n                if (isPresent(entryOffset)) {\n                    offset = offset == null ? parseFloat(entryOffset) : offset;\n                }\n            });\n        }\n        return new AnimationStyleMetadata(input, offset);\n    }\n    /**\n     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `state` declares an animation state within the given trigger. When a state is\n     * active within a component then its associated styles will persist on\n     * the element that the trigger is attached to (even when the animation ends).\n     *\n     * To animate between states, have a look at the animation {@link transition transition}\n     * DSL function. To register states to an animation trigger please have a look\n     * at the {@link trigger trigger} function.\n     *\n     * #### The `void` state\n     *\n     * The `void` state value is a reserved word that angular uses to determine when the element is not\n     * apart\n     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n     * associated element\n     * is void).\n     *\n     * #### The `*` (default) state\n     *\n     * The `*` state (when styled) is a fallback state that will be used if\n     * the state that is being animated is not declared within the trigger.\n     *\n     * ### Usage\n     *\n     * `state` will declare an animation state with its associated styles\n     * within the given trigger.\n     *\n     * - `stateNameExpr` can be one or more state names separated by commas.\n     * - `styles` refers to the {@link style styling data} that will be persisted on the element once\n     * the state\n     * has been reached.\n     *\n     * ```typescript\n     * // \"void\" is a reserved name for a state and is used to represent\n     * // the state in which an element is detached from from the application.\n     * state(\"void\", style({ height: 0 }))\n     *\n     * // user-defined states\n     * state(\"closed\", style({ height: 0 }))\n     * state(\"open, visible\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function state(stateNameExpr, styles) {\n        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n    }\n    /**\n     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `keyframes` specifies a collection of {@link style style} entries each optionally characterized\n     * by an `offset` value.\n     *\n     * ### Usage\n     *\n     * The `keyframes` animation function is designed to be used alongside the {@link animate animate}\n     * animation function. Instead of applying animations from where they are\n     * currently to their destination, keyframes can describe how each style entry is applied\n     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n     *\n     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n     * what percentage of the animate time the styles will be applied.\n     *\n     * ```typescript\n     * // the provided offset values describe when each backgroundColor value is applied.\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\", offset: 0 }),\n     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n     *   style({ backgroundColor: \"black\", offset: 1 })\n     * ]))\n     * ```\n     *\n     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n     * will\n     * be calculated automatically.\n     *\n     * ```typescript\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\" }) // offset = 0\n     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n     *   style({ backgroundColor: \"black\" }) // offset = 1\n     * ]))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function keyframes(steps) {\n        return new AnimationKeyframesSequenceMetadata(steps);\n    }\n    /**\n     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `transition` declares the {@link sequence sequence of animation steps} that will be run when the\n     * provided\n     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n     * which consists\n     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n     *\n     * Animation transitions are placed within an {@link trigger animation trigger}. For an transition\n     * to animate to\n     * a state value and persist its styles then one or more {@link state animation states} is expected\n     * to be defined.\n     *\n     * ### Usage\n     *\n     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n     * what the\n     * previous state is and what the current state has become. In other words, if a transition is\n     * defined that\n     * matches the old/current state criteria then the associated animation will be triggered.\n     *\n     * ```typescript\n     * // all transition/state changes are defined within an animation trigger\n     * trigger(\"myAnimationTrigger\", [\n     *   // if a state is defined then its styles will be persisted when the\n     *   // animation has fully completed itself\n     *   state(\"on\", style({ background: \"green\" })),\n     *   state(\"off\", style({ background: \"grey\" })),\n     *\n     *   // a transition animation that will be kicked off when the state value\n     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n     *   transition(\"on => off\", animate(500)),\n     *\n     *   // it is also possible to do run the same animation for both directions\n     *   transition(\"on <=> off\", animate(500)),\n     *\n     *   // or to define multiple states pairs separated by commas\n     *   transition(\"on => off, off => void\", animate(500)),\n     *\n     *   // this is a catch-all state change for when an element is inserted into\n     *   // the page and the destination state is unknown\n     *   transition(\"void => *\", [\n     *     style({ opacity: 0 }),\n     *     animate(500)\n     *   ]),\n     *\n     *   // this will capture a state change between any states\n     *   transition(\"* => *\", animate(\"1s 0s\")),\n     * ])\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * #### The final `animate` call\n     *\n     * If the final step within the transition steps is a call to `animate()` that **only**\n     * uses a timing value with **no style data** then it will be automatically used as the final\n     * animation\n     * arc for the element to animate itself to the final state. This involves an automatic mix of\n     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n     * applied state to be presented correctly.\n     *\n     * ```\n     * // start off by hiding the element, but make sure that it animates properly to whatever state\n     * // is currently active for \"myAnimationTrigger\"\n     * transition(\"void => *\", [\n     *   style({ opacity: 0 }),\n     *   animate(500)\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function transition(stateChangeExpr, steps) {\n        var animationData = isArray(steps) ? new AnimationSequenceMetadata(steps) :\n            steps;\n        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n    }\n    /**\n     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `trigger` Creates an animation trigger which will a list of {@link state state} and {@link\n     * transition transition}\n     * entries that will be evaluated when the expression bound to the trigger changes.\n     *\n     * Triggers are registered within the component annotation data under the\n     * {@link Component#animations-anchor animations section}. An animation trigger can\n     * be placed on an element within a template by referencing the name of the\n     * trigger followed by the expression value that the trigger is bound to\n     * (in the form of `[@triggerName]=\"expression\"`.\n     *\n     * ### Usage\n     *\n     * `trigger` will create an animation trigger reference based on the provided `name` value.\n     * The provided `animation` value is expected to be an array consisting of {@link state state} and\n     * {@link transition transition}\n     * declarations.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-component',\n     *   templateUrl: 'my-component-tpl.html',\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *       state(...),\n     *       state(...),\n     *       transition(...),\n     *       transition(...)\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   myStatusExp = \"something\";\n     * }\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function trigger(name, animation) {\n        return new AnimationEntryMetadata(name, animation);\n    }\n\n    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n        if (nullValue === void 0) { nullValue = null; }\n        var finalStyles = {};\n        StringMapWrapper.forEach(newStyles, function (value, prop) {\n            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n        });\n        StringMapWrapper.forEach(previousStyles, function (value, prop) {\n            if (!isPresent(finalStyles[prop])) {\n                finalStyles[prop] = nullValue;\n            }\n        });\n        return finalStyles;\n    }\n    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n        var limit = keyframes.length - 1;\n        var firstKeyframe = keyframes[0];\n        // phase 1: copy all the styles from the first keyframe into the lookup map\n        var flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n        var extraFirstKeyframeStyles = {};\n        var hasExtraFirstStyles = false;\n        StringMapWrapper.forEach(collectedStyles, function (value, prop) {\n            // if the style is already defined in the first keyframe then\n            // we do not replace it.\n            if (!flatenedFirstKeyframeStyles[prop]) {\n                flatenedFirstKeyframeStyles[prop] = value;\n                extraFirstKeyframeStyles[prop] = value;\n                hasExtraFirstStyles = true;\n            }\n        });\n        var keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n        // phase 2: normalize the final keyframe\n        var finalKeyframe = keyframes[limit];\n        ListWrapper.insert(finalKeyframe.styles.styles, 0, finalStateStyles);\n        var flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n        var extraFinalKeyframeStyles = {};\n        var hasExtraFinalStyles = false;\n        StringMapWrapper.forEach(keyframeCollectedStyles, function (value, prop) {\n            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFinalStyles = true;\n            }\n        });\n        if (hasExtraFinalStyles) {\n            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n        }\n        StringMapWrapper.forEach(flatenedFinalKeyframeStyles, function (value, prop) {\n            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFirstStyles = true;\n            }\n        });\n        if (hasExtraFirstStyles) {\n            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n        }\n        return keyframes;\n    }\n    function clearStyles(styles) {\n        var finalStyles = {};\n        StringMapWrapper.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n        return finalStyles;\n    }\n    function collectAndResolveStyles(collection, styles) {\n        return styles.map(function (entry) {\n            var stylesObj = {};\n            StringMapWrapper.forEach(entry, function (value, prop) {\n                if (value == FILL_STYLE_FLAG) {\n                    value = collection[prop];\n                    if (!isPresent(value)) {\n                        value = AUTO_STYLE;\n                    }\n                }\n                collection[prop] = value;\n                stylesObj[prop] = value;\n            });\n            return stylesObj;\n        });\n    }\n    function renderStyles(element, renderer, styles) {\n        StringMapWrapper.forEach(styles, function (value, prop) { renderer.setElementStyle(element, prop, value); });\n    }\n    function flattenStyles(styles) {\n        var finalStyles = {};\n        styles.forEach(function (entry) {\n            StringMapWrapper.forEach(entry, function (value, prop) { finalStyles[prop] = value; });\n        });\n        return finalStyles;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationStyles = (function () {\n        function AnimationStyles(styles) {\n            this.styles = styles;\n        }\n        return AnimationStyles;\n    }());\n\n    var DebugDomRootRenderer = (function () {\n        function DebugDomRootRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n        };\n        return DebugDomRootRenderer;\n    }());\n    var DebugDomRenderer = (function () {\n        function DebugDomRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n            var debugEl = new DebugElement(nativeEl, null, debugInfo);\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n            var nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n            var debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n            var debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return comment;\n        };\n        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var text = this._delegate.createText(parentElement, value, debugInfo);\n            var debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return text;\n        };\n        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            var debugParent = getDebugNode(parentElement);\n            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n                var debugElement_1 = debugParent;\n                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n            }\n            this._delegate.projectNodes(parentElement, nodes);\n        };\n        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var debugNode = getDebugNode(node);\n            if (isPresent(debugNode)) {\n                var debugParent = debugNode.parent;\n                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n                    var debugViewRootNodes = [];\n                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes.push(getDebugNode(rootNode)); });\n                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes);\n                }\n            }\n            this._delegate.attachViewAfter(node, viewRootNodes);\n        };\n        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n            viewRootNodes.forEach(function (node) {\n                var debugNode = getDebugNode(node);\n                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n                    debugNode.parent.removeChild(debugNode);\n                }\n            });\n            this._delegate.detachView(viewRootNodes);\n        };\n        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n            this._delegate.destroyView(hostElement, viewAllNodes);\n        };\n        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl)) {\n                debugEl.listeners.push(new EventListener(name, callback));\n            }\n            return this._delegate.listen(renderElement, name, callback);\n        };\n        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._delegate.listenGlobal(target, name, callback);\n        };\n        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.properties[propertyName] = propertyValue;\n            }\n            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n        };\n        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.attributes[attributeName] = attributeValue;\n            }\n            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n        };\n        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n        };\n        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.classes[className] = isAdd;\n            }\n            this._delegate.setElementClass(renderElement, className, isAdd);\n        };\n        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.styles[styleName] = styleValue;\n            }\n            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n        };\n        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            this._delegate.invokeElementMethod(renderElement, methodName, args);\n        };\n        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing);\n        };\n        return DebugDomRenderer;\n    }());\n\n    var StaticNodeDebugInfo = (function () {\n        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n            this.providerTokens = providerTokens;\n            this.componentToken = componentToken;\n            this.refTokens = refTokens;\n        }\n        return StaticNodeDebugInfo;\n    }());\n    var DebugContext = (function () {\n        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n            this._tplRow = _tplRow;\n            this._tplCol = _tplCol;\n        }\n        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n            get: function () {\n                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"component\", {\n            get: function () {\n                var staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n                    return this.injector.get(staticNodeInfo.componentToken);\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n            get: function () {\n                var componentView = this._view;\n                while (isPresent(componentView.declarationAppElement) &&\n                    componentView.type !== ViewType.COMPONENT) {\n                    componentView = componentView.declarationAppElement.parentView;\n                }\n                return isPresent(componentView.declarationAppElement) ?\n                    componentView.declarationAppElement.nativeElement :\n                    null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"injector\", {\n            get: function () { return this._view.injector(this._nodeIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n            get: function () {\n                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n                    return this._view.allNodes[this._nodeIndex];\n                }\n                else {\n                    return null;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var staticNodeInfo = this._staticNodeInfo;\n                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"source\", {\n            get: function () {\n                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"references\", {\n            get: function () {\n                var _this = this;\n                var varValues = {};\n                var staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo)) {\n                    var refs = staticNodeInfo.refTokens;\n                    StringMapWrapper.forEach(refs, function (refToken, refName) {\n                        var varValue;\n                        if (isBlank(refToken)) {\n                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n                        }\n                        else {\n                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n                        }\n                        varValues[refName] = varValue;\n                    });\n                }\n                return varValues;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An instance of this class is returned as an event parameter when an animation\n     * callback is captured for an animation either during the start or done phase.\n     *\n     * ```typescript\n     * @Component({\n     *   host: {\n     *     '[@myAnimationTrigger]': 'someExpression',\n     *     '(@myAnimationTrigger.start)': 'captureStartEvent($event)',\n     *     '(@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n     *   },\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *        // ...\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   someExpression: any = false;\n     *   captureStartEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     *\n     *   captureDoneEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     * }\n     * ```\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationTransitionEvent = (function () {\n        function AnimationTransitionEvent(_a) {\n            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime;\n            this.fromState = fromState;\n            this.toState = toState;\n            this.totalTime = totalTime;\n        }\n        return AnimationTransitionEvent;\n    }());\n\n    var ViewAnimationMap = (function () {\n        function ViewAnimationMap() {\n            this._map = new Map$1();\n            this._allPlayers = [];\n        }\n        Object.defineProperty(ViewAnimationMap.prototype, \"length\", {\n            get: function () { return this.getAllPlayers().length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewAnimationMap.prototype.find = function (element, animationName) {\n            var playersByAnimation = this._map.get(element);\n            if (isPresent(playersByAnimation)) {\n                return playersByAnimation[animationName];\n            }\n        };\n        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n            var el = this._map.get(element);\n            return el ? StringMapWrapper.values(el) : [];\n        };\n        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n            var playersByAnimation = this._map.get(element);\n            if (!isPresent(playersByAnimation)) {\n                playersByAnimation = {};\n            }\n            var existingEntry = playersByAnimation[animationName];\n            if (isPresent(existingEntry)) {\n                this.remove(element, animationName);\n            }\n            playersByAnimation[animationName] = player;\n            this._allPlayers.push(player);\n            this._map.set(element, playersByAnimation);\n        };\n        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n        ViewAnimationMap.prototype.remove = function (element, animationName) {\n            var playersByAnimation = this._map.get(element);\n            if (isPresent(playersByAnimation)) {\n                var player = playersByAnimation[animationName];\n                delete playersByAnimation[animationName];\n                var index = this._allPlayers.indexOf(player);\n                ListWrapper.removeAt(this._allPlayers, index);\n                if (StringMapWrapper.isEmpty(playersByAnimation)) {\n                    this._map.delete(element);\n                }\n            }\n        };\n        return ViewAnimationMap;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$15 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _UNDEFINED$1 = new Object();\n    var ElementInjector = (function (_super) {\n        __extends$15(ElementInjector, _super);\n        function ElementInjector(_view, _nodeIndex) {\n            _super.call(this);\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n        }\n        ElementInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            var result = _UNDEFINED$1;\n            if (result === _UNDEFINED$1) {\n                result = this._view.injectorGet(token, this._nodeIndex, _UNDEFINED$1);\n            }\n            if (result === _UNDEFINED$1) {\n                result = this._view.parentInjector.get(token, notFoundValue);\n            }\n            return result;\n        };\n        return ElementInjector;\n    }(Injector));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$14 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n    /**\n     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n     *\n     */\n    var AppView = (function () {\n        function AppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode) {\n            this.clazz = clazz;\n            this.componentType = componentType;\n            this.type = type;\n            this.viewUtils = viewUtils;\n            this.parentInjector = parentInjector;\n            this.declarationAppElement = declarationAppElement;\n            this.cdMode = cdMode;\n            this.contentChildren = [];\n            this.viewChildren = [];\n            this.viewContainerElement = null;\n            this.numberOfChecks = 0;\n            this.animationPlayers = new ViewAnimationMap();\n            this._animationListeners = new Map();\n            this.ref = new ViewRef_(this);\n            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n                this.renderer = viewUtils.renderComponent(componentType);\n            }\n            else {\n                this.renderer = declarationAppElement.parentView.renderer;\n            }\n        }\n        Object.defineProperty(AppView.prototype, \"destroyed\", {\n            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        AppView.prototype.cancelActiveAnimation = function (element, animationName, removeAllAnimations) {\n            if (removeAllAnimations === void 0) { removeAllAnimations = false; }\n            if (removeAllAnimations) {\n                this.animationPlayers.findAllPlayersByElement(element).forEach(function (player) { return player.destroy(); });\n            }\n            else {\n                var player = this.animationPlayers.find(element, animationName);\n                if (isPresent(player)) {\n                    player.destroy();\n                }\n            }\n        };\n        AppView.prototype.queueAnimation = function (element, animationName, player, totalTime, fromState, toState) {\n            var _this = this;\n            queueAnimation(player);\n            var event = new AnimationTransitionEvent({ 'fromState': fromState, 'toState': toState, 'totalTime': totalTime });\n            this.animationPlayers.set(element, animationName, player);\n            player.onDone(function () {\n                // TODO: make this into a datastructure for done|start\n                _this.triggerAnimationOutput(element, animationName, 'done', event);\n                _this.animationPlayers.remove(element, animationName);\n            });\n            player.onStart(function () { _this.triggerAnimationOutput(element, animationName, 'start', event); });\n        };\n        AppView.prototype.triggerAnimationOutput = function (element, animationName, phase, event) {\n            var listeners = this._animationListeners.get(element);\n            if (isPresent(listeners) && listeners.length) {\n                for (var i = 0; i < listeners.length; i++) {\n                    var listener = listeners[i];\n                    // we check for both the name in addition to the phase in the event\n                    // that there may be more than one @trigger on the same element\n                    if (listener.output.name == animationName && listener.output.phase == phase) {\n                        listener.handler(event);\n                        break;\n                    }\n                }\n            }\n        };\n        AppView.prototype.registerAnimationOutput = function (element, outputEvent, eventHandler) {\n            var entry = new _AnimationOutputWithHandler(outputEvent, eventHandler);\n            var animations = this._animationListeners.get(element);\n            if (!isPresent(animations)) {\n                this._animationListeners.set(element, animations = []);\n            }\n            animations.push(entry);\n        };\n        AppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {\n            this.context = context;\n            var projectableNodes;\n            switch (this.type) {\n                case ViewType.COMPONENT:\n                    projectableNodes = ensureSlotCount(givenProjectableNodes, this.componentType.slotCount);\n                    break;\n                case ViewType.EMBEDDED:\n                    projectableNodes = this.declarationAppElement.parentView.projectableNodes;\n                    break;\n                case ViewType.HOST:\n                    // Note: Don't ensure the slot count for the projectableNodes as we store\n                    // them only for the contained component view (which will later check the slot count...)\n                    projectableNodes = givenProjectableNodes;\n                    break;\n            }\n            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n            this.projectableNodes = projectableNodes;\n            return this.createInternal(rootSelectorOrNode);\n        };\n        /**\n         * Overwritten by implementations.\n         * Returns the AppElement for the host element for ViewType.HOST.\n         */\n        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n        AppView.prototype.init = function (rootNodesOrAppElements, allNodes, disposables, subscriptions) {\n            this.rootNodesOrAppElements = rootNodesOrAppElements;\n            this.allNodes = allNodes;\n            this.disposables = disposables;\n            this.subscriptions = subscriptions;\n            if (this.type === ViewType.COMPONENT) {\n                // Note: the render nodes have been attached to their host element\n                // in the ViewFactory already.\n                this.declarationAppElement.parentView.viewChildren.push(this);\n                this.dirtyParentQueriesInternal();\n            }\n        };\n        AppView.prototype.selectOrCreateHostElement = function (elementName, rootSelectorOrNode, debugInfo) {\n            var hostElement;\n            if (isPresent(rootSelectorOrNode)) {\n                hostElement = this.renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n            }\n            else {\n                hostElement = this.renderer.createElement(null, elementName, debugInfo);\n            }\n            return hostElement;\n        };\n        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n            return this.injectorGetInternal(token, nodeIndex, notFoundResult);\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n            return notFoundResult;\n        };\n        AppView.prototype.injector = function (nodeIndex) {\n            if (isPresent(nodeIndex)) {\n                return new ElementInjector(this, nodeIndex);\n            }\n            else {\n                return this.parentInjector;\n            }\n        };\n        AppView.prototype.destroy = function () {\n            if (this._hasExternalHostElement) {\n                this.renderer.detachView(this.flatRootNodes);\n            }\n            else if (isPresent(this.viewContainerElement)) {\n                this.viewContainerElement.detachView(this.viewContainerElement.nestedViews.indexOf(this));\n            }\n            this._destroyRecurse();\n        };\n        AppView.prototype._destroyRecurse = function () {\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                return;\n            }\n            var children = this.contentChildren;\n            for (var i = 0; i < children.length; i++) {\n                children[i]._destroyRecurse();\n            }\n            children = this.viewChildren;\n            for (var i = 0; i < children.length; i++) {\n                children[i]._destroyRecurse();\n            }\n            this.destroyLocal();\n            this.cdMode = ChangeDetectorStatus.Destroyed;\n        };\n        AppView.prototype.destroyLocal = function () {\n            var _this = this;\n            var hostElement = this.type === ViewType.COMPONENT ? this.declarationAppElement.nativeElement : null;\n            for (var i = 0; i < this.disposables.length; i++) {\n                this.disposables[i]();\n            }\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                this.subscriptions[i].unsubscribe();\n            }\n            this.destroyInternal();\n            this.dirtyParentQueriesInternal();\n            if (this.animationPlayers.length == 0) {\n                this.renderer.destroyView(hostElement, this.allNodes);\n            }\n            else {\n                var player = new AnimationGroupPlayer(this.animationPlayers.getAllPlayers());\n                player.onDone(function () { _this.renderer.destroyView(hostElement, _this.allNodes); });\n            }\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.destroyInternal = function () { };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.detachInternal = function () { };\n        AppView.prototype.detach = function () {\n            var _this = this;\n            this.detachInternal();\n            if (this.animationPlayers.length == 0) {\n                this.renderer.detachView(this.flatRootNodes);\n            }\n            else {\n                var player = new AnimationGroupPlayer(this.animationPlayers.getAllPlayers());\n                player.onDone(function () { _this.renderer.detachView(_this.flatRootNodes); });\n            }\n        };\n        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n            get: function () { return this.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"parent\", {\n            get: function () {\n                return isPresent(this.declarationAppElement) ? this.declarationAppElement.parentView : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n            get: function () { return flattenNestedViewRenderNodes(this.rootNodesOrAppElements); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"lastRootNode\", {\n            get: function () {\n                var lastNode = this.rootNodesOrAppElements.length > 0 ?\n                    this.rootNodesOrAppElements[this.rootNodesOrAppElements.length - 1] :\n                    null;\n                return _findLastRenderNode(lastNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.dirtyParentQueriesInternal = function () { };\n        AppView.prototype.detectChanges = function (throwOnChange) {\n            var s = _scope_check(this.clazz);\n            if (this.cdMode === ChangeDetectorStatus.Checked ||\n                this.cdMode === ChangeDetectorStatus.Errored)\n                return;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                this.throwDestroyedError('detectChanges');\n            }\n            this.detectChangesInternal(throwOnChange);\n            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n                this.cdMode = ChangeDetectorStatus.Checked;\n            this.numberOfChecks++;\n            wtfLeave(s);\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.detectChangesInternal = function (throwOnChange) {\n            this.detectContentChildrenChanges(throwOnChange);\n            this.detectViewChildrenChanges(throwOnChange);\n        };\n        AppView.prototype.detectContentChildrenChanges = function (throwOnChange) {\n            for (var i = 0; i < this.contentChildren.length; ++i) {\n                var child = this.contentChildren[i];\n                if (child.cdMode === ChangeDetectorStatus.Detached)\n                    continue;\n                child.detectChanges(throwOnChange);\n            }\n        };\n        AppView.prototype.detectViewChildrenChanges = function (throwOnChange) {\n            for (var i = 0; i < this.viewChildren.length; ++i) {\n                var child = this.viewChildren[i];\n                if (child.cdMode === ChangeDetectorStatus.Detached)\n                    continue;\n                child.detectChanges(throwOnChange);\n            }\n        };\n        AppView.prototype.markContentChildAsMoved = function (renderAppElement) { this.dirtyParentQueriesInternal(); };\n        AppView.prototype.addToContentChildren = function (renderAppElement) {\n            renderAppElement.parentView.contentChildren.push(this);\n            this.viewContainerElement = renderAppElement;\n            this.dirtyParentQueriesInternal();\n        };\n        AppView.prototype.removeFromContentChildren = function (renderAppElement) {\n            ListWrapper.remove(renderAppElement.parentView.contentChildren, this);\n            this.dirtyParentQueriesInternal();\n            this.viewContainerElement = null;\n        };\n        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n        AppView.prototype.markPathToRootAsCheckOnce = function () {\n            var c = this;\n            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n                if (c.cdMode === ChangeDetectorStatus.Checked) {\n                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n                }\n                var parentEl = c.type === ViewType.COMPONENT ? c.declarationAppElement : c.viewContainerElement;\n                c = isPresent(parentEl) ? parentEl.parentView : null;\n            }\n        };\n        AppView.prototype.eventHandler = function (cb) { return cb; };\n        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n        return AppView;\n    }());\n    var DebugAppView = (function (_super) {\n        __extends$14(DebugAppView, _super);\n        function DebugAppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode, staticNodeDebugInfos) {\n            _super.call(this, clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode);\n            this.staticNodeDebugInfos = staticNodeDebugInfos;\n            this._currentDebugContext = null;\n        }\n        DebugAppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {\n            this._resetDebug();\n            try {\n                return _super.prototype.create.call(this, context, givenProjectableNodes, rootSelectorOrNode);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n            this._resetDebug();\n            try {\n                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.detach = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.detach.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.destroyLocal = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.destroyLocal.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n            this._resetDebug();\n            try {\n                _super.prototype.detectChanges.call(this, throwOnChange);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n        };\n        DebugAppView.prototype._rethrowWithContext = function (e) {\n            if (!(e instanceof ViewWrappedError)) {\n                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n                    this.cdMode = ChangeDetectorStatus.Errored;\n                }\n                if (isPresent(this._currentDebugContext)) {\n                    throw new ViewWrappedError(e, this._currentDebugContext);\n                }\n            }\n        };\n        DebugAppView.prototype.eventHandler = function (cb) {\n            var _this = this;\n            var superHandler = _super.prototype.eventHandler.call(this, cb);\n            return function (event) {\n                _this._resetDebug();\n                try {\n                    return superHandler(event);\n                }\n                catch (e) {\n                    _this._rethrowWithContext(e);\n                    throw e;\n                }\n            };\n        };\n        return DebugAppView;\n    }(AppView));\n    function _findLastRenderNode(node) {\n        var lastNode;\n        if (node instanceof AppElement) {\n            var appEl = node;\n            lastNode = appEl.nativeElement;\n            if (isPresent(appEl.nestedViews)) {\n                // Note: Views might have no root nodes at all!\n                for (var i = appEl.nestedViews.length - 1; i >= 0; i--) {\n                    var nestedView = appEl.nestedViews[i];\n                    if (nestedView.rootNodesOrAppElements.length > 0) {\n                        lastNode = _findLastRenderNode(nestedView.rootNodesOrAppElements[nestedView.rootNodesOrAppElements.length - 1]);\n                    }\n                }\n            }\n        }\n        else {\n            lastNode = node;\n        }\n        return lastNode;\n    }\n    var _AnimationOutputWithHandler = (function () {\n        function _AnimationOutputWithHandler(output, handler) {\n            this.output = output;\n            this.handler = handler;\n        }\n        return _AnimationOutputWithHandler;\n    }());\n\n    var __core_private__ = {\n        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n        ChangeDetectorStatus: ChangeDetectorStatus,\n        CHANGE_DETECTION_STRATEGY_VALUES: CHANGE_DETECTION_STRATEGY_VALUES,\n        constructDependencies: constructDependencies,\n        LifecycleHooks: LifecycleHooks,\n        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n        ReflectorReader: ReflectorReader,\n        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n        AppElement: AppElement,\n        AppView: AppView,\n        DebugAppView: DebugAppView,\n        NgModuleInjector: NgModuleInjector,\n        registerModuleFactory: registerModuleFactory,\n        ViewType: ViewType,\n        MAX_INTERPOLATION_VALUES: MAX_INTERPOLATION_VALUES,\n        checkBinding: checkBinding,\n        flattenNestedViewRenderNodes: flattenNestedViewRenderNodes,\n        interpolate: interpolate,\n        ViewUtils: ViewUtils,\n        VIEW_ENCAPSULATION_VALUES: VIEW_ENCAPSULATION_VALUES,\n        ViewMetadata: ViewMetadata,\n        DebugContext: DebugContext,\n        StaticNodeDebugInfo: StaticNodeDebugInfo,\n        devModeEqual: devModeEqual,\n        UNINITIALIZED: UNINITIALIZED,\n        ValueUnwrapper: ValueUnwrapper,\n        RenderDebugInfo: RenderDebugInfo,\n        TemplateRef_: TemplateRef_,\n        ReflectionCapabilities: ReflectionCapabilities,\n        makeDecorator: makeDecorator,\n        DebugDomRootRenderer: DebugDomRootRenderer,\n        EMPTY_ARRAY: EMPTY_ARRAY,\n        EMPTY_MAP: EMPTY_MAP,\n        pureProxy1: pureProxy1,\n        pureProxy2: pureProxy2,\n        pureProxy3: pureProxy3,\n        pureProxy4: pureProxy4,\n        pureProxy5: pureProxy5,\n        pureProxy6: pureProxy6,\n        pureProxy7: pureProxy7,\n        pureProxy8: pureProxy8,\n        pureProxy9: pureProxy9,\n        pureProxy10: pureProxy10,\n        castByValue: castByValue,\n        Console: Console,\n        reflector: reflector,\n        Reflector: Reflector,\n        NoOpAnimationPlayer: NoOpAnimationPlayer,\n        AnimationPlayer: AnimationPlayer,\n        AnimationSequencePlayer: AnimationSequencePlayer,\n        AnimationGroupPlayer: AnimationGroupPlayer,\n        AnimationKeyframe: AnimationKeyframe,\n        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n        balanceAnimationKeyframes: balanceAnimationKeyframes,\n        flattenStyles: flattenStyles,\n        clearStyles: clearStyles,\n        renderStyles: renderStyles,\n        collectAndResolveStyles: collectAndResolveStyles,\n        AnimationStyles: AnimationStyles,\n        AnimationOutput: AnimationOutput,\n        ANY_STATE: ANY_STATE,\n        DEFAULT_STATE: DEFAULT_STATE,\n        EMPTY_STATE: EMPTY_STATE,\n        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n        ComponentStillLoadingError: ComponentStillLoadingError\n    };\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n    exports.AnimationPlayer = AnimationPlayer;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.AfterContentChecked = AfterContentChecked;\n    exports.AfterContentInit = AfterContentInit;\n    exports.AfterViewChecked = AfterViewChecked;\n    exports.AfterViewInit = AfterViewInit;\n    exports.DoCheck = DoCheck;\n    exports.OnChanges = OnChanges;\n    exports.OnDestroy = OnDestroy;\n    exports.OnInit = OnInit;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Class = Class;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.OpaqueToken = OpaqueToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Injectable = Injectable;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.CollectionChangeRecord = CollectionChangeRecord;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.__core_private__ = __core_private__;\n    exports.AUTO_STYLE = AUTO_STYLE;\n    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n    exports.AnimationStateMetadata = AnimationStateMetadata;\n    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n    exports.AnimationMetadata = AnimationMetadata;\n    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n    exports.animate = animate;\n    exports.group = group;\n    exports.sequence = sequence;\n    exports.style = style;\n    exports.state = state;\n    exports.keyframes = keyframes;\n    exports.transition = transition;\n    exports.trigger = trigger;\n\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/core/bundles/core.umd.js\n ** module id = 2\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Subject.js\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this);\n        }\n        else {\n            sink.add(this._subscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Observable.js\n ** module id = 4\n ** module chunks = 0\n **/","\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/root.js\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber();\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/toSubscriber.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Subscriber.js\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isFunction.js\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.closed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Subscription.js\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isArray.js\n ** module id = 10\n ** module chunks = 0\n **/","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isObject.js\n ** module id = 11\n ** module chunks = 0\n **/","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/tryCatch.js\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/errorObject.js\n ** module id = 13\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/UnsubscriptionError.js\n ** module id = 14\n ** module chunks = 0\n **/","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Observer.js\n ** module id = 15\n ** module chunks = 0\n **/","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/symbol/rxSubscriber.js\n ** module id = 16\n ** module chunks = 0\n **/","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/symbol/observable.js\n ** module id = 17\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/ObjectUnsubscribedError.js\n ** module id = 18\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/SubjectSubscription.js\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../node_modules/retyped-extjs-tsd-ambient/ExtJS.d.ts\" />\nimport {AfterContentInit,AfterViewInit,Attribute,Component,ComponentFactory,ComponentRef,ComponentFactoryResolver,ContentChildren,\n\tElementRef,EventEmitter,OnInit,QueryList,Type,ViewChild,ViewContainerRef\n} from '@angular/core';\n\nexport class extbase{\n\tpublic extjsObject: any;\n\tprivate rootElement: any;\n\tprivate listeners = {};\n\tprivate xtype: string;\n\tprivate inputs: any;\n\tprivate nofit: any;\n\n\tconstructor(\n\t\tprivate myElement: any, \n\t\tprivate componentFactoryResolver: ComponentFactoryResolver, \n\t\tprivate viewContainerRef: ViewContainerRef, \n\t\tprivate metaData: any\n\t\t) {\n\t\tthis.xtype = metaData.XTYPE;\n\t\tthis.inputs = metaData.INPUTNAMES;\n\t\tthis.rootElement = myElement.nativeElement;\n\t\tlet me = this;\n\t\tthis['ready'] = new EventEmitter();\n\t\tmetaData.OUTPUTS.forEach( (event: any, n: any) => {\n\t\t\t(<any>this)[event.name] = new EventEmitter();\n\t\t});\n\t}\n\n\tAfterContentInit(ExtJSBaseRef) {\n\t\tvar extJSRootComponentRef : ViewContainerRef = ExtJSBaseRef.first;\n\t\tvar firstExtJS = extJSRootComponentRef['_element'].component.extjsObject;\n\t\tfirstExtJS.setRenderTo(this.myElement.nativeElement);\n\t\tvar ExtJSComponentRefArray: any = ExtJSBaseRef.toArray();\n\t\tvar arrayLength = ExtJSComponentRefArray.length;\n\t\tfor (var i = 1; i < arrayLength; i++) {\n\t\t\tvar obj = ExtJSComponentRefArray[i]['_element'].component.extjsObject;\n\t\t\tfirstExtJS.add(obj);\n\t\t}\n\t}\n\n\tOnInit(dynamicTarget,metadata?) {\n\t\tlet me: any = this;\n\t\tlet o: any = {};\n\t\to.listeners = {};\n\t\tvar eventtasks = this.myElement.nativeElement.__zone_symbol__eventTasks;\n\t\tif (eventtasks != undefined) {\n\t\t\teventtasks.forEach(function (eventtask, index, array) {\n\t\t\t\tvar eventIndex = metadata.OUTPUTNAMES.indexOf(eventtask.data.eventName);\n\t\t\t\tif (eventIndex != -1) {\n\t\t\t\t\tvar eventname = eventtask.data.eventName;\n\t\t\t\t\tvar eventparameters = metadata.OUTPUTS[eventIndex].parameters\n\t\t\t\t\to.listeners[eventname] = function() {\n\t\t\t\t\t\t\tlet parameters: any = eventparameters;\n\t\t\t\t\t\t\tlet parms = parameters.split(',');\n\t\t\t\t\t\t\tlet args = Array.prototype.slice.call(arguments);\n\t\t\t\t\t\t\tlet o: any = {};\n\t\t\t\t\t\t\tfor (let i = 0, j = parms.length; i < j; i++ ) {\n\t\t\t\t\t\t\t\t\to[parms[i]] = args[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tme[eventname].next(o);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\to.xtype = me.xtype;\n\t\tif (me.xtype != '') { o.xtype = me.xtype; }\n\t\tfor (var i = 0; i < me.metaData.INPUTNAMES.length; i++) { \n\t\t\tvar prop = me.metaData.INPUTNAMES[i];\n\t\t\t//need to handle listeners coming in here\n\t\t\tif (me[prop] != undefined && \n\t\t\t\t\tprop != 'listeners' && \n\t\t\t\t\tprop != 'config' && \n\t\t\t\t\tprop != 'nofit') { \n\t\t\t\to[prop] = me[prop]; \n\t\t\t};\n\t\t}\n\t\tif ('true' == me.fit) {\n\t\t\to.top=0, \n\t\t\to.left=0, \n\t\t\to.width='100%', \n\t\t\to.height='100%'\n\t\t}\n\t\tif (me.config !== {} ) {\n\t\t\tExt.apply(o, me.config);\n\t\t};\n\t\tme.extjsObject = Ext.create(o);\n\n\t\tvar componentFactory: ComponentFactory<any>;\n\t\tvar type: Type<any>;\n\n\t\tif (me.component != undefined) {\n\t\t\ttype = me.component;\n\t\t\tcomponentFactory = me.componentFactoryResolver.resolveComponentFactory(type);\n\t\t\tme.componentRef = dynamicTarget.createComponent(componentFactory);\n\t\t\t//me.componentRef.instance['buttontext'] = 'testing';\n\t\t\tvar node = me.extjsObject.innerElement.dom;\n\t\t\tnode.appendChild(me.componentRef['_hostElement'].nativeElement);\n\t\t}\n\t\tif (me.parent != undefined) {\n\t\t\tme.parent.insert(0, me.extjsObject);\n\t\t}\n\t\tme.ready.next(me);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/angular2-extjs/ext.base.ts\n **/","import {Component,ViewChild,ElementRef,ComponentFactoryResolver,ViewContainerRef,forwardRef,ContentChildren,QueryList} from '@angular/core';\nimport { extbase } from './ext.base';\n// Ext Class - Ext.grid.Grid\nclass extgridMetaData {\n\tpublic static XTYPE: string = 'grid';\n\tpublic static INPUTNAMES: string[] = [\n\t\t'activeItem',\n\t\t'allowDeselect',\n\t\t'alwaysOnTop',\n\t\t'autoDestroy',\n\t\t'axisLock',\n\t\t'baseCls',\n\t\t'bind',\n\t\t'border',\n\t\t'bottom',\n\t\t'bufferSize',\n\t\t'cardSwitchAnimation',\n\t\t'centered',\n\t\t'cls',\n\t\t'columns',\n\t\t'container',\n\t\t'contentEl',\n\t\t'control',\n\t\t'controller',\n\t\t'data',\n\t\t'defaultListenerScope',\n\t\t'defaults',\n\t\t'defaultType',\n\t\t'deferEmptyText',\n\t\t'deselectOnContainerClick',\n\t\t'disabled',\n\t\t'disableSelection',\n\t\t'disclosureProperty',\n\t\t'docked',\n\t\t'draggable',\n\t\t'emptyText',\n\t\t'enterAnimation',\n\t\t'exitAnimation',\n\t\t'flex',\n\t\t'floated',\n\t\t'fullscreen',\n\t\t'grouped',\n\t\t'height',\n\t\t'hidden',\n\t\t'hideAnimation',\n\t\t'hideHeaders',\n\t\t'hideOnMaskTap',\n\t\t'html',\n\t\t'id',\n\t\t'indexBar',\n\t\t'infinite',\n\t\t'inline',\n\t\t'itemCls',\n\t\t'itemConfig',\n\t\t'itemHeight',\n\t\t'itemId',\n\t\t'itemMap',\n\t\t'items',\n\t\t'itemTpl',\n\t\t'keyMap',\n\t\t'keyMapEnabled',\n\t\t'keyMapTarget',\n\t\t'lastFocused',\n\t\t'lastSelected',\n\t\t'layout',\n\t\t'left',\n\t\t'listeners',\n\t\t'loadingText',\n\t\t'locked',\n\t\t'manageBorders',\n\t\t'margin',\n\t\t'masked',\n\t\t'maxHeight',\n\t\t'maxItemCache',\n\t\t'maxWidth',\n\t\t'minHeight',\n\t\t'minWidth',\n\t\t'modal',\n\t\t'mode',\n\t\t'onItemDisclosure',\n\t\t'padding',\n\t\t'pinHeaders',\n\t\t'pinnedHeader',\n\t\t'plugins',\n\t\t'pressedDelay',\n\t\t'preventSelectionOnDisclose',\n\t\t'publishes',\n\t\t'record',\n\t\t'reference',\n\t\t'referenceHolder',\n\t\t'refreshHeightOnUpdate',\n\t\t'relative',\n\t\t'renderTo',\n\t\t'right',\n\t\t'rowLines',\n\t\t'scrollable',\n\t\t'scrollDock',\n\t\t'scrollToTopOnRefresh',\n\t\t'selection',\n\t\t'session',\n\t\t'shadow',\n\t\t'shim',\n\t\t'showAnimation',\n\t\t'store',\n\t\t'striped',\n\t\t'style',\n\t\t'styleHtmlCls',\n\t\t'styleHtmlContent',\n\t\t'title',\n\t\t'toFrontOnShow',\n\t\t'tooltip',\n\t\t'top',\n\t\t'totalColumnWidth',\n\t\t'touchAction',\n\t\t'tpl',\n\t\t'tplWriteMode',\n\t\t'translatable',\n\t\t'triggerCtEvent',\n\t\t'triggerEvent',\n\t\t'twoWayBindable',\n\t\t'ui',\n\t\t'useBodyElement',\n\t\t'useComponents',\n\t\t'userCls',\n\t\t'useSimpleItems',\n\t\t'variableHeights',\n\t\t'viewModel',\n\t\t'width',\n\t\t'x',\n\t\t'xtype',\n\t\t'y',\n\t\t'zIndex',\n\t\t'fit',\n\t\t'config'\n];\n\tpublic static OUTPUTS: any[] = [\n\t\t{name:'activate',parameters:'newActiveItem,grid,oldActiveItem'},\n\t\t{name:'add',parameters:''},\n\t\t{name:'added',parameters:'grid,container,index'},\n\t\t{name:'beforehide',parameters:'grid'},\n\t\t{name:'beforeorientationchange',parameters:''},\n\t\t{name:'beforeselectionchange',parameters:'grid'},\n\t\t{name:'beforeshow',parameters:'grid'},\n\t\t{name:'beforetofront',parameters:'grid'},\n\t\t{name:'columnadd',parameters:'grid,column,index'},\n\t\t{name:'columnhide',parameters:'grid,column'},\n\t\t{name:'columnmove',parameters:'grid,column,fromIndex,toIndex'},\n\t\t{name:'columnremove',parameters:'grid,column'},\n\t\t{name:'columnresize',parameters:'grid,column,width'},\n\t\t{name:'columnshow',parameters:'grid,column'},\n\t\t{name:'columnsort',parameters:'grid,column,direction'},\n\t\t{name:'containertap',parameters:''},\n\t\t{name:'deactivate',parameters:'oldActiveItem,grid,newActiveItem'},\n\t\t{name:'deselect',parameters:'grid,record,supressed'},\n\t\t{name:'destroy',parameters:''},\n\t\t{name:'disclose',parameters:'grid,record,target,index,e'},\n\t\t{name:'erased',parameters:'grid'},\n\t\t{name:'floatingchange',parameters:'grid,positioned'},\n\t\t{name:'fullscreen',parameters:'grid'},\n\t\t{name:'hide',parameters:'grid'},\n\t\t{name:'initialize',parameters:'grid'},\n\t\t{name:'itemdoubletap',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemmouseenter',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemmouseleave',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemsingletap',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemswipe',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemtap',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemtaphold',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemtouchend',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemtouchmove',parameters:'grid,index,target,record,e'},\n\t\t{name:'itemtouchstart',parameters:'grid,index,target,record,e'},\n\t\t{name:'move',parameters:''},\n\t\t{name:'moved',parameters:'grid,container,toIndex,fromIndex'},\n\t\t{name:'orientationchange',parameters:''},\n\t\t{name:'painted',parameters:'element'},\n\t\t{name:'positionedchange',parameters:'grid,positioned'},\n\t\t{name:'refresh',parameters:'grid'},\n\t\t{name:'remove',parameters:''},\n\t\t{name:'removed',parameters:'grid,container,index'},\n\t\t{name:'renderedchange',parameters:'grid,item,rendered'},\n\t\t{name:'resize',parameters:'element'},\n\t\t{name:'select',parameters:'grid,record'},\n\t\t{name:'selectionchange',parameters:'grid,records'},\n\t\t{name:'show',parameters:'grid'},\n\t\t{name:'tofront',parameters:'grid'},\n\t\t{name:'updatedata',parameters:'grid,newData'},\n\t\t{name:'ready',parameters:''}\n];\n\tpublic static OUTPUTNAMES: string[] = [\n\t\t'activate',\n\t\t'add',\n\t\t'added',\n\t\t'beforehide',\n\t\t'beforeorientationchange',\n\t\t'beforeselectionchange',\n\t\t'beforeshow',\n\t\t'beforetofront',\n\t\t'columnadd',\n\t\t'columnhide',\n\t\t'columnmove',\n\t\t'columnremove',\n\t\t'columnresize',\n\t\t'columnshow',\n\t\t'columnsort',\n\t\t'containertap',\n\t\t'deactivate',\n\t\t'deselect',\n\t\t'destroy',\n\t\t'disclose',\n\t\t'erased',\n\t\t'floatingchange',\n\t\t'fullscreen',\n\t\t'hide',\n\t\t'initialize',\n\t\t'itemdoubletap',\n\t\t'itemmouseenter',\n\t\t'itemmouseleave',\n\t\t'itemsingletap',\n\t\t'itemswipe',\n\t\t'itemtap',\n\t\t'itemtaphold',\n\t\t'itemtouchend',\n\t\t'itemtouchmove',\n\t\t'itemtouchstart',\n\t\t'move',\n\t\t'moved',\n\t\t'orientationchange',\n\t\t'painted',\n\t\t'positionedchange',\n\t\t'refresh',\n\t\t'remove',\n\t\t'removed',\n\t\t'renderedchange',\n\t\t'resize',\n\t\t'select',\n\t\t'selectionchange',\n\t\t'show',\n\t\t'tofront',\n\t\t'updatedata',\n\t\t'ready'\n];\n}\n@Component({\n  selector: 'ext-' + extgridMetaData.XTYPE,\n\tinputs: extgridMetaData.INPUTNAMES,\n\toutputs: extgridMetaData.OUTPUTNAMES,\n\tproviders: [{provide: extbase, useExisting: forwardRef(() => extgrid)}],\n\ttemplate: '<template #dynamic></template>'\n})\nexport class extgrid extends extbase {\n\tconstructor(eRef:ElementRef,resolver:ComponentFactoryResolver,vcRef:ViewContainerRef) {\n\t\tsuper(eRef,resolver,vcRef,extgridMetaData);\n\t}\n\t@ContentChildren(extbase,{read:ViewContainerRef}) extbaseRef:QueryList<ViewContainerRef>;\n\t@ViewChild('dynamic',{read:ViewContainerRef}) dynamicRef:ViewContainerRef;\n\tngAfterContentInit() {this.AfterContentInit(this.extbaseRef);}\n\tngOnInit() {this.OnInit(this.dynamicRef,extgridMetaData);}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/angular2-extjs/ext.grid.ts\n **/"],"sourceRoot":""}